{"version":3,"sources":["utils/storage.jsx","utils/api.jsx","utils/AuthProvider.jsx","components/Navbar.jsx","components/MainContent.jsx","components/Footer.jsx","components/Base.jsx","utils/auth.jsx","utils/alerta.jsx","utils/loading.jsx","components/objetos/Formulario.jsx","components/containers/default/login.jsx","components/containers/default/cadastro.jsx","components/erro.jsx","components/containers/cliente/ClienteForm.jsx","components/objetos/Table.jsx","components/objetos/Modal.jsx","components/objetos/Input.jsx","components/objetos/Select.jsx","components/objetos/Label.jsx","interface/CustomInterface.jsx","interface/CobrancaInterface.jsx","interface/ClienteInterface.jsx","interface/UsuarioInterface.jsx","services/ClienteService.jsx","components/containers/cliente/useClienteForm.jsx","components/containers/cliente/useClienteModal.jsx","components/objetos/useConfirmationModal.jsx","services/CobrancaService.jsx","services/UsuarioService.jsx","components/containers/cliente/ClienteLista.jsx","components/containers/cobranca/CobrancaForm.jsx","components/containers/cobranca/CobrancaView.jsx","components/containers/cobranca/CobrancaLista.jsx","router.jsx","components/containers/cliente/ClienteView.jsx","App.js","index.js"],"names":["getCookie","name","cookies","document","cookie","split","cookieName","cookieValue","map","c","trim","setCookie","value","timeInMinutes","arguments","length","undefined","options","path","expires","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","BASE_URL","process","async","request","url","method","data","formattedUrl","endsWith","apiUrl","token","Cookies","get","success","axios","headers","error","errorMessage","errorMessages","response","message","status","getErrorMessage","AuthContext","createContext","useAuth","useContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","useState","checkAuthentication","authenticated","useEffect","_jsx","Provider","ItensDefault","_jsxs","_Fragment","className","Link","to","ItensAssinante","Navbar","menuState","menu","getElementById","icon","classList","remove","add","style","background","fontSize","type","onClick","toggleMenu","contains","set","id","MainContent","Footer","href","target","Base","marginBottom","xmlns","viewBox","preserveAspectRatio","d","useAuthentication","setCookieValue","console","alerta","text","container","containerId","time","toastContainer","querySelector","createElement","body","appendChild","toastElement","setAttribute","toastHeader","strongElement","innerText","buttonClose","toastBody","Modal","Toast","show","setTimeout","removeChild","showCustomAlert","existingAlert","alertTypes","class","default","alertClass","iconClass","alertDiv","closeButton","iconSpan","createTextNode","insertBefore","firstChild","showAlert","loading","targetContainer","HTMLElement","loadingContainerId","display","loadingContainer","minHeight","width","spinner","spinnerText","textContent","insertAdjacentElement","Formulario","headerIcon","headerTitle","formBody","footerLeftButtonText","footerLeftButtonAction","footerRightButtonText","footerRightButtonAction","isDark","LoginForm","email","setEmail","senha","setSenha","navigate","useNavigate","title","footerChildren","handleRegister","autoComplete","onChange","e","htmlFor","CadastroForm","formData","setFormData","nome","handleInputChange","prevData","handleSubmit","register","limpar","Button","FloatingLabel","controlId","label","Form","Control","placeholder","Erro","location","useLocation","queryParams","URLSearchParams","search","descricao","urlRedirect","ClienteForm","clienteId","initialData","Nome","Documento","Telefone","Endereco","UsuarioId","variant","endpoint","submit","Table","dataHeader","columns","rows","onClickBtn","iconBtn","buttonText","colTitle","index","scope","row","rowIndex","cell","cellIndex","role","actions","action","actionIndex","useCustomModal","setShow","CustomModal","footer","backdrop","keyboard","contentClassName","dialogClassName","Header","textDecoration","color","Body","Input","Select","forwardRef","ref","props","renderOptions","Array","isArray","option","defaultProps","Label","CustomInterface","constructor","this","created","updated","toApiPayload","toISOString","CobrancaInterface","super","id_cobranca","valor","pago","cliente_id","fromApiResponse","ClienteInterface","documento","telefone","endereco","usuarioId","cobrancas","initializeCobrancas","cobrancasData","cobranca","UsuarioInterface","id_usuario","clientes","getClienteById","getAllClientes","cliente","createCliente","clienteDTO","updateCliente","deleteCliente","useClienteForm","isEditable","formValues","setFormValues","tipo_cliente","setCliente","showMessage","fetchCliente","useCallback","ClienteService","getCliente","sucesso","clienteData","handleChange","event","prevValues","errors","push","validatePayload","join","renderForm","renderLabels","useUsuarioModal","setClienteId","openModal","id_cliente","view","ClienteModalComponent","useConfirmationModal","setTitle","description","setDescription","onConfirm","setOnConfirm","closeModal","handleConfirm","onConfirmCallback","ConfirmationModalComponent","getCobrancaById","getAllCobrancas","createCobranca","cobrancaDTO","updateCobranca","deleteCobranca","getUsuarioById","getAllUsuarios","usuario","usuarioDTO","updateUsuario","deleteUsuario","ClienteLista","setClientes","openClienteModal","useClienteModal","openConfirmationModal","fetchClientes","getClientesByEmpresa","Alerta","prevClientes","filter","handleDelete","CobrancaForm","cobrancaId","Descricao","Valor","Data","Pago","ClienteId","checked","step","Check","CobrancaView","CobrancaLista","Router","Routes","Route","element","Login","Cadastro","Navigate","ClienteView","App","RouterConfig","createRoot","render"],"mappings":"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","file":"static/js/main.638eafe8.chunk.js","sourcesContent":["/**\r\n * Método para obter um item do localStorage.\r\n * @param {string} key - A chave do item que deseja obter.\r\n * @returns {any|null} O valor do item do localStorage, ou null se não encontrado.\r\n */\r\nexport const getLocalStorageItem = (key) => {\r\n  // Obtém o item do localStorage pela chave\r\n  const item = localStorage.getItem(key);\r\n  // Se o item for encontrado, retorna seu valor como objeto JavaScript, caso contrário, retorna null\r\n  return item ? JSON.parse(item) : null;\r\n};\r\n\r\n/**\r\n * Método para definir um item no localStorage.\r\n * @param {string} key - A chave do item que deseja definir.\r\n * @param {any} value - O valor do item que deseja armazenar.\r\n */\r\nexport const setLocalStorageItem = (key, value) => {\r\n  // Converte o valor em uma string JSON e armazena no localStorage com a chave fornecida\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\n/**\r\n * Função para obter o valor de um cookie pelo nome.\r\n * @param {string} name - O nome do cookie que deseja obter.\r\n * @returns {string|null} O valor do cookie ou null se o cookie não for encontrado.\r\n */\r\nexport const getCookie = (name) => {\r\n  // Divide todos os cookies da string document.cookie em um array\r\n  const cookies = document.cookie.split(';');\r\n  \r\n  // Itera por cada cookie no array\r\n  for (let cookie of cookies) {\r\n    // Divide cada cookie em nome e valor e remove espaços em branco\r\n    const [cookieName, cookieValue] = cookie.split('=').map(c => c.trim());\r\n    \r\n    // Verifica se o nome do cookie corresponde ao nome solicitado\r\n    if (cookieName === name) {\r\n      // Retorna o valor do cookie se encontrado\r\n      return cookieValue;\r\n    }\r\n  }\r\n  \r\n  // Retorna null se o cookie não for encontrado\r\n  return null;\r\n};\r\nexport const setCookie = (name, value, timeInMinutes = 60, options = {}) => {\r\n  // Define o caminho padrão como '/' e mescla com as opções fornecidas\r\n  options = {\r\n    path: '/',\r\n    ...options\r\n  };\r\n\r\n  // Calcula a data de expiração com base no tempo em minutos\r\n  const expires = new Date();\r\n  expires.setTime(expires.getTime() + (timeInMinutes * 60 * 1000));\r\n  options.expires = expires.toUTCString();\r\n\r\n  // Converte a data de expiração para UTCString se for uma instância de Date\r\n  if (options.expires instanceof Date) {\r\n    options.expires = options.expires.toUTCString();\r\n  }\r\n\r\n  // Constrói a string do cookie com nome e valor codificados\r\n  let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\r\n\r\n  // Adiciona as opções à string do cookie\r\n  for (let optionKey in options) {\r\n    updatedCookie += '; ' + optionKey;\r\n    let optionValue = options[optionKey];\r\n    if (optionValue !== true) {\r\n      updatedCookie += '=' + optionValue;\r\n    }\r\n  }\r\n\r\n  // Define o cookie no documento\r\n  document.cookie = updatedCookie;\r\n};\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\n// URL base configurável através de variáveis de ambiente\r\nconst BASE_URL = process.env.REACT_APP_API_URL || '/api/';\r\n\r\n// Função genérica para fazer requisições API\r\nexport default async function request(url, method = 'GET', data = null) {\r\n  try {\r\n    // Adiciona a barra no final da URL se não estiver presente\r\n    const formattedUrl = url.endsWith('/') ? url : `${url}/`;\r\n    const apiUrl = `${BASE_URL}${formattedUrl}`;\r\n\r\n    // Pega o token de autenticação, se houver\r\n    const token = Cookies.get('authToken');\r\n\r\n    const response = await axios({\r\n      url: apiUrl,\r\n      method,  // Método HTTP (GET, POST, etc.)\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token ? `Bearer ${token}` : undefined, // Cabeçalho de autenticação, se existir\r\n      },\r\n      data, // Dados para POST ou PUT\r\n    });\r\n\r\n    return { success: true, ...response.data };\r\n  } catch (error) {\r\n    const errorMessage = getErrorMessage(error);\r\n    return { success: false, message: errorMessage };\r\n  }\r\n}\r\n\r\n// Função para gerar a mensagem de erro\r\nfunction getErrorMessage(error) {\r\n  const errorMessages = {\r\n    400: 'Solicitação inválida.',\r\n    401: 'Não autorizado.',\r\n    403: 'Acesso negado.',\r\n    404: 'Recurso não encontrado.',\r\n    500: 'Erro interno do servidor.',\r\n  };\r\n\r\n  if (error.response) {\r\n    return error.response.data.message || errorMessages[error.response.status] || 'Erro na requisição.';\r\n  } else if (error.request) {\r\n    return 'Nenhuma resposta recebida do servidor.';\r\n  } else {\r\n    return error.message || 'Erro ao configurar a requisição.';\r\n  }\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { getCookie, setCookie } from './storage';\r\nimport request from './api';\r\n\r\n// Cria o contexto de autenticação\r\nconst AuthContext = createContext();\r\n\r\n// Hook para acessar o contexto de autenticação\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // Inicializa o estado de autenticação com um valor booleano\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => getCookie('authentication') === 'true');\r\n\r\n  const checkAuthentication = async () => {\r\n    try {\r\n      const response = await request(\"public/CheckAuthentication/\");\r\n      const authenticated = response.success && response.authenticated;\r\n      setCookie('authentication', authenticated);\r\n      setIsAuthenticated(authenticated);\r\n    } catch (error) {\r\n      setCookie('authentication', false);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuthentication();\r\n  }, []);\r\n\r\n  // Incluindo setIsAuthenticated no contexto\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, checkAuthentication, setIsAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../utils/AuthProvider'; // Usar o useAuth do contexto\r\nimport Cookies from 'js-cookie';\r\n\r\n// Componentes para o menu padrão\r\nconst ItensDefault = () => (\r\n  <>\r\n    <li className=\"text-center d-inline-flex col-auto\">\r\n      <Link className=\"nav-link text-decoration-none text-white nav-link-icon px-0 align-items-center\" to=\"/login\">\r\n        <i className=\"bi bi-person\"></i>\r\n        <span className=\"text-decoration-none\">Login</span>\r\n      </Link>\r\n    </li>\r\n    <li className=\"text-center d-inline-flex col-auto\">\r\n      <Link className=\"nav-link text-decoration-none text-white nav-link-icon px-0 align-items-center\" to=\"/cadastro\">\r\n        <i className=\"bi bi-toggle\"></i> Cadastro\r\n      </Link>\r\n    </li>\r\n  </>\r\n);\r\n\r\n// Componentes para o menu quando o usuário está autenticado\r\nconst ItensAssinante = () => (\r\n  <>\r\n    <li className=\"d-inline-flex col-auto\">\r\n      <Link className=\"nav-link\" to=\"/clientes-list\">\r\n        <i className=\"bi bi-speedometer2\"></i> Clientes\r\n      </Link>\r\n    </li>\r\n    <li className=\"d-inline-flex col-auto\">\r\n      <Link className=\"nav-link nav-link-icon\" to=\"/cobrancas-list\">\r\n        <i className=\"bi bi-people\"></i> Cobranças\r\n      </Link>\r\n    </li>\r\n  </>\r\n);\r\n\r\nconst Navbar = () => {\r\n  const { isAuthenticated } = useAuth(); // Obtém o estado de autenticação do contexto\r\n\r\n  useEffect(() => {\r\n    const menuState = Cookies.get('menuState');\r\n    const menu = document.getElementById('navbarNav');\r\n    const icon = document.getElementById('menuIcon');\r\n    if (menuState === 'visible') {\r\n      menu.classList.remove('d-none');\r\n      icon.classList.remove('bi-box-arrow-down');\r\n      icon.classList.add('bi-box-arrow-in-up');\r\n    } else {\r\n      menu.classList.add('d-none');\r\n      icon.classList.remove('bi-box-arrow-in-up');\r\n      icon.classList.add('bi-box-arrow-down');\r\n    }\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    const menu = document.getElementById('navbarNav');\r\n    const icon = document.getElementById('menuIcon');\r\n    if (menu.classList.contains('d-none')) {\r\n      menu.classList.remove('d-none');\r\n      icon.classList.remove('bi-box-arrow-down');\r\n      icon.classList.add('bi-box-arrow-in-up');\r\n      Cookies.set('menuState', 'visible');\r\n    } else {\r\n      menu.classList.add('d-none');\r\n      icon.classList.remove('bi-box-arrow-in-up');\r\n      icon.classList.add('bi-box-arrow-down');\r\n      Cookies.set('menuState', 'hidden');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar-expand-md navbar-dark pt-3 pb-2 font-montserrat\" style={{ background: '#0D1B2A' }}>\r\n      <div className=\"p-0 m-0 mx-auto container-xl row\">\r\n        <div className=\"p-0 m-0 col-12 container justify-content-between row align-items-center\">\r\n          <Link className=\"col text-sm-center text-start text-decoration-none\" to=\"/\">\r\n            <p className=\"mb-2 text-white\" style={{ fontSize: '20px' }}>\r\n              Localize Project\r\n            </p>\r\n          </Link>\r\n          <button className=\"btn text-white col-auto d-inline-flex ms-auto d-sm-none\" type=\"button\" onClick={toggleMenu}>\r\n            <span className=\"bi bi-box-arrow-in-up\" id=\"menuIcon\" style={{ fontSize: '20px' }}></span>\r\n          </button>\r\n        </div>\r\n        <div className=\"col-12 d-sm-block d-none\" id=\"navbarNav\">\r\n          <ul className=\"text-decoration-none text-center text-white my-2 row mx-auto mx-sm-0 col-auto container-xl font-monospace text-center text-sm-end justify-content-center align-items-center\">\r\n            {isAuthenticated ? <ItensAssinante /> : <ItensDefault />}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst MainContent = ({ children }) => {\r\n  return (\r\n    <div id=\"content\">\r\n      <div id=\"id_alert_container\" className=\"container mx-auto\"></div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\" style={{ background: '#0D1B2A' }}>\r\n      <div className=\"font-montserrat  redound-3 px-3 text-center d-flex-inline\">\r\n        <p className=\"m-0 p-0 text-white rounded \" style={{ fontSize: '0.8rem' }}>\r\n          Software Desenvolvido por <a className=\"text-white\" href=\"https://br.linkedin.com/in/samuelmedeirosbc\" target=\"blank\">@Samuel Medeiros</a>.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport MainContent from './MainContent';\r\nimport Footer from './Footer';\r\nimport 'react-bootstrap';\r\nconst Base = ({ children }) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid m-0 p-0 wrapper  \" style={{ background: '#f5f7fa' }}>\r\n        <div className=\"wrapper\">\r\n          <div className=\"content\">\r\n            <Navbar  />\r\n            <MainContent>\r\n              {children}\r\n            </MainContent>\r\n          </div>\r\n          <div className=\"footer\">\r\n\r\n            <div className=\"custom-shape-divider-bottom-1708368458 mt-3\" style={{ marginBottom: '-2px' }}>\r\n              <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\r\n                <path d=\"M985.66,92.83C906.67,72,823.78,31,743.84,14.19c-82.26-17.34-168.06-16.33-250.45.39-57.84,11.73-114,31.07-172,41.86A600.21,600.21,0,0,1,0,27.35V120H1200V95.8C1132.19,118.92,1055.71,111.31,985.66,92.83Z\" className=\"shape-fill\"></path>\r\n              </svg>\r\n            </div>\r\n            <Footer  />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Base;\r\n","import { getCookie, setCookie } from './storage';\r\nimport request from './api';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useAuthentication = () => {\r\n  const [cookieValue, setCookieValue] = useState(() => getCookie('authentication'));\r\n\r\n  useEffect(() => {\r\n    const checkAuthentication = async () => {\r\n      try {\r\n        const response = await request(\"public/CheckAuthentication/\");\r\n\r\n        if (response.success) {\r\n          const isAuthenticated = response.authenticated;\r\n          setCookie('authentication', isAuthenticated); // Define o cookie com base na resposta\r\n          setCookieValue(isAuthenticated); // Atualiza o estado com base na resposta\r\n        } else {\r\n          console.error('Autenticação falhou:', response.message);\r\n          setCookie('authentication', false); // Define o cookie como false em caso de falha\r\n          setCookieValue(false); // Atualiza o estado como false\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao verificar autenticação:', error);\r\n        setCookie('authentication', false); // Define o cookie como false em caso de erro\r\n        setCookieValue(false); // Atualiza o estado como false\r\n      }\r\n    };\r\n\r\n    // Executa a verificação apenas se o valor do cookie for null (ou seja, não definido)\r\n    if (cookieValue === null) {\r\n      checkAuthentication();\r\n    }\r\n  }, [cookieValue]);\r\n\r\n  return cookieValue;\r\n};\r\n","import { Modal } from 'bootstrap';  // Importação do modal do Bootstrap\r\n\r\nfunction showAlert(type, text, containerId) {\r\n  const container = document.getElementById(containerId) || document.getElementById('id_alert_container');\r\n  if (!container) return;\r\n\r\n  // Remove any existing alert\r\n  const existingAlert = container.querySelector('.alert');\r\n  if (existingAlert) {\r\n    container.removeChild(existingAlert);\r\n  }\r\n\r\n  // Define alert types\r\n  const alertTypes = {\r\n    1: { class: 'alert-success', icon: 'bi-check-circle-fill' },\r\n    2: { class: 'alert-danger', icon: 'bi-exclamation-circle-fill' },\r\n    3: { class: 'alert-warning', icon: 'bi-exclamation-triangle-fill' },\r\n    default: { class: 'alert-info', icon: 'bi-info-circle-fill' },\r\n  };\r\n\r\n  const { class: alertClass, icon: iconClass } = alertTypes[type] || alertTypes.default;\r\n\r\n  // Create the alert div\r\n  const alertDiv = document.createElement('div');\r\n  alertDiv.classList.add('alert', alertClass, 'alert-dismissible', 'fade', 'show', 'mt-2', 'bt-2');\r\n  alertDiv.setAttribute('role', 'alert');\r\n\r\n  // Create and add the close button\r\n  const closeButton = document.createElement('button');\r\n  closeButton.classList.add('btn-close');\r\n  closeButton.setAttribute('type', 'button');\r\n  closeButton.setAttribute('data-bs-dismiss', 'alert');\r\n  closeButton.setAttribute('aria-label', 'Close');\r\n  alertDiv.appendChild(closeButton);\r\n\r\n  // Create and add the icon\r\n  const iconSpan = document.createElement('span');\r\n  iconSpan.classList.add('bi', iconClass);\r\n  iconSpan.setAttribute('aria-hidden', 'true');\r\n  alertDiv.appendChild(iconSpan);\r\n\r\n  // Add the text message\r\n  alertDiv.appendChild(document.createTextNode(' ' + text));\r\n\r\n  // Prepend the alert to the container (to place it above other elements)\r\n  container.insertBefore(alertDiv, container.firstChild);\r\n}\r\n\r\nfunction showCustomAlert(text, containerId, time) {\r\n  let toastContainer = document.querySelector('.toast-container');\r\n\r\n  if (!toastContainer) {\r\n    toastContainer = document.createElement('div');\r\n    toastContainer.classList.add('toast-container', 'position-fixed', 'top-0', 'end-0', 'p-3');\r\n    document.body.appendChild(toastContainer);\r\n  }\r\n\r\n  const toastElement = document.createElement('div');\r\n  toastElement.classList.add('toast');\r\n  toastElement.setAttribute('role', 'alert');\r\n  toastElement.setAttribute('aria-live', 'assertive');\r\n  toastElement.setAttribute('aria-atomic', 'true');\r\n\r\n  const toastHeader = document.createElement('div');\r\n  toastHeader.classList.add('toast-header');\r\n  const strongElement = document.createElement('strong');\r\n  strongElement.classList.add('me-auto', 'Font-Gliker', 'fw-bold');\r\n  strongElement.innerText = '{ C P S }';\r\n  const buttonClose = document.createElement('button');\r\n  buttonClose.setAttribute('type', 'button');\r\n  buttonClose.classList.add('btn-close');\r\n  buttonClose.setAttribute('data-bs-dismiss', 'toast');\r\n  buttonClose.setAttribute('aria-label', 'Close');\r\n\r\n  const toastBody = document.createElement('div');\r\n  toastBody.classList.add('toast-body', 'bg-white', 'rounded-bottom', 'shadow-lg');\r\n  toastBody.innerText = text;\r\n\r\n  toastHeader.appendChild(strongElement);\r\n  toastHeader.appendChild(buttonClose);\r\n  toastElement.appendChild(toastHeader);\r\n  toastElement.appendChild(toastBody);\r\n  toastContainer.appendChild(toastElement);\r\n\r\n  const toastBootstrap = Modal.Toast(toastElement);\r\n  toastBootstrap.show();\r\n\r\n  setTimeout(() => {\r\n    toastContainer.removeChild(toastElement);\r\n  }, time);\r\n}\r\n\r\nexport default function alerta(text, type = null, container = false, time = 180000) {\r\n  if (type === null) {\r\n    showCustomAlert(text, container, time);\r\n  } else {\r\n    showAlert(type, text, container);\r\n  }\r\n}\r\n","export default function loading(status, container) {\r\n  let targetContainer = null;\r\n\r\n  if (typeof container === 'string') {\r\n    // Se o container for uma string, assume-se que é o ID do elemento\r\n    targetContainer = document.getElementById(container);\r\n    if (!targetContainer) {\r\n      console.error(`Container com ID '${container}' não encontrado.`);\r\n      return;\r\n    }\r\n  } else if (container instanceof HTMLElement) {\r\n    // Se o container for um elemento HTMLElement, utiliza diretamente\r\n    targetContainer = container;\r\n  } else {\r\n    console.error('Tipo inválido para o container. Deve ser uma string (ID do elemento) ou HTMLElement.');\r\n    return;\r\n  }\r\n\r\n  const loadingContainerId = `${targetContainer.id}-loading`;\r\n\r\n  if (status === true) {\r\n    // Oculta o container original\r\n    targetContainer.style.display = 'none';\r\n\r\n    // Cria e insere o container de loading\r\n    const loadingContainer = document.createElement('div');\r\n    loadingContainer.id = loadingContainerId;\r\n    loadingContainer.classList.add('loading', 'd-flex', 'justify-content-center', 'align-items-center', 'text-primary');\r\n    \r\n    // Adiciona estilos inline para garantir tamanho significativo\r\n    loadingContainer.style.minHeight = '200px'; // Defina a altura mínima desejada\r\n    loadingContainer.style.width = '100%'; // Preenche a largura do container pai\r\n\r\n    const spinner = document.createElement('div');\r\n    spinner.classList.add('spinner-border');\r\n    spinner.setAttribute('role', 'status');\r\n\r\n    const spinnerText = document.createElement('span');\r\n    spinnerText.classList.add('visually-hidden');\r\n    spinnerText.textContent = 'Loading...';\r\n\r\n    spinner.appendChild(spinnerText);\r\n    loadingContainer.appendChild(spinner);\r\n    targetContainer.insertAdjacentElement('afterend', loadingContainer);\r\n  } else if (status === false) {\r\n    // Remove o container de loading\r\n    const loadingContainer = document.getElementById(loadingContainerId);\r\n    if (loadingContainer) {\r\n      loadingContainer.remove();\r\n    }\r\n\r\n    // Mostra o container original novamente\r\n    targetContainer.style.display = '';\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n// Componente genérico de formulário\r\nconst Formulario = ({\r\n    headerIcon,\r\n    headerTitle,\r\n    formBody,\r\n    footerLeftButtonText,\r\n    footerLeftButtonAction,\r\n    footerRightButtonText,\r\n    footerRightButtonAction,\r\n    isDark = false, // Atributo isDark com valor padrão false\r\n}) => {\r\n    return (\r\n        <div className='container my-3'>\r\n            <div className={`card ${isDark ? 'bg-dark' : ''}`}>\r\n                <div className={`card-header d-flex align-items-center border-bottom ${isDark ? 'bg-dark text-white' : ''}`}>\r\n                    <i className={`bi bi-${headerIcon} fs-5 me-2 ${isDark ? 'text-white' : 'text-dark'}`}></i>\r\n                    <p className={`fs-5 font-monospace fw-bold mb-0 ${isDark ? 'text-white' : 'text-dark'}`}>\r\n                        {headerTitle}\r\n                    </p>\r\n                </div>\r\n                <form className={`container card-body ${isDark ? 'bg-dark text-white' : ''}`} id=\"formulario\">\r\n                    {formBody}\r\n                </form>\r\n                <div className={`card-footer d-flex justify-content-${footerRightButtonAction ? 'between' : 'center'} ${isDark ? 'bg-dark' : ''}`}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary btn-sm\"\r\n                        onClick={footerLeftButtonAction}\r\n                    >\r\n                        {footerLeftButtonText}\r\n                    </button>\r\n                    {footerRightButtonAction && (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={footerRightButtonAction}\r\n                        >\r\n                            {footerRightButtonText}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Formulario;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport request from 'src/utils/api';\r\nimport alerta from 'src/utils/alerta';\r\nimport loading from 'src/utils/loading';\r\nimport Formulario from '@objetos/Formulario';\r\nimport { useAuth  } from 'src/utils/AuthProvider';\r\nimport { setCookie } from 'src/utils/storage';\r\nconst LoginForm = () => {\r\n\r\n  const { setIsAuthenticated } = useAuth();\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => email.trim() !== '' && senha.trim() !== '';\r\n  const handleLogin = async () => {\r\n    if (!validateForm()) {\r\n      alerta('Preencha todos os campos!', 2);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      loading(true, 'form_login');\r\n      const response = await request('public/login/', 'POST', { email, senha });\r\n      if (response.success) {\r\n        // Armazena o estado de autenticação\r\n        setCookie('authentication', true); // Assume que o login foi bem-sucedido\r\n        setIsAuthenticated(true); // Atualiza o estado no contexto\r\n        navigate('/usuarios'); // Redireciona para a página de usuários\r\n      } else {\r\n        alerta(response.message, 2, 'form_login');\r\n      }\r\n    } catch (error) {\r\n      alerta(error.message || 'Erro ao fazer login', 2, 'form_login');\r\n    } finally {\r\n      loading(false, 'form_login');\r\n    }\r\n  };\r\n  const handleRegister = () => {\r\n    // Redireciona para a página de cadastro\r\n    navigate('/cadastro');\r\n  };\r\n\r\n  return (\r\n    <form id=\"form_login\" className=\"form-signin container mx-auto my-2\">\r\n      <Formulario\r\n        icon=\"person\"\r\n        title=\"Acessar Conta\"\r\n        footerChildren={\r\n          <div className=\"col-12 d-flex  justify-content-between\">\r\n        \r\n          <button\r\n            className=\"btn btn-secondary btn-sm me-2  mt-2\"\r\n            type=\"button\"\r\n            onClick={handleRegister}\r\n          >\r\n            <i className=\"bi bi-person-plus\"></i> Cadastre-se\r\n          </button>\r\n          <button\r\n            id=\"submit-btn\"\r\n            className=\"btn btn-primary  me-2 btn-sm\"\r\n            type=\"button\"\r\n            onClick={handleLogin}\r\n          >\r\n            <i className=\"bi bi-box-arrow-in-right\"></i> Entrar\r\n          </button>\r\n          </div>\r\n        }\r\n      >\r\n        {/* Modal Body */}\r\n        <div className=\"form-floating mb-2\">\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            autoComplete=\"off\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <label htmlFor=\"email\">E-mail</label>\r\n        </div>\r\n\r\n        <div className=\"form-floating mb-2\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            autoComplete=\"off\"\r\n            id=\"senha\"\r\n            name=\"senha\"\r\n            value={senha}\r\n            onChange={(e) => setSenha(e.target.value)}\r\n          />\r\n          <label htmlFor=\"senha\">Senha</label>\r\n        </div>\r\n      </Formulario>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\r\nimport alerta from 'src/utils/alerta';\r\nimport request from 'src/utils/api';\r\nimport loading from 'src/utils/loading';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Formulario from '@objetos/Formulario';\r\n\r\nconst CadastroForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    nome: '',\r\n    email: '',\r\n    senha: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const register = async () => {\r\n    const { nome, email, senha } = formData;\r\n    try {\r\n      loading(true, \"form\");\r\n      const response = await request(\"public/Cadastro/\", \"POST\", { nome, email, senha });\r\n      if (response.success===true) {\r\n        alerta(response.message, 1);\r\n        navigate('/login');\r\n      } else {\r\n        alerta(response.message, 2);\r\n      }\r\n    } catch (error) {\r\n      alerta('Erro ao registrar. Por favor, tente novamente.', 2);\r\n    } finally {\r\n      loading(false, \"form\");\r\n    }\r\n  };\r\n\r\n  const validate = () => formData.nome && formData.email && formData.senha;\r\n\r\n  const handleSubmit = async () => {\r\n    if (validate()) {\r\n      await register();\r\n    } else {\r\n      alerta('Por favor, preencha todos os campos obrigatórios.', 2);\r\n    }\r\n  };\r\n\r\n  const limpar = () => {\r\n    setFormData({\r\n      nome: '',\r\n      email: '',\r\n      senha: '',\r\n    });\r\n  };\r\n\r\n  const renderFooter = () => (\r\n    <div className=\"col-12 d-flex justify-content-between\">\r\n      <Button\r\n        className=\"btn btn-secondary btn-sm me-2 mt-2\"\r\n        type=\"button\"\r\n        onClick={limpar} // Attach the clear function here\r\n      >\r\n        Limpar\r\n      </Button>\r\n      <Button\r\n        id=\"submit-btn\"\r\n        className=\"btn btn-primary me-2 btn-sm\"\r\n        type=\"button\"\r\n        onClick={handleSubmit}\r\n      >\r\n       Cadastrar\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  const renderContainer = () => (\r\n    <>\r\n      <FloatingLabel controlId=\"nome\" className=\"mb-2\" label=\"Nome\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Nome\"\r\n          name=\"nome\"\r\n          value={formData.nome}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel controlId=\"email\" className=\"mb-2\" label=\"E-mail\">\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"E-mail\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel controlId=\"senha\" className=\"mb-2\" label=\"Senha\">\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Senha\"\r\n          name=\"senha\"\r\n          value={formData.senha}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <form id=\"form\" className=\"form-signin container mx-auto my-2\">\r\n      <Formulario\r\n        icon=\"person\"\r\n        title=\"Cadastro Usuário\"\r\n        footerChildren={renderFooter()}\r\n      >\r\n        {renderContainer()}\r\n      </Formulario>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CadastroForm;\r\n","// src/components/erro.js\r\nimport React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Erro = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const title = queryParams.get('title') || 'Ocorreu um erro!';\r\n  const descricao = queryParams.get('descricao') || 'Desculpe-nos pelo inconveniente.';\r\n  const urlRedirect = queryParams.get('urlRedirect') || '';\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <div className=\"container-erro my-4 container  justify-content-between align-items-center text-center mx-0 mx-sm-auto\">\r\n        <h1 className=\"h1-erro\">{title}</h1>\r\n        <p className=\"p-erro\">{descricao}</p>\r\n        {urlRedirect && (\r\n          <a href={urlRedirect} className=\"btn btn-primary\">Voltar</a>\r\n        )}\r\n        <p>Por favor, tente novamente mais tarde ou entre em contato conosco para obter assistência.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nErro.propTypes = {\r\n  title: PropTypes.string,\r\n  descricao: PropTypes.string,\r\n  urlRedirect: PropTypes.string,\r\n};\r\n\r\nexport default Erro;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\r\nimport alerta from 'src/utils/alerta';\r\nimport request from 'src/utils/api';\r\nimport loading from 'src/utils/loading';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ClienteForm({ clienteId, initialData }) {\r\n  const [formData, setFormData] = useState({\r\n    Nome: initialData?.Nome || '',\r\n    Documento: initialData?.Documento || '',\r\n    Telefone: initialData?.Telefone || '',\r\n    Endereco: initialData?.Endereco || '',\r\n    UsuarioId: initialData?.UsuarioId || '', // Presumindo que UsuarioId seja fornecido internamente\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const submit = async () => {\r\n    try {\r\n      loading(true, \"ContainerFormulario\");\r\n      const endpoint = clienteId ? `public/clientes/${clienteId}/` : 'public/clientes/';\r\n      const method = clienteId ? 'PUT' : 'POST';\r\n      const response = await request(endpoint, method, formData);\r\n      if (response.success) {\r\n        alerta(response.message, 1);\r\n        navigate('/clientes'); // Navega para a lista de clientes ou para a página desejada\r\n      } else {\r\n        alerta(response.message, 2);\r\n      }\r\n    } catch (error) {\r\n      alerta('Erro ao salvar os dados. Por favor, tente novamente.', 2);\r\n    } finally {\r\n      loading(false, \"ContainerFormulario\");\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    // Implemente a validação dos dados do formulário aqui\r\n    return formData.Nome && formData.Documento && formData.Telefone && formData.Endereco;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (validate()) {\r\n      await submit();\r\n    } else {\r\n      alerta('Por favor, preencha todos os campos obrigatórios.', 2);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"card justify-content-center\" id=\"ContainerFormulario\">\r\n        <div className=\"card-header\">\r\n          <h1 className=\"fw-bolder mt-2 mb-1 fs-6 font-monospace\">\r\n            <span className=\"bi bi-person me-2\"></span>{clienteId ? 'Editar Cliente' : 'Novo Cliente'}\r\n          </h1>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <FloatingLabel controlId=\"Nome\" className=\"mb-2\" label=\"Nome\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Nome\"\r\n              name=\"Nome\"\r\n              value={formData.Nome}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Documento\" className=\"mb-2\" label=\"Documento\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Documento\"\r\n              name=\"Documento\"\r\n              value={formData.Documento}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Telefone\" className=\"mb-2\" label=\"Telefone\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Telefone\"\r\n              name=\"Telefone\"\r\n              value={formData.Telefone}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Endereco\" className=\"mb-2\" label=\"Endereço\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Endereço\"\r\n              name=\"Endereco\"\r\n              value={formData.Endereco}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end card-footer\">\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            {clienteId ? 'Salvar' : 'Cadastrar'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClienteForm;\r\n","import React from 'react';\r\n\r\nconst Table = ({ dataHeader, columns, rows }) => {\r\n  return (\r\n    <div className=\"my-3 container p-1\">\r\n      {/* Título e botão de ação */}\r\n      <div className=\"d-flex container justify-content-between mb-2 row container mx-auto p-1\">\r\n        <h1 className=\"text-start col\" style={{ fontSize: '1.0rem' }}>\r\n          <i className={`bi bi-${dataHeader.icon}-fill`}></i> {dataHeader.title}\r\n        </h1>\r\n        <button\r\n          onClick={dataHeader.onClickBtn}\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm col-auto mx-auto me-sm-2\"\r\n          style={{ fontSize: '0.8rem' }}\r\n        >\r\n          <i className={`bi bi-${dataHeader.iconBtn} me-1`} style={{ fontSize: '0.8rem' }}></i>\r\n          {dataHeader.buttonText}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Tabela */}\r\n      <div className=\"container p-3 mx-auto bg-dark rounded\">\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover table-sm table-dark\">\r\n            <thead>\r\n              <tr className=\"font-monospace\" style={{ fontSize: '0.8rem' }}>\r\n                {columns.map((colTitle, index) => (\r\n                  <th key={index} scope=\"col\" className={`${index === 0 ? 'text-start' : index === columns.length - 1 ? 'text-end' : 'text-center'}`}>\r\n                    {colTitle}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-group-divider\">\r\n              {rows.map((row, rowIndex) => (\r\n                <tr key={rowIndex} className=\"font-monospace\" style={{ fontSize: '0.8rem' }}>\r\n                  {row.data.map((cell, cellIndex) => (\r\n                    <td key={cellIndex} className={`${cellIndex === 0 ? 'text-start' : 'text-center'} align-middle`}>\r\n                      {cell}\r\n                    </td>\r\n                  ))}\r\n                  <td className=\"text-end align-middle\">\r\n                    <div className=\"btn-group-sm btn-group\" role=\"group\" aria-label=\"Ações\">\r\n                      {row.actions.map((action, actionIndex) => (\r\n                        <button\r\n                          key={actionIndex}\r\n                          type=\"button\"\r\n                          className={`btn btn-${action.type} btn-sm`}\r\n                          onClick={action.onClick}\r\n                          title={action.name}\r\n                        >\r\n                          <i className={action.icon}></i>\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n// Hook customizado para controlar o modal\r\nexport const useCustomModal = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const CustomModal = ({ icon, title, children, footer }) => (\r\n    <Modal\r\n      show={show}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      contentClassName=\"bg-light\"\r\n      dialogClassName=\"modal-md modal-dialog-centered  modal-dialog-scrollable  \"\r\n      aria-labelledby=\"staticBackdropLabel\"\r\n    >\r\n      <Modal.Header className=\"text-dark py-2\">\r\n        <h5 id=\"staticBackdropLabel\" className=\"modal-title fs-5 font-monospace text-black fw-bolder\">\r\n          <i className={`me-2 bi bi-${icon}`}></i>\r\n          {title}\r\n        </h5>\r\n        <Button\r\n          variant=\"link\"\r\n          onClick={() => setShow(false)}  // <-- Corrigido aqui\r\n          className=\"ms-auto mt-0 p-0\"\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n        >\r\n          <i className=\"bi bi-x fw-bold\" style={{ fontSize: '25px' }} />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"text-dark\">\r\n        {children}\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"text-dark py-2 d-flex  justify-content-between\">\r\n        {footer}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n\r\n  return { CustomModal, setShow };\r\n};\r\n","import React from 'react';\r\n\r\n// Refatorando o Input com React.memo e forwardRef para otimizar a renderização\r\nconst Input = (({ id, name, type = 'text', label, value, onChange }) => {\r\n    return (\r\n        <div className={`form-floating mb-2 `}>\r\n            <input\r\n                type={type}\r\n                className=\"form-control\"\r\n                id={id}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange} // Certifique-se de que onChange está sendo usado corretamente\r\n            />\r\n            <label htmlFor={id}>{label}</label>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Input\r\n","import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Select = forwardRef(({ id, name, options = [], value, onChange, className = '', ...props }, ref) => {\r\n    // Verifica se options é um array e não é nulo ou indefinido\r\n    const renderOptions = Array.isArray(options) ? options : [];\r\n\r\n    return (\r\n        <div className={`form-floating mb-2 ${className}`}>\r\n            <select\r\n                id={id}\r\n                name={name}\r\n                className=\"form-control\"\r\n                value={value}\r\n                onChange={onChange}\r\n                ref={ref}\r\n                {...props}\r\n            >\r\n                {renderOptions.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <label htmlFor={id}>{props.label}</label>\r\n        </div>\r\n    );\r\n});\r\n\r\nSelect.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    options: PropTypes.arrayOf(PropTypes.shape({\r\n        value: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    className: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n};\r\n\r\nSelect.defaultProps = {\r\n    value: '',\r\n    onChange: () => { },\r\n    className: '',\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\n\r\nconst Label = ({ htmlFor, title, value, iconClass }) => (\r\n    <div className=\"form-group\">\r\n        <label className=\"col-auto fw-bolder col-form-label fw-bold pe-1\" htmlFor={htmlFor}>\r\n            {iconClass && <i className={`bi me-2 bi-${iconClass}`}></i>}\r\n            {title}\r\n        </label>\r\n        {value && <span id={htmlFor}>{value}</span>}\r\n    </div>\r\n);\r\n\r\nexport default Label;\r\n","export default class CustomInterface {\r\n    constructor(data = {}) {\r\n        // Inicializa as propriedades comuns 'created' e 'updated'\r\n        this.created = data.created ? new Date(data.created) : new Date();  // Data de criação (pode vir da API ou ser a data atual)\r\n        this.updated = data.updated ? new Date(data.updated) : new Date();  // Data de última atualização (pode vir da API ou ser a data atual)\r\n    }\r\n\r\n    // Método que transforma a instância da interface no formato para ser enviado à API\r\n    toApiPayload() {\r\n        return {\r\n            created: this.created.toISOString(),  // Converte a data para o formato ISO\r\n            updated: this.updated.toISOString(),  // Converte a data para o formato ISO\r\n        };\r\n    }\r\n}\r\n","import CustomInterface from './CustomInterface';\r\n\r\nexport default class CobrancaInterface extends CustomInterface {\r\n    constructor(data = {}) {\r\n        // Chamando o construtor da classe base para inicializar 'created' e 'updated'\r\n        super(data);\r\n\r\n        // Inicializações específicas para CobrancaInterface\r\n        this.id_cobranca = data.id_cobranca || '';\r\n        this.descricao = data.descricao || '';\r\n        this.valor = data.valor || 0.0;\r\n        this.data = data.data || new Date(); // Data padrão para o campo 'data'\r\n        this.pago = data.pago || false;\r\n        this.cliente_id = data.cliente_id || '';\r\n    }\r\n\r\n    static fromApiResponse(data) {\r\n        return new CobrancaInterface(data);\r\n    }\r\n\r\n    toApiPayload() {\r\n        return {\r\n            ...super.toApiPayload(), // Inclui 'created' e 'updated' da classe base\r\n            id_cobranca: this.id_cobranca,\r\n            descricao: this.descricao,\r\n            valor: this.valor,\r\n            data: this.data,\r\n            pago: this.pago,\r\n            cliente_id: this.cliente_id,\r\n        };\r\n    }\r\n}\r\n","import CustomInterface from './CustomInterface';\r\nimport CobrancaInterface from './CobrancaInterface';\r\n\r\nexport default class ClienteInterface extends CustomInterface {\r\n    constructor(data = {}) {\r\n        super(data);  // Chama o construtor da CustomInterface para inicializar 'created' e 'updated'\r\n\r\n        // Inicializações específicas para ClienteInterface\r\n        this.id = data.id || '';  // UUID do cliente\r\n        this.nome = data.nome || '';  // Nome do cliente\r\n        this.documento = data.documento || '';  // Documento do cliente (CPF/CNPJ)\r\n        this.telefone = data.telefone || '';  // Telefone do cliente\r\n        this.endereco = data.endereco || '';  // Endereço do cliente\r\n        this.usuarioId = data.usuarioId || '';  // UUID do usuário relacionado a esse cliente\r\n\r\n        // Inicializa a lista de cobranças\r\n        this.cobrancas = this.initializeCobrancas(data.cobrancas);\r\n    }\r\n\r\n    // Método privado para inicializar a lista de cobranças\r\n    initializeCobrancas(cobrancasData) {\r\n        return Array.isArray(cobrancasData) \r\n            ? cobrancasData.map(cobranca => new CobrancaInterface(cobranca))\r\n            : [];  // Retorna uma lista vazia se não for um array\r\n    }\r\n\r\n    // Método estático para criar uma instância da interface a partir da resposta da API\r\n    static fromApiResponse(data) {\r\n        return new ClienteInterface(data);\r\n    }\r\n\r\n    // Método para preparar os dados para enviar à API\r\n    toApiPayload() {\r\n        return {\r\n            ...super.toApiPayload(),  // Inclui 'created' e 'updated' da CustomInterface\r\n            id: this.id,\r\n            nome: this.nome,\r\n            documento: this.documento,\r\n            telefone: this.telefone,\r\n            endereco: this.endereco,\r\n            usuarioId: this.usuarioId,\r\n            cobrancas: this.cobrancas.map(cobranca => cobranca.toApiPayload()),  // Converte cada cobrança para o formato de payload\r\n        };\r\n    }\r\n}\r\n","import CustomInterface from './CustomInterface';\r\n\r\nexport default class UsuarioInterface extends CustomInterface {\r\n    constructor(data = {}) {\r\n        // Chamando o construtor da classe base para inicializar 'created' e 'updated'\r\n        super(data);\r\n\r\n        // Inicializações específicas para UsuarioInterface\r\n        this.id_usuario = data.id_usuario || '';\r\n        this.nome = data.nome || '';\r\n        this.email = data.email || '';\r\n        this.senha = data.senha || '';\r\n        this.clientes = data.clientes || []; // Lista de clientes associados ao usuário\r\n    }\r\n\r\n    static fromApiResponse(data) {\r\n        return new UsuarioInterface(data);\r\n    }\r\n\r\n    toApiPayload() {\r\n        return {\r\n            ...super.toApiPayload(), // Inclui 'created' e 'updated' da classe base\r\n            id_usuario: this.id_usuario,\r\n            nome: this.nome,\r\n            email: this.email,\r\n            senha: this.senha,\r\n            clientes: this.clientes,\r\n        };\r\n    }\r\n}\r\n","import { ClienteInterface } from '@interface';\r\nimport request from '@utils/api';  \r\n\r\nclass ClienteService {\r\n    // Método para obter um cliente pelo ID\r\n    async getClienteById(id) {\r\n        const response = await request(`cliente/${id}`, 'GET');\r\n        return response.success ? ClienteInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para obter todos os clientes\r\n    async getAllClientes() {\r\n        const response = await request('cliente', 'GET');\r\n        return response.success ? response.data.map(cliente => ClienteInterface.fromApiResponse(cliente)) : [];\r\n    }\r\n\r\n    // Método para criar um novo cliente\r\n    async createCliente(clienteDTO) {\r\n        const response = await request('cliente', 'POST', clienteDTO);\r\n        return response.success ? ClienteInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para atualizar um cliente existente\r\n    async updateCliente(id, clienteDTO) {\r\n        const response = await request(`cliente/${id}`, 'PUT', clienteDTO);\r\n        return response.success ? ClienteInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para excluir um cliente\r\n    async deleteCliente(id) {\r\n        const response = await request(`cliente/${id}`, 'DELETE');\r\n        return response.success;\r\n    }\r\n}\r\n\r\nexport default new ClienteService();\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Input from '@objetos/Input';\r\nimport Select from '@objetos/Select';\r\nimport Label from '@objetos/Label';\r\nimport ClienteService  from '@services/ClienteService';\r\nimport ClienteInterface from '@interface/ClienteInterface';\r\nimport alerta from '@utils/alerta';\r\n\r\nconst useClienteForm = (id, isEditable) => {\r\n    const [formValues, setFormValues] = useState({\r\n        nome: '',\r\n        telefone: '',\r\n        tipo_cliente: '',\r\n        descricao: '',\r\n        endereco: '',\r\n    });\r\n    const [cliente, setCliente] = useState({});\r\n\r\n    const showMessage = (message) => alerta(message);\r\n\r\n\r\n    const fetchCliente = useCallback(async () => {\r\n        if (!id) {\r\n            showMessage('ID do cliente não fornecido');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await ClienteService.getCliente(id);\r\n            if (response.sucesso) {\r\n                const clienteData = ClienteInterface.fromApiResponse(response.data);\r\n                setFormValues(clienteData);\r\n                setCliente(clienteData);\r\n            } else {\r\n                showMessage(response.message);\r\n            }\r\n        } catch {\r\n            showMessage('Erro ao buscar cliente');\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            fetchCliente();\r\n        }\r\n    }, [id, fetchCliente]);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormValues((prevValues) => ({\r\n            ...prevValues,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const validatePayload = ({ nome, telefone, tipo_cliente }) => {\r\n        const errors = [];\r\n        if (!nome.trim()) errors.push('Nome do cliente é obrigatório.');\r\n        if (!telefone.trim()) errors.push('Telefone é obrigatório.');\r\n        if (!tipo_cliente.trim()) errors.push('Tipo de cliente é obrigatório.');\r\n        return errors;\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const errors = validatePayload(formValues);\r\n        if (errors.length > 0) {\r\n            showMessage(`Erro:\\n${errors.join('\\n')}`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await ClienteService.updateCliente(id, formValues);\r\n            if (response.sucesso) {\r\n                showMessage('Cliente atualizado com sucesso!');\r\n            } else {\r\n                showMessage(response.message);\r\n            }\r\n        } catch {\r\n            showMessage('Erro ao atualizar cliente');\r\n        }\r\n    };\r\n\r\n    const renderForm = () => (\r\n        <div >\r\n            <Input id=\"nome\" name=\"nome\" value={formValues.nome} label=\"Nome do Cliente\" onChange={handleChange} />\r\n            <Input id=\"telefone\" name=\"telefone\" value={formValues.telefone} label=\"Telefone\" onChange={handleChange} type=\"tel\" />\r\n            <Select\r\n                id=\"tipo_cliente\"\r\n                name=\"tipo_cliente\"\r\n                value={formValues.tipo_cliente}\r\n                label=\"Tipo de Cliente\"\r\n                options={[\r\n                    { value: 'Pessoa Física', label: 'Pessoa Física' },\r\n                    { value: 'Pessoa Jurídica', label: 'Pessoa Jurídica' },\r\n                ]}\r\n                onChange={handleChange}\r\n            />\r\n            <Input id=\"descricao\" name=\"descricao\" value={formValues.descricao} label=\"Descrição\" onChange={handleChange} />\r\n        </div>\r\n    );\r\n\r\n    const renderLabels = () => (\r\n        <div >\r\n            <Label htmlFor=\"nome\" title=\"Nome do Cliente:\" value={cliente.nome || ''} iconClass=\"person\" />\r\n            <Label htmlFor=\"telefone\" title=\"Telefone:\" value={cliente.telefone || ''} iconClass=\"telephone\" />\r\n            <Label htmlFor=\"tipo_cliente\" title=\"Tipo de Cliente:\" value={cliente.tipo_cliente || ''} iconClass=\"tag\" />\r\n            <Label htmlFor=\"descricao\" title=\"Descrição:\" value={cliente.descricao || ''} iconClass=\"info-circle\" />\r\n            <Label htmlFor=\"endereco\" title=\"Endereço:\" value={cliente.endereco || ''} iconClass=\"house\" />\r\n        </div>\r\n    );\r\n\r\n    return isEditable ? { handleSubmit, renderForm } : { renderForm: renderLabels };\r\n};\r\n\r\nexport default useClienteForm;\r\n","import React, { useState } from 'react';\r\nimport { useCustomModal } from 'src/components/objetos/Modal';\r\nimport alerta from 'src/utils/alerta';\r\nimport useClienteForm from './useClienteForm';\r\n\r\nconst useUsuarioModal = (id) => {\r\n    const { CustomModal, setShow } = useCustomModal();\r\n    const [clienteId, setClienteId] = useState(null);\r\n    const { renderForm } = useClienteForm(clienteId, false); // Chama o hook aqui\r\n\r\n    const openModal = (id_cliente = false, view = false) => {\r\n        if (!id_cliente) {\r\n            alerta('ID do cliente não fornecido');\r\n            return setShow(false);\r\n        }\r\n\r\n        setClienteId(id_cliente); // Armazena o ID do cliente\r\n        setShow(view);\r\n    };\r\n\r\n    const renderFooter = () => (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary btn-sm mx-auto\"\r\n            onClick={() => setShow(false)}\r\n        >\r\n            Fechar\r\n        </button>\r\n    );\r\n\r\n    const ClienteModalComponent = () => (\r\n        <CustomModal\r\n            icon=\"person\"\r\n            title=\"Visualizar Cliente\"\r\n            children={renderForm()}\r\n            footer={renderFooter()}\r\n        />\r\n    );\r\n\r\n    return { openModal, ClienteModalComponent };\r\n};\r\n\r\nexport default useUsuarioModal;\r\n","import React, { useState } from 'react';\r\nimport { useCustomModal } from 'src/components/objetos/Modal';\r\n\r\nconst useConfirmationModal = () => {\r\n    const { CustomModal, setShow } = useCustomModal();\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [onConfirm, setOnConfirm] = useState(() => () => { });\r\n\r\n    const openModal = (title, description, onConfirmCallback) => {\r\n        setTitle(title);\r\n        setDescription(description);\r\n        setOnConfirm(() => onConfirmCallback);\r\n        setShow(true); // Abre o modal\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShow(false); // Fecha o modal\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        onConfirm(); // Executa a função de confirmação\r\n        closeModal(); // Fecha o modal\r\n    };\r\n\r\n    const renderFooter = () => (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary btn-sm me-auto\"\r\n                onClick={closeModal}>\r\n                Cancelar\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-sm\"\r\n                onClick={handleConfirm}>\r\n                Confirmar\r\n            </button>\r\n        </>\r\n    );\r\n\r\n    const ConfirmationModalComponent = () => (\r\n        <CustomModal\r\n            icon=\"exclamation-triangle\"\r\n            title={title}\r\n            children={<p>{description}</p>}\r\n            footer={renderFooter()}\r\n        />\r\n    );\r\n\r\n    return { openModal, ConfirmationModalComponent };\r\n};\r\n\r\nexport default useConfirmationModal;\r\n","import {CobrancaInterface} from '@interface'; // Interface para Cobranca\r\nimport request from '@utils/api';  \r\n\r\nclass CobrancaService {\r\n    // Método para obter uma cobrança pelo ID\r\n    async getCobrancaById(id) {\r\n        const response = await request(`cobranca/${id}`, 'GET');\r\n        return response.success ? CobrancaInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para obter todas as cobranças\r\n    async getAllCobrancas() {\r\n        const response = await request('cobranca', 'GET');\r\n        return response.success ? response.data.map(cobranca => CobrancaInterface.fromApiResponse(cobranca)) : [];\r\n    }\r\n\r\n    // Método para criar uma nova cobrança\r\n    async createCobranca(cobrancaDTO) {\r\n        const response = await request('cobranca', 'POST', cobrancaDTO);\r\n        return response.success ? CobrancaInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para atualizar uma cobrança existente\r\n    async updateCobranca(id, cobrancaDTO) {\r\n        const response = await request(`cobranca/${id}`, 'PUT', cobrancaDTO);\r\n        return response.success ? CobrancaInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para excluir uma cobrança\r\n    async deleteCobranca(id) {\r\n        const response = await request(`cobranca/${id}`, 'DELETE');\r\n        return response.success;\r\n    }\r\n}\r\n\r\nexport default new CobrancaService();\r\n","import {UsuarioInterface} from '@interface';\r\nimport request from '@utils/api';  \r\n\r\nclass UsuarioService {\r\n    // Método para obter um usuário pelo ID\r\n    async getUsuarioById(id) {\r\n        const response = await request(`usuarios/${id}`, 'GET');\r\n        return response.success ? UsuarioInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para obter todos os usuários\r\n    async getAllUsuarios() {\r\n        const response = await request('usuarios', 'GET');\r\n        return response.success ? response.data.map(usuario => UsuarioInterface.fromApiResponse(usuario)) : [];\r\n    }\r\n\r\n    // Método para registrar um novo usuário\r\n    async register(usuarioDTO) {\r\n        const response = await request('usuarios/register', 'POST', usuarioDTO);\r\n        return response.success ? UsuarioInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para atualizar um usuário existente\r\n    async updateUsuario(id, usuarioDTO) {\r\n        const response = await request(`usuarios/${id}`, 'PUT', usuarioDTO);\r\n        return response.success ? UsuarioInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para excluir um usuário\r\n    async deleteUsuario(id) {\r\n        const response = await request(`usuarios/${id}`, 'DELETE');\r\n        return response.success;\r\n    }\r\n}\r\n\r\nexport default new UsuarioService();\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Table from '@objetos/Table';\r\nimport useClienteModal from './useClienteModal';\r\nimport useConfirmationModal from '@objetos/useConfirmationModal';\r\nimport  ClienteInterface  from 'src/interface/ClienteInterface';\r\nimport { ClienteService }  from '@services';\r\nimport Alerta from '@utils/alerta';\r\n\r\nconst ClienteLista = () => {\r\n    const [clientes, setClientes] = useState([]);\r\n    const navigate = useNavigate(); // Usando useNavigate para navegação\r\n\r\n    const { openModal: openClienteModal, ClienteModalComponent } = useClienteModal();\r\n    const { openModal: openConfirmationModal, ConfirmationModalComponent } = useConfirmationModal();\r\n\r\n    const fetchClientes = useCallback(async () => {\r\n        try {\r\n            const response = await ClienteService.getClientesByEmpresa();\r\n            if (response.sucesso) {\r\n                const clientes = response.data.map(clienteData => ClienteInterface.fromApiResponse(clienteData));\r\n                setClientes(clientes);\r\n            } else {\r\n                Alerta(response.message);\r\n            }\r\n        } catch (error) {\r\n            Alerta('Erro ao buscar clientes', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchClientes();\r\n    }, [fetchClientes]);\r\n\r\n    const handleDelete = async (id_cliente) => {\r\n        openConfirmationModal(\r\n            'Confirmar Exclusão',\r\n            'Você tem certeza que deseja excluir este cliente?',\r\n            async () => {\r\n                try {\r\n                    const response = await ClienteService.deleteCliente(id_cliente);\r\n                    if (response.sucesso) {\r\n                        setClientes(prevClientes => prevClientes.filter(cliente => cliente.id_cliente !== id_cliente));\r\n                        Alerta(response.message);\r\n                    } else {\r\n                        Alerta(response.message, 2, 'id_msg');\r\n                    }\r\n                } catch (error) {\r\n                    Alerta('Erro ao excluir cliente', error, 2, 'id_msg');\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const columns = ['Nome', 'Telefone', 'Ações'];\r\n\r\n    const rows = clientes.map(cliente => ({\r\n        data: [\r\n            cliente.nome,\r\n            cliente.telefone\r\n        ],\r\n        actions: [\r\n            {\r\n                name: 'Editar',\r\n                icon: 'bi-pencil',\r\n                type: 'primary',\r\n                onClick: () => navigate(`/clientes/editar/${cliente.id_cliente}`)\r\n            },\r\n            {\r\n                name: 'Visualizar',\r\n                icon: 'bi-eye',\r\n                type: 'success',\r\n                onClick: () => openClienteModal(cliente.id_cliente, true)\r\n            },\r\n            {\r\n                name: 'Excluir',\r\n                icon: 'bi-trash',\r\n                type: 'danger',\r\n                onClick: () => handleDelete(cliente.id_cliente)\r\n            }\r\n        ]\r\n    }));\r\n\r\n    const dataHeader = {\r\n        icon: 'people',\r\n        title: 'Lista de Clientes',\r\n        iconBtn: 'plus',\r\n        buttonText: 'Criar Novo Cliente',\r\n        onClickBtn: () => navigate('/clientes/cadastrar')\r\n    };\r\n\r\n    return (\r\n        <div id='id_msg'>\r\n            <Table\r\n                dataHeader={dataHeader}\r\n                columns={columns}\r\n                rows={rows}\r\n            />\r\n            <ClienteModalComponent />\r\n            <ConfirmationModalComponent />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClienteLista;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\r\nimport alerta from 'src/utils/alerta';\r\nimport request from 'src/utils/api';\r\nimport loading from 'src/utils/loading';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CobrancaForm({ cobrancaId, initialData, clienteId }) {\r\n  const [formData, setFormData] = useState({\r\n    Descricao: initialData?.Descricao || '',\r\n    Valor: initialData?.Valor || 0.0,\r\n    Data: initialData?.Data ? new Date(initialData.Data).toISOString().split('T')[0] : '', // Ajuste para o formato de data\r\n    Pago: initialData?.Pago || false,\r\n    ClienteId: clienteId || initialData?.ClienteId || \"\", // Presumindo que ClienteId seja fornecido externamente\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const submit = async () => {\r\n    try {\r\n      loading(true, \"ContainerFormulario\");\r\n      const endpoint = cobrancaId ? `public/cobrancas/${cobrancaId}/` : 'public/cobrancas/';\r\n      const method = cobrancaId ? 'PUT' : 'POST';\r\n      const response = await request(endpoint, method, formData);\r\n      if (response.success) {\r\n        alerta(response.message, 1);\r\n        navigate('/cobrancas'); // Navega para a lista de cobranças ou para a página desejada\r\n      } else {\r\n        alerta(response.message, 2);\r\n      }\r\n    } catch (error) {\r\n      alerta('Erro ao salvar os dados. Por favor, tente novamente.', 2);\r\n    } finally {\r\n      loading(false, \"ContainerFormulario\");\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    // Implemente a validação dos dados do formulário aqui\r\n    return formData.Descricao && formData.Valor >= 0 && formData.Data && formData.ClienteId;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (validate()) {\r\n      await submit();\r\n    } else {\r\n      alerta('Por favor, preencha todos os campos obrigatórios e valide os dados.', 2);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"card justify-content-center\" id=\"ContainerFormulario\">\r\n        <div className=\"card-header\">\r\n          <h1 className=\"fw-bolder mt-2 mb-1 fs-6 font-monospace\">\r\n            <span className=\"bi bi-cash me-2\"></span>{cobrancaId ? 'Editar Cobrança' : 'Nova Cobrança'}\r\n          </h1>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <FloatingLabel controlId=\"Descricao\" className=\"mb-2\" label=\"Descrição\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Descrição\"\r\n              name=\"Descricao\"\r\n              value={formData.Descricao}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Valor\" className=\"mb-2\" label=\"Valor\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"Valor\"\r\n              name=\"Valor\"\r\n              value={formData.Valor}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Data\" className=\"mb-2\" label=\"Data\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Data\"\r\n              name=\"Data\"\r\n              value={formData.Data}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <Form.Check \r\n            type=\"checkbox\"\r\n            id=\"Pago\"\r\n            label=\"Pago\"\r\n            name=\"Pago\"\r\n            checked={formData.Pago}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"d-flex justify-content-end card-footer\">\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            {cobrancaId ? 'Salvar' : 'Cadastrar'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CobrancaForm;\r\n","function CobrancaView() {\r\n\r\n}\r\nexport default   CobrancaView;","function CobrancaLista() {\r\n\r\n}\r\nexport default   CobrancaLista;","import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useAuthentication } from './utils/auth';\r\n\r\n// Componentes\r\nimport Login from 'src/components/containers/default/login';\r\nimport Cadastro from 'src/components/containers/default/cadastro';\r\nimport Erro from 'src/components/erro';\r\n\r\nimport ClienteForm from '@containers/cliente/ClienteForm';\r\nimport ClienteLista from '@containers/cliente/ClienteLista';\r\nimport ClienteView from '@containers/cliente/ClienteView';\r\n\r\nimport CobrancaForm from '@containers/cobranca/CobrancaForm';\r\nimport CobrancaView from '@containers/cobranca/CobrancaView';\r\nimport CobrancaLista from '@containers/cobranca/CobrancaLista';\r\n\r\nconst Router = () => {\r\n  const isAuthenticated = useAuthentication();\r\n\r\n  return (\r\n    <Routes>\r\n      {/* Rotas públicas */}\r\n      <Route path=\"/\" element={<Login />} />\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/cadastro\" element={<Cadastro />} />\r\n      <Route\r\n        path=\"/erro-interno\"\r\n        element={<Erro title=\"Erro Interno\" descricao=\"Ocorreu um erro interno no servidor. Tente novamente mais tarde.\" />}\r\n      />\r\n      <Route\r\n        path=\"*\"\r\n        element={<Erro title=\"Página Não Encontrada\" descricao=\"A página que você está procurando não existe.\" />}\r\n      />\r\n   <Route\r\n        path=\"/cliente/\"\r\n        element={isAuthenticated ? <ClienteLista /> : <Navigate to=\"/login\" />}\r\n      />\r\n      <Route\r\n        path=\"/cliente/create/\"\r\n        element={isAuthenticated ? <ClienteForm /> : <Navigate to=\"/login\" />}\r\n      /> <Route\r\n      path=\"/cliente/edit/:id\"\r\n      element={isAuthenticated ? <ClienteForm /> : <Navigate to=\"/login\" />}\r\n    />\r\n      <Route\r\n        path=\"/cliente/view/:id\"\r\n        element={isAuthenticated ? <ClienteView /> : <Navigate to=\"/login\" />}\r\n      />\r\n\r\n      {/* Rotas privadas para Cobrança */}\r\n      <Route\r\n        path=\"/cobranca/\"\r\n        element={isAuthenticated ? <CobrancaLista /> : <Navigate to=\"/login\" />}\r\n      />\r\n      <Route\r\n        path=\"/cobranca/edit/:id\"\r\n        element={isAuthenticated ? <CobrancaForm /> : <Navigate to=\"/login\" />}\r\n      /> <Route\r\n      path=\"/cobranca/create/\"\r\n      element={isAuthenticated ? <CobrancaForm /> : <Navigate to=\"/login\" />}\r\n    />\r\n      <Route\r\n        path=\"/cobranca/view/:id\"\r\n        element={isAuthenticated ? <CobrancaView /> : <Navigate to=\"/login\" />}\r\n      />\r\n\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","function ClienteView() {\r\n\r\n}\r\nexport default ClienteView();","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Base from './components/Base';\r\nimport RouterConfig from './router';\r\nimport { AuthProvider } from './utils/AuthProvider'; // Importar o AuthProvider\r\n\r\nconst App = () => (\r\n  <AuthProvider>\r\n    <Router>\r\n      <Base>\r\n        <RouterConfig />\r\n      </Base>\r\n    </Router>\r\n  </AuthProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client'; \r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'src/assets/css/Global.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\n\r\nroot.render(\r\n    <App />\r\n);\r\n"],"sourceRoot":""}