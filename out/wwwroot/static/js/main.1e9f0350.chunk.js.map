{"version":3,"sources":["utils/storage.jsx","utils/api.jsx","utils/AuthProvider.jsx","components/Navbar.jsx","components/MainContent.jsx","components/Footer.jsx","components/Base.jsx","utils/alerta.jsx","utils/loading.jsx","components/objetos/Formulario.jsx","components/containers/default/login.jsx","components/containers/default/cadastro.jsx","components/erro.jsx","components/objetos/Input.jsx","components/objetos/Label.jsx","interface/CustomInterface.jsx","interface/CobrancaInterface.jsx","interface/ClienteInterface.jsx","service/ClienteService.jsx","components/containers/cliente/useClienteForm.jsx","components/containers/cliente/ClienteForm.jsx","components/objetos/Tooltip.jsx","components/objetos/Table.jsx","components/objetos/Modal.jsx","components/containers/cliente/useClienteModal.jsx","components/objetos/useConfirmationModal.jsx","components/objetos/InputSearch.jsx","components/objetos/Select.jsx","service/CobrancaService.jsx","components/containers/cobranca/useCobrancaForm.jsx","components/containers/cobranca/useCobrancaModal.jsx","components/containers/cliente/ClienteLista.jsx","components/containers/cliente/ClienteView.jsx","components/containers/cobranca/CobrancaForm.jsx","components/containers/cobranca/CobrancaView.jsx","components/containers/cobranca/CobrancaLista.jsx","components/containers/usuario/UsuarioForm.jsx","components/containers/usuario/UsuarioLista.jsx","components/containers/usuario/UsuarioView.jsx","router.jsx","App.js","index.js"],"names":["getCookie","name","cookies","document","cookie","split","cookieName","cookieValue","map","c","trim","setCookie","value","timeInMinutes","arguments","length","undefined","options","path","expires","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","async","request","url","method","data","apiUrl","endsWith","token","sucesso","axios","headers","withCredentials","error","errorMessage","errorMessages","response","message","status","getErrorMessage","AuthContext","createContext","useAuth","useContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","useState","checkAuthentication","authenticated","console","useEffect","_jsx","Provider","Icon","text","_jsxs","_Fragment","className","ItensDefault","MenuItem","to","icon","_ref2","Link","ItensAssinante","_ref3","onLogout","onClick","Navbar","navigate","useNavigate","menuState","menu","getElementById","classList","remove","replace","add","style","background","fontSize","type","toggleMenu","isHidden","contains","toggle","id","handleLogout","MainContent","Footer","href","target","Base","marginBottom","xmlns","viewBox","preserveAspectRatio","d","alerta","container","containerId","time","toastContainer","querySelector","createElement","body","appendChild","toastElement","setAttribute","toastHeader","strongElement","innerText","buttonClose","toastBody","whiteSpace","wordWrap","Toast","show","setTimeout","removeChild","showCustomAlert","existingAlert","alertTypes","class","default","alertClass","iconClass","alertDiv","closeButton","iconSpan","createTextNode","insertBefore","firstChild","showAlert","loading","targetContainer","HTMLElement","loadingContainerId","display","loadingContainer","minHeight","width","spinner","spinnerText","textContent","insertAdjacentElement","Formulario","headerIcon","headerTitle","formBody","footerLeftButtonText","footerLeftButtonAction","footerRightButtonText","footerRightButtonAction","isDark","maxWidth","LoginForm","email","setEmail","senha","setSenha","autoComplete","onChange","e","htmlFor","handleRegister","CadastroForm","formData","setFormData","nome","handleInputChange","prevData","FloatingLabel","controlId","label","Form","Control","placeholder","limpar","register","Erro","location","useLocation","queryParams","URLSearchParams","search","title","get","descricao","urlRedirect","Input","React","memo","forwardRef","ref","mask","InputMask","Label","CustomInterface","constructor","this","insert","update","toApiPayload","Insert","toISOString","Update","processValue","String","processDecimal","Boolean","toString","cleanedValue","numericValue","parseFloat","isNaN","toFixed","processValueForDisplay","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","date","Intl","DateTimeFormat","day","month","year","hour","minute","hour12","format","convertKeysToLowercase","Object","keys","reduce","acc","key","toLowerCase","CobrancaInterface","super","formattedData","valor","convertAndFormatValue","pago","clienteId","clienteid","fromApiResponse","ClienteInterface","documento","telefone","endereco","usuarioId","usuarioid","cobrancas","initializeCobrancas","cobrancasData","Array","isArray","cobranca","ClienteService","getClienteById","cliente","getAllClientes","clientes","createCliente","clienteDTO","updateCliente","deleteCliente","useClienteForm","isEditable","formValues","setFormValues","setCliente","showMessage","fetchCliente","useCallback","handleChange","event","prevValues","handleSubmit","errors","push","test","validatePayload","join","valuesToSubmit","rest","renderForm","renderLabels","ClienteForm","useParams","Tooltip","content","position","tooltipPosition","setTooltipPosition","tooltipRef","useRef","adjustPosition","tooltipEl","current","rect","getBoundingClientRect","isOutOfBoundsTop","top","isOutOfBoundsRight","right","window","innerWidth","isOutOfBoundsLeft","left","isOutOfBoundsBottom","bottom","innerHeight","addEventListener","removeEventListener","Table","dataHeader","columns","rows","onClickBtn","iconBtn","buttonText","colTitle","index","scope","row","rowIndex","cell","cellIndex","role","actions","action","useCustomModal","setShow","CustomModal","footer","Modal","backdrop","keyboard","contentClassName","dialogClassName","Header","Button","variant","textDecoration","color","Body","useUsuarioModal","setClienteId","openModal","id_cliente","view","ClienteModalComponent","useConfirmationModal","setTitle","description","setDescription","onConfirm","setOnConfirm","closeModal","handleConfirm","onConfirmCallback","ConfirmationModalComponent","InputSearch","_suggestions$find","suggestions","onSuggestionClick","filteredSuggestions","setFilteredSuggestions","query","filter","suggestion","includes","find","zIndex","handleSuggestionClick","Select","renderOptions","optionLabel","CobrancaService","getCobrancaById","getAllCobrancas","createCobranca","cobrancaDTO","updateCobranca","updatePago","deleteCobranca","useCobrancaForm","id_cliente_select","setloading","setCobranca","setClientes","setIdCliente","clienteNome","setClienteNome","fetchData","responseCobranca","_responseCobranca","_responseCobranca2","responseClientes","_responseCobranca3","_responseCobranca3$co","foundCliente","statusOptions","clienteOptions","handleSearchChange","selectedCliente","getNewValue","apenasNumeros","parteDecimal","slice","parteInteira","formatarValor","formatToISO","dateString","toLocaleDateString","useCobrancaModal","cobrancaId","setCobrancaId","id_cobranca","CobrancaModalComponent","ClienteLista","openClienteModal","useClienteModal","openConfirmationModal","openCobrancaModal","fetchClientes","Alerta","renderCobranca","quantidadePendente","prevClientes","Id","handleDelete","ClienteView","CobrancaForm","CobrancaView","CobrancaLista","setCobrancas","fetchCobrancas","hoje","dataCobranca","sort","a","b","sortCobrancas","prevCobrancas","handleUpdatePayment","disabled","UsuarioForm","UsuarioLista","UsuarioView","Router","Routes","Route","element","Login","Cadastro","Navigate","App","RouterConfig","createRoot","render"],"mappings":"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","file":"static/js/main.1e9f0350.chunk.js","sourcesContent":["/**\r\n * Método para obter um item do localStorage.\r\n * @param {string} key - A chave do item que deseja obter.\r\n * @returns {any|null} O valor do item do localStorage, ou null se não encontrado.\r\n */\r\nexport const getLocalStorageItem = (key) => {\r\n  // Obtém o item do localStorage pela chave\r\n  const item = localStorage.getItem(key);\r\n  // Se o item for encontrado, retorna seu valor como objeto JavaScript, caso contrário, retorna null\r\n  return item ? JSON.parse(item) : null;\r\n};\r\n\r\n/**\r\n * Método para definir um item no localStorage.\r\n * @param {string} key - A chave do item que deseja definir.\r\n * @param {any} value - O valor do item que deseja armazenar.\r\n */\r\nexport const setLocalStorageItem = (key, value) => {\r\n  // Converte o valor em uma string JSON e armazena no localStorage com a chave fornecida\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\n/**\r\n * Função para obter o valor de um cookie pelo nome.\r\n * @param {string} name - O nome do cookie que deseja obter.\r\n * @returns {string|null} O valor do cookie ou null se o cookie não for encontrado.\r\n */\r\nexport const getCookie = (name) => {\r\n  // Divide todos os cookies da string document.cookie em um array\r\n  const cookies = document.cookie.split(';');\r\n  \r\n  // Itera por cada cookie no array\r\n  for (let cookie of cookies) {\r\n    // Divide cada cookie em nome e valor e remove espaços em branco\r\n    const [cookieName, cookieValue] = cookie.split('=').map(c => c.trim());\r\n    \r\n    // Verifica se o nome do cookie corresponde ao nome solicitado\r\n    if (cookieName === name) {\r\n      // Retorna o valor do cookie se encontrado\r\n      return cookieValue;\r\n    }\r\n  }\r\n  \r\n  // Retorna null se o cookie não for encontrado\r\n  return null;\r\n};\r\nexport const setCookie = (name, value, timeInMinutes = 60, options = {}) => {\r\n  // Define o caminho padrão como '/' e mescla com as opções fornecidas\r\n  options = {\r\n    path: '/',\r\n    ...options\r\n  };\r\n\r\n  // Calcula a data de expiração com base no tempo em minutos\r\n  const expires = new Date();\r\n  expires.setTime(expires.getTime() + (timeInMinutes * 60 * 1000));\r\n  options.expires = expires.toUTCString();\r\n\r\n  // Converte a data de expiração para UTCString se for uma instância de Date\r\n  if (options.expires instanceof Date) {\r\n    options.expires = options.expires.toUTCString();\r\n  }\r\n\r\n  // Constrói a string do cookie com nome e valor codificados\r\n  let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\r\n\r\n  // Adiciona as opções à string do cookie\r\n  for (let optionKey in options) {\r\n    updatedCookie += '; ' + optionKey;\r\n    let optionValue = options[optionKey];\r\n    if (optionValue !== true) {\r\n      updatedCookie += '=' + optionValue;\r\n    }\r\n  }\r\n\r\n  // Define o cookie no documento\r\n  document.cookie = updatedCookie;\r\n};\r\n","import axios from 'axios';\r\nimport { getCookie } from 'src/utils/storage';\r\n\r\n// URL base configurável através de variáveis de ambiente\r\nconst BASE_URL = process.env.REACT_APP_API_URL || '/api/';\r\nexport default async function request(url, method = 'GET', data = null) {\r\n  try {\r\n      // Adiciona a barra no final da URL se não estiver presente\r\n      const formattedUrl = url.endsWith('/') ? url : `${url}/`;\r\n      const apiUrl = `${BASE_URL}${formattedUrl}`;\r\n\r\n      // Obtém o token do cookie\r\n      const token = getCookie('authToken');\r\n\r\n      // Faz a requisição com axios\r\n      const response = await axios({\r\n          url: apiUrl,\r\n          method,  // Método HTTP (GET, POST, etc.)\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}` // Envia o token no cabeçalho\r\n          },\r\n          data, // Dados para POST ou PUT\r\n          withCredentials: true, // Permite enviar cookies com a requisição\r\n      });\r\n\r\n      return { sucesso: true, ...response.data };\r\n  } catch (error) {\r\n      const errorMessage = getErrorMessage(error);\r\n      return { sucesso: false, message: errorMessage };\r\n  }\r\n}\r\n\r\n\r\n// Função para gerar a mensagem de erro\r\nfunction getErrorMessage(error) {\r\n  const errorMessages = {\r\n    400: 'Solicitação inválida.',\r\n    401: 'Não autorizado.',\r\n    403: 'Acesso negado.',\r\n    404: 'Recurso não encontrado.',\r\n    500: 'Erro interno do servidor.',\r\n  };\r\n\r\n  if (error.response) {\r\n    return error.response.data.message || errorMessages[error.response.status] || 'Erro na requisição.';\r\n  } else if (error.request) {\r\n    return 'Nenhuma resposta recebida do servidor.';\r\n  } else {\r\n    return error.message || 'Erro ao configurar a requisição.';\r\n  }\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { getCookie, setCookie } from './storage'; // Certifique-se de que esses métodos funcionam corretamente\r\nimport request from './api';\r\n\r\n// Cria o contexto de autenticação\r\nconst AuthContext = createContext();\r\n\r\n// Hook para acessar o contexto de autenticação\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // Inicializa o estado de autenticação\r\n  const [isAuthenticated, setIsAuthenticated] = useState(getCookie('authentication') === 'true');\r\n\r\n  // Função para verificar a autenticação\r\n  const checkAuthentication = async () => {\r\n    try {\r\n      const response = await request(\"public/CheckAuthentication/\");\r\n      \r\n      // Avalia a resposta e atualiza o estado de autenticação\r\n      if (response.authenticated) {\r\n        setCookie('authentication', 'true');\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setCookie('authentication', 'false');\r\n        setIsAuthenticated(false);\r\n      }\r\n    } catch (error) {\r\n      // Em caso de erro, define como não autenticado\r\n      console.error('Erro ao verificar autenticação:', error);\r\n      setCookie('authentication', 'false');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuthentication(); // Verifica a autenticação uma vez ao montar\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, checkAuthentication, setIsAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '@utils/AuthProvider';\r\nimport { getCookie, setCookie } from 'src/utils/storage';\r\n\r\n// Componente de ícone reutilizável\r\nconst Icon = ({ name, text }) => (\r\n  <>\r\n    <i className={`bi bi-${name}`}></i>\r\n    {text && <span className=\"ms-1\">{text}</span>}\r\n  </>\r\n);\r\n\r\n// Componentes para o menu padrão\r\nconst ItensDefault = () => (\r\n  <>\r\n    <MenuItem to=\"/login\" icon=\"box-arrow-in-right\" text=\"Login\" />\r\n    <MenuItem to=\"/cadastro\" icon=\"pencil-square\" text=\"Cadastro\" />\r\n  </>\r\n);\r\n\r\n// Componente de item do menu\r\nconst MenuItem = ({ to, icon, text }) => (\r\n  <li className=\"text-center d-inline-flex col-auto\">\r\n    <Link className=\"nav-link text-decoration-none text-white nav-link-icon px-0 align-items-center\" to={to}>\r\n      <Icon name={icon} text={text} />\r\n    </Link>\r\n  </li>\r\n);\r\n\r\n// Componentes para o menu quando o usuário está autenticado\r\nconst ItensAssinante = ({ onLogout }) => (\r\n  <>\r\n    <MenuItem to=\"/cliente\" icon=\"people\" text=\"Clientes\" />\r\n    <MenuItem to=\"/cobranca\" icon=\"cash-stack\" text=\"Cobranças\" />\r\n    <li className=\"d-inline-flex col-auto\">\r\n      <Link className=\"nav-link text-decoration-none text-white bg-transparent border-0\" onClick={onLogout}>\r\n        <Icon name=\"box-arrow-right\" text=\"Sair\" />\r\n      </Link>\r\n    </li>\r\n  </>\r\n);\r\n\r\nconst Navbar = () => {\r\n  const { isAuthenticated, setIsAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const menuState = getCookie('menuState');\r\n    const menu = document.getElementById('navbarNav');\r\n    const icon = document.getElementById('menuIcon');\r\n\r\n    if (menuState === 'visible') {\r\n      menu.classList.remove('d-none');\r\n      icon.classList.replace('bi-box-arrow-down', 'bi-box-arrow-in-up');\r\n    } else {\r\n      menu.classList.add('d-none');\r\n      icon.classList.replace('bi-box-arrow-in-up', 'bi-box-arrow-down');\r\n    }\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    const menu = document.getElementById('navbarNav');\r\n    const icon = document.getElementById('menuIcon');\r\n\r\n    const isHidden = menu.classList.contains('d-none');\r\n    menu.classList.toggle('d-none', !isHidden);\r\n    icon.classList.toggle('bi-box-arrow-down', isHidden);\r\n    icon.classList.toggle('bi-box-arrow-in-up', !isHidden);\r\n    setCookie('menuState', isHidden ? 'visible' : 'hidden');\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setCookie('authToken', \"\");\r\n    setCookie('authentication', \"false\");\r\n    setIsAuthenticated(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar-expand-md navbar-dark pt-3 pb-2 font-montserrat\" style={{ background: '#0D1B2A' }}>\r\n      <div className=\"p-0 m-0 mx-auto container-xl row\">\r\n        <div className=\"p-0 m-0 col-12 container justify-content-between row align-items-center\">\r\n          <Link className=\"col text-sm-center text-start text-decoration-none\" to=\"/\">\r\n            <p className=\"mb-2 text-white\" style={{ fontSize: '20px' }}>\r\n              Localize Project\r\n            </p>\r\n          </Link>\r\n          <button className=\"btn text-white col-auto d-inline-flex ms-auto d-sm-none\" type=\"button\" onClick={toggleMenu}>\r\n            <span className=\"bi bi-box-arrow-in-up\" id=\"menuIcon\" style={{ fontSize: '20px' }}></span>\r\n          </button>\r\n        </div>\r\n        <div className=\"col-12 d-sm-block d-none\" id=\"navbarNav\">\r\n          <ul className=\"text-decoration-none text-center text-white my-2 row mx-auto mx-sm-0 col-auto container-xl font-monospace text-center text-sm-end justify-content-center align-items-center\">\r\n            {isAuthenticated ? <ItensAssinante onLogout={handleLogout} /> : <ItensDefault />}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst MainContent = ({ children }) => {\r\n  return (\r\n    <div id=\"content\">\r\n      <div id=\"id_alert_container\" className=\"container mx-auto\"></div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\" style={{ background: '#0D1B2A' }}>\r\n      <div className=\"font-montserrat  redound-3 px-3 text-center d-flex-inline\">\r\n        <p className=\"m-0 p-0 text-white rounded \" style={{ fontSize: '0.8rem' }}>\r\n          Software Desenvolvido por <a className=\"text-white\" href=\"https://br.linkedin.com/in/samuelmedeirosbc\" target=\"blank\">@Samuel Medeiros</a>.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport MainContent from './MainContent';\r\nimport Footer from './Footer';\r\nimport 'react-bootstrap';\r\nconst Base = ({ children }) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid m-0 p-0 wrapper no-scroll  \" style={{ background: '#f5f7fa'    }}>\r\n        <div className=\"wrapper\">\r\n          <div className=\"content\">\r\n            <Navbar  />\r\n            <MainContent>\r\n              {children}\r\n            </MainContent>\r\n          </div>\r\n          <div className=\"footer\">\r\n\r\n            <div className=\"custom-shape-divider-bottom-1708368458 mt-3\" style={{ marginBottom: '-2px' }}>\r\n              <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\r\n                <path d=\"M985.66,92.83C906.67,72,823.78,31,743.84,14.19c-82.26-17.34-168.06-16.33-250.45.39-57.84,11.73-114,31.07-172,41.86A600.21,600.21,0,0,1,0,27.35V120H1200V95.8C1132.19,118.92,1055.71,111.31,985.66,92.83Z\" className=\"shape-fill\"></path>\r\n              </svg>\r\n            </div>\r\n            <Footer  />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Base;\r\n","import {  Toast } from 'bootstrap';  // Importação do modal do Bootstrap\r\n\r\nfunction showAlert(type, text, containerId) {\r\n  const container = document.getElementById(containerId) || document.getElementById('id_alert_container');\r\n  if (!container) return;\r\n\r\n  // Remove any existing alert\r\n  const existingAlert = container.querySelector('.alert');\r\n  if (existingAlert) {\r\n    container.removeChild(existingAlert);\r\n  }\r\n\r\n  // Define alert types\r\n  const alertTypes = {\r\n    1: { class: 'alert-success', icon: 'bi-check-circle-fill' },\r\n    2: { class: 'alert-danger', icon: 'bi-exclamation-circle-fill' },\r\n    3: { class: 'alert-warning', icon: 'bi-exclamation-triangle-fill' },\r\n    default: { class: 'alert-info', icon: 'bi-info-circle-fill' },\r\n  };\r\n\r\n  const { class: alertClass, icon: iconClass } = alertTypes[type] || alertTypes.default;\r\n\r\n  // Create the alert div\r\n  const alertDiv = document.createElement('div');\r\n  alertDiv.classList.add('alert', alertClass, 'alert-dismissible', 'fade', 'show', 'mt-2','mx-2', 'bt-2');\r\n  alertDiv.setAttribute('role', 'alert');\r\n  alertDiv.style.whiteSpace = 'normal'; // Permite a quebra de linha no texto\r\n  alertDiv.style.wordWrap = 'break-word'; // Quebra palavras longas, se necessário\r\n  // Create and add the close button\r\n  const closeButton = document.createElement('button');\r\n  closeButton.classList.add('btn-close');\r\n  closeButton.setAttribute('type', 'button');\r\n  closeButton.setAttribute('data-bs-dismiss', 'alert');\r\n  closeButton.setAttribute('aria-label', 'Close');\r\n  alertDiv.appendChild(closeButton);\r\n\r\n  // Create and add the icon\r\n  const iconSpan = document.createElement('span');\r\n  iconSpan.classList.add('bi', iconClass);\r\n  iconSpan.setAttribute('aria-hidden', 'true');\r\n  alertDiv.appendChild(iconSpan);\r\n\r\n  // Add the text message\r\n  alertDiv.appendChild(document.createTextNode(' ' + text));\r\n\r\n  // Prepend the alert to the container (to place it above other elements)\r\n  container.insertBefore(alertDiv, container.firstChild);\r\n}\r\n\r\nfunction showCustomAlert(text, containerId, time) {\r\n  let toastContainer = document.querySelector('.toast-container');\r\n\r\n  if (!toastContainer) {\r\n    toastContainer = document.createElement('div');\r\n    toastContainer.classList.add('toast-container', 'position-fixed', 'top-0', 'end-0', 'p-3');\r\n    document.body.appendChild(toastContainer);\r\n  }\r\n\r\n  const toastElement = document.createElement('div');\r\n  toastElement.classList.add('toast');\r\n  toastElement.setAttribute('role', 'alert');\r\n  toastElement.setAttribute('aria-live', 'assertive');\r\n  toastElement.setAttribute('aria-atomic', 'true');\r\n\r\n  const toastHeader = document.createElement('div');\r\n  toastHeader.classList.add('toast-header');\r\n  const strongElement = document.createElement('strong');\r\n  strongElement.classList.add('me-auto', 'Font-Gliker', 'fw-bold');\r\n  strongElement.innerText = '{ C P S }';\r\n  const buttonClose = document.createElement('button');\r\n  buttonClose.setAttribute('type', 'button');\r\n  buttonClose.classList.add('btn-close');\r\n  buttonClose.setAttribute('data-bs-dismiss', 'toast');\r\n  buttonClose.setAttribute('aria-label', 'Close');\r\n\r\n  const toastBody = document.createElement('div');\r\n  toastBody.classList.add('toast-body', 'bg-white', 'rounded-bottom', 'shadow-lg');\r\n  toastBody.innerText = text;\r\n  toastBody.style.whiteSpace = 'normal'; // Permite a quebra de linha no texto\r\n  toastBody.style.wordWrap = 'break-word'; // Quebra palavras longas, se necessário\r\n  toastHeader.appendChild(strongElement);\r\n  toastHeader.appendChild(buttonClose);\r\n  toastElement.appendChild(toastHeader);\r\n  toastElement.appendChild(toastBody);\r\n  toastContainer.appendChild(toastElement);\r\n\r\n  const toastBootstrap = new Toast(toastElement); // Instancia o Toast corretamente\r\n  toastBootstrap.show(); // Exibe o Toast\r\n\r\n  setTimeout(() => {\r\n    toastContainer.removeChild(toastElement);\r\n  }, time);\r\n}\r\n\r\nexport default function alerta(text, type = null, container = false, time = 30000) {\r\n  if (type === null) {\r\n    showCustomAlert(text, container, time);\r\n  } else {\r\n    showAlert(type, text, container);\r\n  }\r\n}","export default function loading(status, container) {\r\n  let targetContainer = null;\r\n\r\n  if (typeof container === 'string') {\r\n    // Se o container for uma string, assume-se que é o ID do elemento\r\n    targetContainer = document.getElementById(container);\r\n    if (!targetContainer) {\r\n      targetContainer = document.getElementById(\"root\");\r\n    }\r\n  } else if (container instanceof HTMLElement) {\r\n    // Se o container for um elemento HTMLElement, utiliza diretamente\r\n    targetContainer = container;\r\n  } else {\r\n    console.error('Tipo inválido para o container. Deve ser uma string (ID do elemento) ou HTMLElement.');\r\n    return;\r\n  }\r\n\r\n  const loadingContainerId = `${targetContainer.id}-loading`;\r\n\r\n  if (status === true) {\r\n    // Oculta o container original\r\n    targetContainer.style.display = 'none';\r\n\r\n    // Cria e insere o container de loading\r\n    const loadingContainer = document.createElement('div');\r\n    loadingContainer.id = loadingContainerId;\r\n    loadingContainer.classList.add('loading', 'd-flex', 'justify-content-center', 'align-items-center', 'text-primary');\r\n    \r\n    // Adiciona estilos inline para garantir tamanho significativo\r\n    loadingContainer.style.minHeight = '200px'; // Defina a altura mínima desejada\r\n    loadingContainer.style.width = '100%'; // Preenche a largura do container pai\r\n\r\n    const spinner = document.createElement('div');\r\n    spinner.classList.add('spinner-border');\r\n    spinner.setAttribute('role', 'status');\r\n\r\n    const spinnerText = document.createElement('span');\r\n    spinnerText.classList.add('visually-hidden');\r\n    spinnerText.textContent = 'Loading...';\r\n\r\n    spinner.appendChild(spinnerText);\r\n    loadingContainer.appendChild(spinner);\r\n    targetContainer.insertAdjacentElement('afterend', loadingContainer);\r\n  } else if (status === false) {\r\n    // Remove o container de loading\r\n    const loadingContainer = document.getElementById(loadingContainerId);\r\n    if (loadingContainer) {\r\n      loadingContainer.remove();\r\n    }\r\n\r\n    // Mostra o container original novamente\r\n    targetContainer.style.display = '';\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n// Componente genérico de formulário\r\nconst Formulario = ({\r\n    headerIcon,\r\n    headerTitle,\r\n    formBody,\r\n    footerLeftButtonText,\r\n    footerLeftButtonAction,\r\n    footerRightButtonText,\r\n    footerRightButtonAction,\r\n    isDark = false, // Atributo isDark com valor padrão false\r\n}) => {\r\n    return (\r\n        <div className='container   my-2'  style={{ maxWidth: '500px' }}>\r\n            <div className={`card ${isDark ? 'bg-dark' : ''}`}>\r\n                <div className={`card-header d-flex align-items-center border-bottom ${isDark ? 'bg-dark text-white' : ''}`}>\r\n                    <i className={`bi bi-${headerIcon} fs-5 me-2 ${isDark ? 'text-white' : 'text-dark'}`}></i>\r\n                    <p className={`fs-5 font-monospace fw-bold mb-0 ${isDark ? 'text-white' : 'text-dark'}`}>\r\n                        {headerTitle}\r\n                    </p>\r\n                </div>\r\n                <form className={`container card-body ${isDark ? 'bg-dark text-white' : ''}`} id=\"formulario\">\r\n                    {formBody}\r\n                </form>\r\n                <div className={`card-footer d-flex justify-content-${footerRightButtonAction ? 'between' : 'center'} ${isDark ? 'bg-dark' : ''}`}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary btn-sm\"\r\n                        onClick={footerLeftButtonAction}\r\n                    >\r\n                        {footerLeftButtonText}\r\n                    </button>\r\n                    {footerRightButtonAction && (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={footerRightButtonAction}\r\n                        >\r\n                            {footerRightButtonText}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Formulario;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport request from 'src/utils/api';\r\nimport alerta from 'src/utils/alerta';\r\nimport loading from 'src/utils/loading';\r\nimport Formulario from '@objetos/Formulario';\r\nimport { useAuth } from 'src/utils/AuthProvider';\r\nimport { setCookie } from 'src/utils/storage';\r\n\r\nconst LoginForm = () => {\r\n  const { setIsAuthenticated } = useAuth();\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => email.trim() !== '' && senha.trim() !== '';\r\n\r\n  const handleLogin = async () => {\r\n    if (!validateForm()) {\r\n      alerta('Preencha todos os campos!', 2,'form_login');\r\n      return;\r\n    }\r\n\r\n      try {\r\n        loading(true, 'form_login');\r\n        const response = await request('public/login/', 'POST', { email, senha });\r\n        \r\n        if (response.sucesso) {\r\n            // Armazena o token de autenticação no cookie\r\n            setCookie('authToken', response.token, { expires: 1 }); // Define o cookie para expirar em 1 dia\r\n            setCookie('authentication','true');\r\n            setIsAuthenticated(\"true\"); // Atualiza o estado no contexto\r\n            navigate('/cliente'); // Redireciona para a página de usuários\r\n        } else {\r\n            alerta(response.message, 2, 'form_login');\r\n        }\r\n    } catch (error) {\r\n        alerta(error.message || 'Erro ao fazer login', 2, 'form_login');\r\n    } finally {\r\n        loading(false, 'form_login');\r\n    }\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    // Redireciona para a página de cadastro\r\n    navigate('/cadastro');\r\n  };\r\n\r\n  return (\r\n    <div id=\"form_login\" className='container mx-auto'>\r\n\r\n    <Formulario\r\n      headerIcon=\"person\"\r\n      headerTitle=\"Acessar Conta\"\r\n      isDark={false}\r\n      formBody={\r\n        <>\r\n          {/* Campo de e-mail */}\r\n          <div className=\"form-floating mb-2\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <label htmlFor=\"email\">E-mail</label>\r\n          </div>\r\n\r\n          {/* Campo de senha */}\r\n          <div className=\"form-floating mb-2\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              id=\"senha\"\r\n              name=\"senha\"\r\n              value={senha}\r\n              onChange={(e) => setSenha(e.target.value)}\r\n            />\r\n            <label htmlFor=\"senha\">Senha</label>\r\n          </div>\r\n        </>\r\n      }\r\n      footerLeftButtonText=\"Cadastre-se\"\r\n      footerLeftButtonAction={handleRegister}\r\n      footerRightButtonText=\"Entrar\"\r\n      footerRightButtonAction={handleLogin}\r\n    />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport {  Form, FloatingLabel } from 'react-bootstrap';\r\nimport alerta from 'src/utils/alerta';\r\nimport request from 'src/utils/api';\r\nimport loading from 'src/utils/loading';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Formulario from '@objetos/Formulario';\r\n\r\nconst CadastroForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    nome: '',\r\n    email: '',\r\n    senha: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const register = async () => {\r\n    const { nome, email, senha } = formData;\r\n    try {\r\n      loading(true, 'form');\r\n      const response = await request('public/Cadastro/', 'POST', { nome, email, senha });\r\n      if (response.sucesso === true) {\r\n        alerta(response.message, 1);\r\n        navigate('/login'); // Redireciona para a página de login após o cadastro bem-sucedido\r\n      } else {\r\n        alerta(response.message, 2);\r\n      }\r\n    } catch (error) {\r\n      alerta('Erro ao registrar. Por favor, tente novamente.', 2);\r\n    } finally {\r\n      loading(false, 'form');\r\n    }\r\n  };\r\n\r\n  const validate = () => formData.nome && formData.email && formData.senha;\r\n\r\n  const handleSubmit = async () => {\r\n    if (validate()) {\r\n      await register();\r\n    } else {\r\n      alerta('Por favor, preencha todos os campos obrigatórios.', 2);\r\n    }\r\n  };\r\n\r\n  const limpar = () => {\r\n    setFormData({\r\n      nome: '',\r\n      email: '',\r\n      senha: '',\r\n    });\r\n  };\r\n\r\n  const renderContainer = () => (\r\n    <>\r\n      <FloatingLabel controlId=\"nome\" className=\"mb-2\" label=\"Nome\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Nome\"\r\n          name=\"nome\"\r\n          value={formData.nome}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel controlId=\"email\" className=\"mb-2\" label=\"E-mail\">\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"E-mail\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel controlId=\"senha\" className=\"mb-2\" label=\"Senha\">\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Senha\"\r\n          name=\"senha\"\r\n          value={formData.senha}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <form id=\"form\" className=\"form-signin container mx-auto my-2\">\r\n      <Formulario\r\n        headerIcon=\"person\"\r\n        headerTitle=\"Cadastro Usuário\"\r\n        formBody={renderContainer()}\r\n        footerLeftButtonText=\"Limpar\"\r\n        footerLeftButtonAction={limpar}\r\n        footerRightButtonText=\"Cadastrar\"\r\n        footerRightButtonAction={handleSubmit}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CadastroForm;\r\n","// src/components/erro.js\r\nimport React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Erro = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const title = queryParams.get('title') || 'Ocorreu um erro!';\r\n  const descricao = queryParams.get('descricao') || 'Desculpe-nos pelo inconveniente.';\r\n  const urlRedirect = queryParams.get('urlRedirect') || '';\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <div className=\"container-erro my-4 container  justify-content-between align-items-center text-center mx-0 mx-sm-auto\">\r\n        <h1 className=\"h1-erro\">{title}</h1>\r\n        <p className=\"p-erro\">{descricao}</p>\r\n        {urlRedirect && (\r\n          <a href={urlRedirect} className=\"btn btn-primary\">Voltar</a>\r\n        )}\r\n        <p>Por favor, tente novamente mais tarde ou entre em contato conosco para obter assistência.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nErro.propTypes = {\r\n  title: PropTypes.string,\r\n  descricao: PropTypes.string,\r\n  urlRedirect: PropTypes.string,\r\n};\r\n\r\nexport default Erro;\r\n","import React from 'react';\r\nimport InputMask from 'react-input-mask'; // Importa a biblioteca para máscaras\r\n\r\n// Refatorando o Input para aceitar máscara\r\nconst Input = React.memo(\r\n  React.forwardRef(({ id, name, type = 'text', label, value, onChange, mask }, ref) => {\r\n    return (\r\n      <div className={`form-floating mb-2`}>\r\n        {mask ? (\r\n          <InputMask\r\n            type={type}\r\n            className=\"form-control\"\r\n            id={id}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            mask={mask} // Adicionando a propriedade de máscara\r\n            ref={ref} // Encaminhando a referência para o input\r\n          />\r\n        ) : (\r\n          <input\r\n            type={type}\r\n            className=\"form-control\"\r\n            id={id}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange} // Certifique-se de que onChange está sendo usado corretamente\r\n            ref={ref} // Encaminhando a referência para o input\r\n          />\r\n        )}\r\n        <label htmlFor={id}>{label}</label>\r\n      </div>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst Label = ({ htmlFor, title, value, iconClass }) => (\r\n    <div className=\"form-group\">\r\n        <label className=\"col-auto fw-bolder col-form-label fw-bold pe-1\" htmlFor={htmlFor}>\r\n            {iconClass && <i className={`bi me-2 bi-${iconClass}`}></i>}\r\n            {title}\r\n        </label>\r\n        {value && <span id={htmlFor}>{value}</span>}\r\n    </div>\r\n);\r\n\r\nexport default Label;\r\n","export default class CustomInterface {\r\n    constructor(data = {}) {\r\n        // Inicializa as propriedades comuns 'Insert' e 'Update'\r\n        this.insert = data.insert || null;  // Data de criação\r\n        this.update = data.update || null;  // Data de última atualização\r\n    }\r\n\r\n    // Método que transforma a instância da interface no formato para ser enviado à API\r\n    toApiPayload() {\r\n        return {\r\n            Insert: this.insert ? this.insert.toISOString() : null,  // Converte a data para o formato ISO\r\n            Update: this.update ? this.update.toISOString() : null,  // Converte a data para o formato ISO\r\n        };\r\n    }\r\n\r\n    // Método que processa o valor com base no tipo\r\n    processValue(value, type) {\r\n        switch (type) {\r\n            case String:\r\n                return String(value);\r\n\r\n            case 'decimal':\r\n                return this.processDecimal(value);\r\n\r\n            case Date:\r\n                return new Date(value).toISOString(); // Converte a data para o formato ISO\r\n\r\n            case Boolean:\r\n                return Boolean(value); // Converte para booleano\r\n\r\n            case 'guid':\r\n                return value.toString(); // Garante que é uma string de GUID\r\n\r\n            default:\r\n                return value; // Retorna o valor inalterado para tipos desconhecidos\r\n        }\r\n    }\r\n\r\n    // Processa valores decimais e formata conforme necessário (ex. para o backend)\r\n    processDecimal(value) {\r\n        if (value) {\r\n            // Remove espaços e pontos (separadores de milhar) e substitui a vírgula por ponto\r\n            // Remove os pontos (separadores de milhar) e substitui a vírgula por ponto\r\n            const cleanedValue = value.trim().replace(/\\./g, '').replace(',', '.');\r\n            const numericValue = parseFloat(cleanedValue);\r\n            // Verifica se o valor é um número válido\r\n            return isNaN(numericValue) ? '0.00' : numericValue.toFixed(2);\r\n        }\r\n        return '0.00'; // Valor padrão se não houver entrada\r\n    }\r\n\r\n    // Método para formatar o valor monetário para exibição no frontend\r\n    processValueForDisplay(value) {\r\n        if (!value) return '0,00';\r\n\r\n        const numericValue = parseFloat(value);\r\n        return !isNaN(numericValue)\r\n            ? numericValue.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })\r\n            : '0,00';\r\n    }\r\n\r\n    // Método privado para formatar a data no formato brasileiro (DD/MM/YYYY HH:mm)\r\n    formatDate(date) {\r\n        const options = {\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            hour12: false // Para usar o formato de 24 horas\r\n        };\r\n        return new Intl.DateTimeFormat('pt-BR', options).format(date);\r\n    }\r\n\r\n    // Método genérico para converter todas as chaves de um objeto para minúsculas\r\n    convertKeysToLowercase(data) {\r\n        return Object.keys(data).reduce((acc, key) => {\r\n            acc[key.toLowerCase()] = data[key];\r\n            return acc;\r\n        }, {});\r\n    }\r\n}\r\n","import CustomInterface from './CustomInterface';\r\nexport default class CobrancaInterface extends CustomInterface {\r\n    constructor(data = {}) {\r\n        // Chamando o construtor da classe base e convertendo as chaves para minúsculas\r\n        super(data);\r\n        const formattedData = this.convertKeysToLowercase(data);\r\n\r\n        // Inicializações específicas para CobrancaInterface com chaves minúsculas\r\n        this.id = formattedData.id || '';\r\n        this.descricao = formattedData.descricao || '';\r\n        this.valor = this.convertAndFormatValue(formattedData.valor || 0.0); // Processa o valor baseado no tipo\r\n        this.data = formattedData.data ? new Date(formattedData.data) : new Date(); // Data padrão para o campo 'data'\r\n        this.pago = formattedData.pago || false;\r\n        this.clienteId = formattedData.clienteid || ''; // Certifique-se de que a chave esteja correta\r\n    }\r\n\r\n    // Método para converter e formatar o valor baseado no tipo\r\n    convertAndFormatValue(value) {\r\n        if (typeof value === 'string') {\r\n            return value;  \r\n        }  else if (typeof value === 'number') {\r\n            if (!value) {\r\n                return '0,00'; // Valor padrão se não houver entrada\r\n            }\r\n            \r\n            // Verifica se o valor é um número\r\n            if (typeof value === 'number') {\r\n                return value.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n            }\r\n            \r\n            return '0,00'; // Valor padrão\r\n        }\r\n    }\r\n\r\n    \r\n    static fromApiResponse(data) {\r\n        return new CobrancaInterface(data);\r\n    }\r\n\r\n    // Converte os valores para o payload da API com chaves apropriadas\r\n    toApiPayload() {\r\n        return {\r\n            id: this.processValue(this.id, 'guild'),  // Simulando o tipo Guid em JavaScript\r\n            descricao: this.processValue(this.descricao, String),  // Simulando string\r\n            valor: this.processValue(this.valor, 'decimal'),  // Formato adequado para envio\r\n            data: this.processValue(this.data, Date),  // Simulando DateTime\r\n            pago: this.processValue(this.pago, Boolean),  // Simulando bool\r\n            clienteid: this.processValue(this.clienteId, 'guild'),  // Simulando Guid\r\n        };\r\n    }\r\n}\r\n","import CustomInterface from './CustomInterface';\r\nimport CobrancaInterface from './CobrancaInterface';\r\n\r\nexport default class ClienteInterface extends CustomInterface {\r\n    constructor(data = {}) {\r\n        super(data);  // Chama o construtor da CustomInterface para inicializar 'Created' e 'Updated'\r\n\r\n        // Inicializações específicas para ClienteInterface\r\n        const formattedData = this.convertKeysToLowercase(data); // Converte as chaves para minúsculas\r\n\r\n        this.id = formattedData.id || '';  // UUID do cliente\r\n        this.nome = formattedData.nome || '';  // Nome do cliente\r\n        this.documento = formattedData.documento || '';  // Documento do cliente (CPF/CNPJ)\r\n        this.telefone = formattedData.telefone || '';  // Telefone do cliente\r\n        this.endereco = formattedData.endereco || '';  // Endereço do cliente\r\n        this.usuarioId = formattedData.usuarioid || '';  // UUID do usuário relacionado a esse cliente\r\n\r\n        // Inicializa a lista de cobranças\r\n        this.cobrancas = this.initializeCobrancas(formattedData.cobrancas);\r\n    }\r\n\r\n    // Método privado para inicializar a lista de cobranças\r\n    initializeCobrancas(cobrancasData) {\r\n        return Array.isArray(cobrancasData) \r\n            ? cobrancasData.map(cobranca => new CobrancaInterface(cobranca))\r\n            : [];  // Retorna uma lista vazia se não for um array\r\n    }\r\n\r\n    static fromApiResponse(data) {\r\n        return new ClienteInterface(data);\r\n    }\r\n\r\n    // Método para preparar os dados para enviar à API\r\n    toApiPayload() {\r\n        return {\r\n            ...super.toApiPayload(),  // Inclui 'Created' e 'Updated' da CustomInterface\r\n            id: this.id,\r\n            nome: this.nome,\r\n            documento: this.documento,\r\n            telefone: this.telefone,\r\n            endereco: this.endereco,\r\n            usuarioid: this.usuarioId,  // Use a chave em minúsculas\r\n            cobrancas: this.cobrancas.map(cobranca => cobranca.toApiPayload()),  // Converte cada cobrança para o formato de payload\r\n        };\r\n    }\r\n}\r\n","import ClienteInterface from '@interface/ClienteInterface'; \r\nimport request from '@utils/api';  \r\n\r\nexport default class ClienteService {\r\n    // Método para obter um cliente pelo ID\r\n    static async getClienteById(id) {\r\n        const response = await request(`cliente/${id}`, 'GET');\r\n        if (response.sucesso) {\r\n            response.cliente = ClienteInterface.fromApiResponse(response.data);\r\n        } else {\r\n            response.cliente = null; // Se não for bem-sucedido, define como null\r\n        }\r\n        return response; // Retorna a resposta original\r\n    }\r\n\r\n    // Método para obter todos os clientes\r\n    static async getAllClientes() {\r\n        const response = await request('cliente', 'GET');\r\n        if (response.sucesso) {\r\n            response.clientes = response.data.map(cliente => ClienteInterface.fromApiResponse(cliente));\r\n        } else {\r\n            response.clientes = []; // Define como array vazio se houver erro\r\n        }\r\n        return response; // Retorna a resposta original\r\n    }\r\n\r\n    // Método para criar um novo cliente\r\n    static async createCliente(clienteDTO) {\r\n        const response = await request('cliente', 'POST', clienteDTO);\r\n        if (response.sucesso) {\r\n            response.cliente = ClienteInterface.fromApiResponse(response.data);\r\n        } else {\r\n            response.cliente = null; // Define como null se não for bem-sucedido\r\n        }\r\n        return response; // Retorna a resposta original\r\n    }\r\n\r\n    // Método para atualizar um cliente existente\r\n    static async updateCliente(id, clienteDTO) {\r\n        const response = await request(`cliente/${id}`, 'PUT', clienteDTO);\r\n        if (response.sucesso) {\r\n            response.cliente = ClienteInterface.fromApiResponse(response.data);\r\n        } else {\r\n            response.cliente = null; // Define como null se não for bem-sucedido\r\n        }\r\n        return response; // Retorna a resposta original\r\n    }\r\n\r\n    // Método para excluir um cliente\r\n    static async deleteCliente(id) {\r\n        const response = await request(`cliente/${id}`, 'DELETE');\r\n        return response; // Retorna a resposta original\r\n    }\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Input from '@objetos/Input';\r\nimport Label from '@objetos/Label';\r\nimport ClienteService from '@service/ClienteService';\r\nimport alerta from '@utils/alerta';\r\n\r\nconst useClienteForm = (id, isEditable) => {\r\n    const [formValues, setFormValues] = useState({\r\n        id: '',\r\n        nome: '',\r\n        telefone: '',\r\n        documento: '',     // documento deve estar na interface (se necessário)\r\n        endereco: '',      // Endereço deve estar na interface (se necessário)\r\n    });\r\n    const [cliente, setCliente] = useState({});\r\n\r\n    // Refatoração da função de mostrar mensagens\r\n    const showMessage = (message, type) => alerta(message, type); // type: 1 para sucesso, 2 para erro\r\n\r\n    const fetchCliente = useCallback(async () => {\r\n        if (!id) {\r\n            showMessage('ID do cliente não fornecido', 2);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await ClienteService.getClienteById(id);\r\n            if (response.sucesso) {\r\n                setFormValues(response.cliente);\r\n                setCliente(response.cliente);\r\n            } else {\r\n                showMessage(response.message, 2);\r\n            }\r\n        } catch {\r\n            showMessage('Erro ao buscar cliente', 2);\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            fetchCliente();\r\n        }\r\n    }, [id, fetchCliente]);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormValues((prevValues) => ({\r\n            ...prevValues,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const validatePayload = ({ nome, telefone, documento }) => {\r\n        const errors = [];\r\n    \r\n        // Validação do nome\r\n        if (!nome.trim()) {\r\n            errors.push('nome do cliente é obrigatório.');\r\n        } else if (nome.length < 3) {\r\n            errors.push('O nome deve ter pelo menos 3 caracteres.');\r\n        }\r\n    \r\n        // Validação do telefone\r\n        if (!telefone.trim()) {\r\n            errors.push('telefone é obrigatório.');\r\n        } else if (!/^\\(\\d{2}\\) \\d{5}-\\d{4}$/.test(telefone)) { // Validação do formato do telefone\r\n            errors.push('O telefone deve estar no formato (xx) xxxxx-xxxx.');\r\n        }\r\n    \r\n        // Validação do documento (CPF)\r\n        if (!documento.trim()) {\r\n            errors.push('documento é obrigatório.');\r\n        } else if (!/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/.test(documento)) { // Validação do formato do CPF\r\n            errors.push('O documento deve estar no formato xxx.xxx.xxx-xx.');\r\n        }\r\n    \r\n        return errors;\r\n    };\r\n    \r\n\r\n    const handleSubmit = async () => {\r\n        const errors = validatePayload(formValues);\r\n        if (errors.length > 0) {\r\n            showMessage(`Erro:\\n${errors.join('\\n')}`, 2);\r\n            return;\r\n        }\r\n        // Verifica se 'id' é nulo e, se for, remove a propriedade 'id' de formValues\r\n        const valuesToSubmit = id ? formValues : (({ id, ...rest }) => rest)(formValues); \r\n        try {\r\n            const response = id\r\n                ? await ClienteService.updateCliente(id, formValues)\r\n                : await ClienteService.createCliente(valuesToSubmit); // Adiciona a lógica para criar um novo cliente\r\n\r\n            if (response.sucesso) {\r\n                showMessage(id ? 'Cliente atualizado com sucesso!' : 'Cliente cadastrado com sucesso!', 1);\r\n                return true;\r\n            } else {\r\n                showMessage(response.message, 2);\r\n                return false;\r\n            }\r\n        } catch {\r\n            showMessage('Erro ao salvar cliente', 2);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const renderForm = () => (\r\n        <div>\r\n            <Input\r\n                id=\"nome\"\r\n                name=\"nome\"\r\n                value={formValues.nome}\r\n                label=\"nome do Cliente\"\r\n                onChange={handleChange}\r\n            />\r\n           <Input\r\n            id=\"telefone\"\r\n            name=\"telefone\"\r\n            value={formValues.telefone}\r\n            label=\"telefone\"\r\n            onChange={handleChange}\r\n            type=\"tel\"\r\n            mask=\"(99) 99999-9999\" // Máscara para telefone\r\n        />\r\n       \r\n        <Input\r\n            id=\"documento\"\r\n            name=\"documento\"\r\n            value={formValues.documento}\r\n            label=\"documento (CPF)\"\r\n            onChange={handleChange}\r\n            mask=\"999.999.999-99\" // Máscara para CPF\r\n        />\r\n        <Input\r\n            id=\"endereco\"\r\n            name=\"endereco\"\r\n            value={formValues.endereco}\r\n            label=\"Endereço\"\r\n            onChange={handleChange}\r\n        /> \r\n            \r\n        </div>\r\n    );\r\n    const renderLabels = () => (\r\n        <div>\r\n            <Label htmlFor=\"nome\" title=\"nome do Cliente:\" value={cliente.nome || ''} iconClass=\"person\" />\r\n            <Label htmlFor=\"telefone\" title=\"telefone:\" value={cliente.telefone || ''} iconClass=\"telephone\" />\r\n            <Label htmlFor=\"documento\" title=\"documento:\" value={cliente.documento || ''} iconClass=\"file-earmark-text\" />\r\n            <Label htmlFor=\"endereco\" title=\"Endereço:\" value={cliente.endereco || ''} iconClass=\"house\" />\r\n            <Label htmlFor=\"created\" title=\"Data de Criação:\" value={cliente.insert || ''} iconClass=\"calendar\" /> {/* Propriedade Created */}\r\n            <Label htmlFor=\"updated\" title=\"Data de Atualização:\" value={cliente.update || ''} iconClass=\"calendar\" /> {/* Propriedade Updated */}\r\n        </div>\r\n    );\r\n    \r\n\r\n    return isEditable ? { handleSubmit, renderForm } : { renderForm: renderLabels };\r\n};\r\n\r\nexport default useClienteForm;\r\n","import React from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Formulario from '@objetos/Formulario';\r\nimport useClienteForm from './useClienteForm';\r\n\r\nfunction ClienteForm() {\r\n  const { id } = useParams(); // Obtém o ID da URL\r\n  const navigate = useNavigate();\r\n  \r\n  // Usa o hook useClienteForm, passando o ID e a editabilidade\r\n  const { handleSubmit, renderForm } = useClienteForm(id || false, true);\r\n  \r\n   \r\n  const handleFormSubmit = async () => {\r\n    const success = await handleSubmit();\r\n    if (success) {\r\n    navigate('/cliente'); // Substitua pela rota desejada\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formulario\r\n      headerIcon=\"person\"\r\n      headerTitle={id ? 'Editar Cliente' : 'Cadastrar Cliente'} // Muda o título conforme a operação\r\n      isDark={false}\r\n      formBody={renderForm()} // Renderiza o formulário baseado no hook\r\n      footerLeftButtonText={id ? 'Cancelar' : 'Voltar'}\r\n      footerLeftButtonAction={() => navigate('/cliente')} // Navega para a lista de clientes\r\n      footerRightButtonText={id ? 'Salvar' : 'Cadastrar'}\r\n      footerRightButtonAction={handleFormSubmit} // Chama a função de submit do formulário\r\n    />\r\n  );\r\n}\r\n\r\nexport default ClienteForm;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Tooltip = ({ content, children, position = \"top\" }) => {\r\n  const [tooltipPosition, setTooltipPosition] = useState(position); // posição inicial recebida como prop\r\n  const tooltipRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const adjustPosition = () => {\r\n      const tooltipEl = tooltipRef.current;\r\n      if (!tooltipEl) return;\r\n\r\n      const rect = tooltipEl.getBoundingClientRect();\r\n      const isOutOfBoundsTop = rect.top < 0;\r\n      const isOutOfBoundsRight = rect.right > window.innerWidth;\r\n      const isOutOfBoundsLeft = rect.left < 0;\r\n      const isOutOfBoundsBottom = rect.bottom > window.innerHeight;\r\n\r\n      // Ajuste de posição baseado na disponibilidade de espaço\r\n      if (isOutOfBoundsTop && position === 'top') {\r\n        if (isOutOfBoundsRight) {\r\n          setTooltipPosition('left');\r\n        } else if (isOutOfBoundsLeft) {\r\n          setTooltipPosition('right');\r\n        } else {\r\n          setTooltipPosition('bottom');\r\n        }\r\n      } else if (isOutOfBoundsBottom && position === 'bottom') {\r\n        setTooltipPosition('top');\r\n      }\r\n    };\r\n\r\n    adjustPosition(); // Ajustar a posição inicialmente\r\n    window.addEventListener('resize', adjustPosition); // Reajustar em caso de redimensionamento\r\n\r\n    return () => window.removeEventListener('resize', adjustPosition);\r\n  }, [position]);\r\n\r\n  return (\r\n    <div className=\"tooltip-container\">\r\n      {children}\r\n      <div ref={tooltipRef} className={`tooltip-box ${tooltipPosition}`}>\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React from 'react';\r\nimport Tooltip from '@objetos/Tooltip'\r\nconst Table = ({ dataHeader, columns, rows }) => {\r\n  return (\r\n    <div className=\"my-2 container-fluid p-1\">\r\n      {/* Título e botão de ação */}\r\n      <div className=\"d-flex container-xxl justify-content-between mb-2 row   mx-auto p-1\">\r\n        <h1 className=\"text-start col\" style={{ fontSize: '1.0rem' }}>\r\n          <i className={`bi bi-${dataHeader.icon}-fill`}></i> {dataHeader.title}\r\n        </h1>\r\n        <button\r\n          onClick={dataHeader.onClickBtn}\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm col-auto mx-auto me-sm-2\"\r\n          style={{ fontSize: '0.8rem' }}\r\n        >\r\n          <i className={`bi bi-${dataHeader.iconBtn} me-1`} style={{ fontSize: '0.8rem' }}></i>\r\n          {dataHeader.buttonText}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Tabela */}\r\n      <div className=\"container-xxl p-3 mx-auto bg-dark rounded\">\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover table-sm table-dark\">\r\n            <thead>\r\n              <tr className=\"font-monospace\" style={{ fontSize: '0.8rem' }}>\r\n                {columns.map((colTitle, index) => (\r\n                  <th key={index} scope=\"col\" className={`${index === 0 ? 'text-start' : index === columns.length - 1 ? 'text-end pe-2' : 'text-center'}`}>\r\n                    {colTitle}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-group-divider\">\r\n              {rows.map((row, rowIndex) => (\r\n                <tr key={rowIndex} className=\"font-monospace\" style={{ fontSize: '0.8rem' }}>\r\n                  {row.data.map((cell, cellIndex) => (\r\n                    <td key={cellIndex} className={`${cellIndex === 0 ? 'text-start' : 'text-center'} align-middle`}>\r\n                      {cell}\r\n                    </td>\r\n                  ))}\r\n                <td className=\"text-end align-middle\">\r\n                  <div className=\"btn-group-sm btn-group pe-2\" role=\"group\" aria-label=\"Ações\">\r\n                      {row.actions.map((action) => (\r\n                          <button\r\n                              key={action.id || action.name} // Use action.id se disponível, caso contrário, action.name\r\n                              type=\"button\"\r\n                              className={`btn btn-${action.type} btn-sm`}\r\n                              onClick={action.onClick}\r\n                          >\r\n                              <Tooltip content={action.name} position=\"top\">\r\n                                  <i className={`bi bi-${action.icon}`}></i>\r\n                              </Tooltip>\r\n                          </button>\r\n                      ))}\r\n                  </div>\r\n              </td>\r\n\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, memo } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n// Hook customizado para controlar o modal\r\nexport const useCustomModal = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const CustomModal = memo(({ icon, title, children, footer }) => (\r\n    <Modal\r\n      show={show}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      contentClassName=\"bg-light\"\r\n      dialogClassName=\"modal-md modal-dialog-centered modal-dialog-scrollable\"\r\n      aria-labelledby=\"staticBackdropLabel\"\r\n    >\r\n      <Modal.Header className=\"text-dark py-2\">\r\n        <h5 id=\"staticBackdropLabel\" className=\"modal-title fs-5 font-monospace text-black fw-bolder\">\r\n          <i className={`me-2 bi bi-${icon}`}></i>\r\n          {title}\r\n        </h5>\r\n        <Button\r\n          variant=\"link\"\r\n          onClick={() => setShow(false)}  // <-- Corrigido aqui\r\n          className=\"ms-auto mt-0 p-0\"\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n        >\r\n          <i className=\"bi bi-x fw-bold\" style={{ fontSize: '25px' }} />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"text-dark\">\r\n        {children}\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"text-dark py-2 d-flex justify-content-between\">\r\n        {footer}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  ));\r\n\r\n  return { CustomModal, setShow };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useCustomModal } from 'src/components/objetos/Modal';\r\nimport alerta from 'src/utils/alerta';\r\nimport useClienteForm from './useClienteForm';\r\n\r\nconst useUsuarioModal = (id) => {\r\n    const { CustomModal, setShow } = useCustomModal();\r\n    const [clienteId, setClienteId] = useState(null);\r\n    const { renderForm } = useClienteForm(clienteId, false); // Chama o hook aqui\r\n\r\n    const openModal = (id_cliente = false, view = false) => {\r\n        if (!id_cliente) {\r\n            alerta('ID do cliente não fornecido');\r\n            return setShow(false);\r\n        }\r\n\r\n        setClienteId(id_cliente); // Armazena o ID do cliente\r\n        setShow(view);\r\n    };\r\n\r\n    const renderFooter = () => (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary btn-sm mx-auto\"\r\n            onClick={() => setShow(false)}\r\n        >\r\n            Fechar\r\n        </button>\r\n    );\r\n\r\n    const ClienteModalComponent = () => (\r\n        <CustomModal\r\n            icon=\"person\"\r\n            title=\"Visualizar Cliente\"\r\n            children={renderForm()}\r\n            footer={renderFooter()}\r\n        />\r\n    );\r\n\r\n    return { openModal, ClienteModalComponent };\r\n};\r\n\r\nexport default useUsuarioModal;\r\n","import React, { useState } from 'react';\r\nimport { useCustomModal } from 'src/components/objetos/Modal';\r\n\r\nconst useConfirmationModal = () => {\r\n    const { CustomModal, setShow } = useCustomModal();\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [onConfirm, setOnConfirm] = useState(() => () => { });\r\n\r\n    const openModal = (title, description, onConfirmCallback) => {\r\n        setTitle(title);\r\n        setDescription(description);\r\n        setOnConfirm(() => onConfirmCallback);\r\n        setShow(true); // Abre o modal\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShow(false); // Fecha o modal\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        onConfirm(); // Executa a função de confirmação\r\n        closeModal(); // Fecha o modal\r\n    };\r\n\r\n    const renderFooter = () => (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary btn-sm me-auto\"\r\n                onClick={closeModal}>\r\n                Cancelar\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-sm\"\r\n                onClick={handleConfirm}>\r\n                Confirmar\r\n            </button>\r\n        </>\r\n    );\r\n\r\n    const ConfirmationModalComponent = () => (\r\n        <CustomModal\r\n            icon=\"exclamation-triangle\"\r\n            title={title}\r\n            children={<p>{description}</p>}\r\n            footer={renderFooter()}\r\n        />\r\n    );\r\n\r\n    return { openModal, ConfirmationModalComponent };\r\n};\r\n\r\nexport default useConfirmationModal;\r\n","import React, { useState } from 'react';\r\n\r\n// Componente de pesquisa com sugestões\r\nconst InputSearch = ({ \r\n    id, \r\n    name, \r\n    value, \r\n    onChange, \r\n    placeholder, \r\n    suggestions = [], // Sugestões padrão vazias, se não forem passadas\r\n    label, \r\n    onSuggestionClick // Função chamada quando uma sugestão é selecionada\r\n}) => {\r\n    // Estado para armazenar as sugestões filtradas\r\n    const [filteredSuggestions, setFilteredSuggestions] = useState([]);\r\n\r\n    // Manipulador de mudança para o campo de entrada\r\n    const handleInputChange = (e) => {\r\n        const query = e.target.value; // Obtém o valor do input\r\n\r\n        // Passa o valor correto para o manipulador de mudança\r\n        onChange({\r\n            target: {\r\n                name,\r\n                value: query, // Atualiza o valor com a consulta do input\r\n            },\r\n        });\r\n\r\n        // Filtra as sugestões com base na consulta do usuário\r\n        setFilteredSuggestions(\r\n            suggestions.filter((suggestion) =>\r\n                suggestion.label.toLowerCase().includes(query.toLowerCase())\r\n            )\r\n        );\r\n    };\r\n\r\n    // Manipulador de clique para uma sugestão selecionada\r\n    const handleSuggestionClick = (suggestion) => {\r\n        // Atualiza o valor do input com a label da sugestão selecionada\r\n        onChange({\r\n            target: {\r\n                name,\r\n                value: suggestion.label, // A label da sugestão selecionada\r\n            },\r\n        });\r\n\r\n        // Chama a função onSuggestionClick se ela foi passada como prop\r\n        if (onSuggestionClick) {\r\n            onSuggestionClick(suggestion); // Executa a função passada com a sugestão\r\n        }\r\n\r\n        // Limpa as sugestões após a seleção\r\n        setFilteredSuggestions([]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"position-relative form-floating mb-2\">\r\n            <input\r\n                id={id}\r\n                name={name}\r\n                value={value} // Exibe o valor atual do input\r\n                onChange={handleInputChange} // Chamamos a função ao digitar\r\n                placeholder={placeholder}\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                // Armazena o ID correspondente à sugestão no data-value\r\n                data-value={suggestions.find(suggestion => suggestion.label === value)?.value || ''}\r\n            />\r\n            <label htmlFor={id}>{label}</label>\r\n\r\n            {/* Renderiza a lista de sugestões se houver sugestões filtradas */}\r\n            {filteredSuggestions.length > 0 && (\r\n                <ul className=\"list-group position-absolute w-100\" style={{ zIndex: 1000 }}>\r\n                    {filteredSuggestions.map((suggestion, index) => (\r\n                        <li \r\n                            key={index} \r\n                            className=\"list-group-item\"\r\n                            onClick={() => handleSuggestionClick(suggestion)} // Adiciona o manipulador de clique\r\n                        >\r\n                            {suggestion.label} {/* Exibe a propriedade 'label' da sugestão */}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputSearch;\r\n","import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Select = forwardRef(({ id, name, options = [], value, onChange, className = '', label }, ref) => {\r\n    // Verifica se options é um array e não é nulo ou indefinido\r\n    const renderOptions = Array.isArray(options) ? options : [];\r\n\r\n    return (\r\n        <div className={`form-floating mb-2 ${className}`}>\r\n            <select\r\n                id={id}\r\n                name={name}\r\n                className=\"form-control\"\r\n                value={value}\r\n                onChange={onChange}\r\n                ref={ref}\r\n            >\r\n                {renderOptions.map(({ value: optionValue, label: optionLabel }) => (\r\n                    <option key={optionValue} value={optionValue}>\r\n                        {optionLabel}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <label htmlFor={id}>{label}</label>\r\n        </div>\r\n    );\r\n});\r\n\r\n// Definição dos tipos das props\r\nSelect.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    options: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            value: PropTypes.oneOfType([ // Aceitando boolean, string e outros tipos\r\n                PropTypes.string,\r\n                PropTypes.bool,\r\n                PropTypes.number // Adicione mais tipos conforme necessário\r\n            ]).isRequired,\r\n            label: PropTypes.string.isRequired,\r\n        })\r\n    ).isRequired,\r\n    value: PropTypes.oneOfType([ // Aceitando boolean, string e outros tipos\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.number // Adicione mais tipos conforme necessário\r\n    ]).isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    className: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Select;\r\n","import { CobrancaInterface } from '@interface'; // Interface para Cobranca\r\nimport request from '@utils/api';  \r\n\r\nclass CobrancaService {\r\n    // Método para obter uma cobrança pelo ID\r\n    static async getCobrancaById(id) {\r\n        const response = await request(`cobranca/${id}`, 'GET');\r\n        if (response.sucesso) {\r\n            response.cobranca = CobrancaInterface.fromApiResponse(response.data);\r\n        } else {\r\n            response.cobranca = null; // Define como null se não for bem-sucedido\r\n        }\r\n        return response; // Retorna a resposta original\r\n    }\r\n\r\n    // Método para obter todas as cobranças\r\n    static async getAllCobrancas() {\r\n        const response = await request('cobranca', 'GET');\r\n        if (response.sucesso) {\r\n            response.cobrancas = response.data.map(cobranca => CobrancaInterface.fromApiResponse(cobranca));\r\n        } else {\r\n            response.cobrancas = []; // Define como array vazio se houver erro\r\n        }\r\n        return response; // Retorna a resposta original\r\n    }\r\n\r\n    // Método para criar uma nova cobrança\r\n    static async createCobranca(cobrancaDTO) {\r\n        try {\r\n            const response = await request('cobranca', 'POST', cobrancaDTO);\r\n            // Verifica se a resposta foi bem-sucedida\r\n            if (response.sucesso) {\r\n                // Mapeia a cobrança da resposta para a interface\r\n                response.cobranca = CobrancaInterface.fromApiResponse(response.data);\r\n            } else {\r\n                response.cobranca = null; // Define como null se não for bem-sucedido\r\n            }\r\n            return response; // Retorna a resposta original\r\n        } catch (error) {\r\n            // Lida com erros que possam ocorrer durante a requisição\r\n            console.error('Erro ao criar cobrança:', error);\r\n            return {\r\n                sucesso: false,\r\n                message: 'Erro ao criar cobrança.',\r\n                cobranca: null\r\n            };\r\n        }\r\n    }\r\n\r\n    // Método para atualizar uma cobrança existente\r\n    static async updateCobranca(id, cobrancaDTO) {\r\n        const response = await request(`cobranca/${id}`, 'PUT', cobrancaDTO);\r\n        if (response.sucesso) {\r\n            response.cobranca = CobrancaInterface.fromApiResponse(response.data);\r\n        } else {\r\n            response.cobranca = null; // Define como null se não for bem-sucedido\r\n        }\r\n        return response; // Retorna a resposta original\r\n    }\r\n\r\n    // Método para atualizar o status de pagamento\r\n    static async updatePago(id, pago) {\r\n        // Certifique-se de que 'pago' é um booleano\r\n        const response = await request(`cobranca/${id}/pago`, 'PUT', pago );\r\n        if (response.sucesso) {\r\n            response.cobranca = CobrancaInterface.fromApiResponse(response.data);\r\n        } else {\r\n            response.cobranca = null; // Define como null se não for bem-sucedido\r\n        }\r\n        return response; // Retorna a resposta original\r\n    }\r\n\r\n\r\n    // Método para excluir uma cobrança\r\n    static async deleteCobranca(id) {\r\n        const response = await request(`cobranca/${id}`, 'DELETE');\r\n        return response;  \r\n    }\r\n}\r\n\r\nexport default CobrancaService;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Input from '@objetos/Input';\r\nimport Label from '@objetos/Label';\r\nimport InputSearch from '@objetos/InputSearch';\r\nimport Select from '@objetos/Select';\r\nimport { CobrancaService, ClienteService } from '@service';\r\nimport alerta from '@utils/alerta';\r\nimport { CobrancaInterface } from '@interface';\r\nimport loading from '@utils/loading'\r\nconst useCobrancaForm = (id, isEditable, id_cliente_select = null) => {\r\n  const showMessage = (message, type) => alerta(message, type);\r\n  const setloading = (status) => loading(status, 'id_formulario_loading');\r\n  const [formValues, setFormValues] = useState({\r\n    id: '',\r\n    descricao: '',\r\n    valor: '',\r\n    data: '',\r\n    pago: '',\r\n    clienteId: '',\r\n  });\r\n\r\n  const [cobranca, setCobranca] = useState({});\r\n  const [clientes, setClientes] = useState([]);\r\n  const [id_cliente, setIdCliente] = useState(id_cliente_select);\r\n  const [cliente, setCliente] = useState(null);\r\n  const [clienteNome, setClienteNome] = useState('');\r\n// Refatoração: combinando a lógica de fetch de clientes e cobrança\r\nconst fetchData = useCallback(async () => {\r\n  setloading(true);\r\n\r\n  try {\r\n    let responseCobranca = null; // Inicializa a variável fora do escopo condicional\r\n\r\n    // Buscando a cobrança se o ID existir\r\n    if (id) {\r\n      try {\r\n        // Realiza a chamada à API para obter a cobrança\r\n        responseCobranca = await CobrancaService.getCobrancaById(id);\r\n\r\n        // Verifica se a resposta foi bem-sucedida\r\n        if (responseCobranca?.sucesso) {\r\n          setFormValues(responseCobranca.cobranca);\r\n          setCobranca(responseCobranca.cobranca);\r\n          setIdCliente(responseCobranca.cobranca.clienteId);\r\n        } else {\r\n          showMessage(responseCobranca?.message || \"Erro desconhecido ao obter cobrança\", 2);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        // Captura qualquer erro que ocorra na requisição\r\n        console.error(\"Erro ao buscar cobrança:\", error);\r\n        showMessage(\"Erro ao buscar cobrança\", 2);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Buscando clientes\r\n    const responseClientes = await ClienteService.getAllClientes();\r\n    if (responseClientes?.sucesso) {\r\n      setClientes(responseClientes.clientes);\r\n\r\n      // Determina o cliente selecionado\r\n      const clienteId = id_cliente || responseCobranca?.cobranca?.clienteId;\r\n      if (clienteId) {\r\n        const foundCliente = responseClientes.clientes.find(cliente => cliente.id === clienteId);\r\n        setCliente(foundCliente);\r\n        setClienteNome(foundCliente ? foundCliente.nome : '');\r\n        setFormValues(prevValues => ({\r\n          ...prevValues,\r\n          clienteId: foundCliente ? foundCliente.id : '',\r\n        }));\r\n      }\r\n    } else {\r\n      showMessage(responseClientes?.message || \"Erro desconhecido ao buscar clientes\", 2);\r\n    }\r\n  } catch (error) {\r\n    // Captura erros gerais\r\n    console.error(\"Erro ao buscar dados:\", error);\r\n    showMessage('Erro ao buscar dados', 2);\r\n  }\r\n  finally{\r\n  setloading(false);\r\n  }\r\n}, [id, id_cliente]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [id, fetchData]);\r\n\r\n  // Restante da lógica permanece igual\r\n  const formatarValor = (value) => {\r\n    // Remove tudo que não é dígito\r\n    const apenasNumeros = value.replace(/[^\\d]/g, '');\r\n\r\n    // Retorna string vazia se não houver números\r\n    if (!apenasNumeros) return '';\r\n\r\n    // Obtém a parte decimal (últimos 2 dígitos) e a parte inteira (restante)\r\n    let parteDecimal = apenasNumeros.slice(-2); // Últimos 2 dígitos como parte decimal\r\n    let parteInteira = apenasNumeros.slice(0, -2); // Resto como parte inteira\r\n\r\n    // Formata a parte inteira para incluir separadores de milhar\r\n    parteInteira = parteInteira.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n\r\n    // Se a parte inteira estiver vazia, mostra apenas a parte decimal\r\n    // Formata o valor final no estilo brasileiro\r\n    const valorFormatado = `${parteInteira}${parteInteira.length > 0 ? ',' : ''}${parteDecimal}`;\r\n\r\n    return valorFormatado; // Retorna o valor formatado\r\n};\r\n\r\n  const validatePayload = ({ descricao, valor, data, clienteId }) => {\r\n    const errors = [];\r\n    if (!descricao.trim()) errors.push('Descrição da cobrança é obrigatória.');\r\n    if (valor <= 0) errors.push('O valor deve ser maior que zero.');\r\n    if (!data || isNaN(new Date(data).getTime())) errors.push('Data é obrigatória e deve ser válida.');\r\n    if (!clienteId.trim()) errors.push('Cliente não foi selecionado. É obrigatório.');\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const errors = validatePayload(formValues);\r\n    if (errors.length > 0) {\r\n      showMessage(`Erro:\\n${errors.join('\\n')}`, 2);\r\n      return;\r\n    }\r\n\r\n    const cobranca = new CobrancaInterface(formValues);\r\n    const valuesToSubmit = id\r\n      ? cobranca.toApiPayload()\r\n      : (({ id, ...rest }) => rest)(cobranca.toApiPayload());\r\n\r\n    try {\r\n      const response = id\r\n        ? await CobrancaService.updateCobranca(id, valuesToSubmit)\r\n        : await CobrancaService.createCobranca(valuesToSubmit);\r\n\r\n      if (response.sucesso) {\r\n        showMessage(id ? 'Cobrança atualizada com sucesso!' : 'Cobrança cadastrada com sucesso!', 1);\r\n        return true;\r\n      } else {\r\n        showMessage(response.message || 'Erro inesperado ao processar a cobrança', 2);\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      showMessage('Erro ao salvar cobrança', 2);\r\n      console.error('Erro ao salvar cobrança:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const statusOptions = [\r\n    { value: false, label: 'Pendente' },\r\n    { value: true, label: 'Pago' },\r\n  ];\r\n\r\n  const clienteOptions = clientes.map(cliente => ({\r\n    value: cliente.id,\r\n    label: `${cliente.nome} - ${cliente.telefone}`,\r\n  }));\r\n\r\n  const handleSearchChange = (event) => {\r\n    const { value } = event.target;\r\n    setClienteNome(value);\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    const selectedCliente = clientes.find(cliente => cliente.id === suggestion.value);\r\n    setCliente(selectedCliente);\r\n    setClienteNome(selectedCliente ? selectedCliente.nome : '');\r\n    setFormValues(prevValues => ({\r\n      ...prevValues,\r\n      clienteId: selectedCliente ? selectedCliente.id : '',\r\n    }));\r\n  };\r\n  \r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n  \r\n    // Função para obter o novo valor baseado no campo\r\n    const getNewValue = () => {\r\n      switch (name) {\r\n        case 'data':\r\n          return new Date(value).toISOString().split('T')[0]; // Formata a data\r\n        case 'valor':\r\n          return formatarValor(value); // Formata o valor\r\n        case 'pago':\r\n          return value === 'true'; // Converte o valor para booleano\r\n        default:\r\n          return value; // Retorna o valor padrão para outros campos\r\n      }\r\n    };\r\n  \r\n    // Atualiza o estado com o novo valor\r\n    setFormValues((prevValues) => ({\r\n      ...prevValues,\r\n      [name]: getNewValue(), // Chama a função para obter o novo valor\r\n    }));\r\n  };\r\n  const formatToISO = (dateString) => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n\r\n\r\n  const renderForm = () => (\r\n    <div id=\"id_formulario_loading\">\r\n      <Input id=\"descricao\" name=\"descricao\" value={formValues.descricao} label=\"Descrição da Cobrança\" onChange={handleChange} />\r\n      <Input id=\"valor\" name=\"valor\" value={formValues.valor.toString()} label=\"Valor\" onChange={handleChange} type=\"text\" />\r\n      <Input id=\"data\" name=\"data\" value={formatToISO(formValues.data)} label=\"Data de vencimento\" onChange={handleChange} type=\"date\" />\r\n      <Select id=\"pago\" name=\"pago\" label=\"Status de Pagamento\" options={statusOptions} value={formValues.pago} onChange={handleChange} />\r\n      <InputSearch id=\"clienteId\" name=\"ClienteId\" label=\"Pesquise o Cliente (nome, telefone)\" suggestions={clienteOptions} value={clienteNome} onChange={handleSearchChange} onSuggestionClick={handleSuggestionClick} />\r\n    </div>\r\n  );\r\n\r\n  const renderLabels = () => (\r\n    <div id=\"id_formulario_loading\">\r\n      <Label htmlFor=\"descricao\" title=\"Descrição:\" value={cobranca.descricao || ''} iconClass=\"file-earmark-text\" />\r\n      <Label htmlFor=\"valor\" title=\"Valor:\" value={cobranca.valor || 0} iconClass=\"currency-dollar\" />\r\n      <Label htmlFor=\"data\" title=\"Data:\" value={cobranca.data ? new Date(cobranca.data).toLocaleDateString() : ''} iconClass=\"calendar\" />\r\n      <Label htmlFor=\"pago\" title=\"Status Pagamento:\" value={cobranca.pago ? 'Sim' : 'Pendente'} iconClass=\"check-circle\" />\r\n      <Label htmlFor=\"clienteId\" title=\"Cliente:\" value={cliente ? `${cliente.nome} - ${cliente.telefone}` : 'Não selecionado'} iconClass=\"person\" />\r\n      <Label htmlFor=\"created\" title=\"Data de Criação:\" value={cobranca.insert || ''} iconClass=\"calendar\" />\r\n      <Label htmlFor=\"updated\" title=\"Data de Atualização:\" value={cobranca.update || ''} iconClass=\"calendar\" />\r\n    </div>\r\n  );\r\n\r\n  return isEditable ? { handleSubmit, renderForm } : { renderForm: renderLabels };\r\n};\r\n\r\nexport default useCobrancaForm;\r\n","import React, { useState } from 'react';\r\nimport { useCustomModal } from 'src/components/objetos/Modal';\r\nimport alerta from 'src/utils/alerta';\r\nimport useCobrancaForm from './useCobrancaForm'; // Importe o hook para o formulário de Cobrança\r\n\r\nconst useCobrancaModal = (id) => {\r\n    const { CustomModal, setShow } = useCustomModal();\r\n    const [cobrancaId, setCobrancaId] = useState(null);\r\n    const { renderForm } = useCobrancaForm(cobrancaId, false); // Chama o hook aqui\r\n\r\n    const openModal = (id_cobranca = false, view = false) => {\r\n        if (!id_cobranca) {\r\n            alerta('ID da cobrança não fornecido');\r\n            return setShow(false);\r\n        }\r\n\r\n        setCobrancaId(id_cobranca); // Armazena o ID da cobrança\r\n        setShow(view);\r\n    };\r\n\r\n    const renderFooter = () => (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary btn-sm mx-auto\"\r\n            onClick={() => setShow(false)}\r\n        >\r\n            Fechar\r\n        </button>\r\n    );\r\n\r\n    const CobrancaModalComponent = () => (\r\n        <CustomModal\r\n            icon=\"money\" // Substitua pelo ícone apropriado para cobranças\r\n            title=\"Visualizar Cobrança\"\r\n            children={renderForm()}\r\n            footer={renderFooter()}\r\n        />\r\n    );\r\n\r\n    return { openModal, CobrancaModalComponent };\r\n};\r\n\r\nexport default useCobrancaModal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Table from '@objetos/Table';\r\nimport useClienteModal from './useClienteModal';\r\nimport useConfirmationModal from '@objetos/useConfirmationModal';\r\nimport  ClienteService   from '@service/ClienteService';\r\nimport Alerta from '@utils/alerta';\r\nimport useCobrancaModal from '@cobranca/useCobrancaModal';\r\nconst ClienteLista = () => {\r\n    const [clientes, setClientes] = useState([]);\r\n    const navigate = useNavigate(); // Usando useNavigate para navegação\r\n\r\n    const { openModal: openClienteModal, ClienteModalComponent } = useClienteModal();\r\n    const { openModal: openConfirmationModal, ConfirmationModalComponent } = useConfirmationModal();\r\n    const { openModal: openCobrancaModal, CobrancaModalComponent } = useCobrancaModal();\r\n\r\n    const fetchClientes = useCallback(async () => {\r\n        try {\r\n            const response = await ClienteService.getAllClientes();\r\n            if (response.sucesso) {\r\n                setClientes(response.clientes);\r\n            } else {\r\n                Alerta(response.message,3,\"id_msg\");\r\n            }\r\n        } catch (error) {\r\n            Alerta('Erro ao buscar clientes'+ error,2,\"id_msg\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchClientes();\r\n    }, [fetchClientes]);\r\n\r\n    const handleDelete = async (id) => {\r\n        if (!id){\r\n            Alerta('Erro ao excluir cliente, ID não enviado.', 2, 'id_msg');\r\n            return\r\n        }\r\n        openConfirmationModal(\r\n            'Confirmar Exclusão',\r\n            'Você tem certeza que deseja excluir este cliente?',\r\n            async () => {\r\n                try {\r\n                    const response = await ClienteService.deleteCliente(id);\r\n                    if (response.sucesso) {\r\n                        setClientes(prevClientes => prevClientes.filter(cliente => cliente.Id !== id));\r\n                        Alerta(response.message);\r\n                    } else {\r\n                        Alerta(response.message, 2, 'id_msg');\r\n                    }\r\n                } catch (error) {\r\n                    Alerta('Erro ao excluir cliente'+ error, 2, 'id_msg');\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n     // Função renderCobranca agora definida como uma variável de função dentro do componente\r\n     const renderCobranca = (cobrancas) => {\r\n        if (cobrancas.length === 0) {\r\n            return (\r\n                <span className=\"badge bg-light-subtle text-light-emphasis rounded-pill\">\r\n                    Nenhuma cobrança\r\n                </span>\r\n            );\r\n        }\r\n    \r\n        // Contador de cobranças pendentes\r\n        const quantidadePendente = cobrancas.filter(c => !c.pago).length;\r\n    \r\n        if (quantidadePendente === 0) {\r\n            return (\r\n                <span className=\"badge bg-success  text-success-emphasis  fw-bold rounded-pill\">\r\n                    Todas pagas\r\n                </span>\r\n            );\r\n        }\r\n    \r\n        return (\r\n            <span className=\"badge bg-danger  text-ligth-emphasis  fw-bold  rounded-pill\">\r\n                {quantidadePendente} pendentes\r\n            </span>\r\n        );\r\n    };\r\n    \r\n    \r\n    const columns = ['Nome', 'Telefone','Cobranças', 'Ações'];\r\n    \r\n    \r\n    const rows = clientes.map(cliente => ({\r\n        data: [\r\n            cliente.nome,\r\n            cliente.telefone,\r\n            renderCobranca(cliente.cobrancas)\r\n        ],\r\n        actions: [\r\n            {\r\n                name: 'adicionar',\r\n                icon: 'plus-lg',\r\n                type: 'primary',\r\n                onClick: () => navigate(`/cobranca/create/${cliente.id}`)\r\n            },  {\r\n                name: 'Editar',\r\n                icon: 'pencil',\r\n                type: 'warning',\r\n                onClick: () => navigate(`/cliente/edit/${cliente.id}`)\r\n            },\r\n            \r\n            {\r\n                name: 'Visualizar',\r\n                icon: 'eye',\r\n                type: 'success',\r\n                onClick: () => openClienteModal(cliente.id,true)\r\n            },\r\n            {\r\n                name: 'Excluir',\r\n                icon: 'trash',\r\n                type: 'danger',\r\n                onClick: () => handleDelete(cliente.id)\r\n            }\r\n        ]\r\n    }));\r\n\r\n    const dataHeader = {\r\n        icon: 'people',\r\n        title: 'Lista de Clientes',\r\n        iconBtn: 'plus',\r\n        buttonText: 'Criar Novo Cliente',\r\n        onClickBtn: () => navigate('/cliente/create/')\r\n    };\r\n\r\n    return (\r\n        <div id='id_msg'>\r\n            <Table\r\n                dataHeader={dataHeader}\r\n                columns={columns}\r\n                rows={rows}\r\n            />\r\n            <CobrancaModalComponent />\r\n            <ClienteModalComponent />\r\n            <ConfirmationModalComponent />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClienteLista;\r\n","const ClienteView = () => {\r\n    return (\r\n       <div></div>\r\n    );\r\n};\r\n\r\nexport default ClienteView;\r\n","import React from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Formulario from '@objetos/Formulario';\r\nimport useCobrancaForm from './useCobrancaForm';\r\n\r\nfunction CobrancaForm() {\r\n    const { id } = useParams(); // Obtém o ID da URL\r\n    const { id_cliente } = useParams(); // Obtém o ID da URL\r\n    const navigate = useNavigate();\r\n    \r\n    // Usa o hook useCobrancaForm, passando o ID e a editabilidade\r\n    const { handleSubmit, renderForm } = useCobrancaForm(id || false, true,id_cliente);\r\n    \r\n    const handleFormSubmit = async () => {\r\n        const success = await handleSubmit();\r\n        if (success) {\r\n            navigate('/cobranca'); // Substitua pela rota desejada\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formulario\r\n            headerIcon=\"file-earmark-text\" // Ícone para cobrança\r\n            headerTitle={id ? 'Editar Cobrança' : 'Cadastrar Cobrança'} // Muda o título conforme a operação\r\n            isDark={false}\r\n            formBody={renderForm()} // Renderiza o formulário baseado no hook\r\n            footerLeftButtonText={id ? 'Cancelar' : 'Voltar'}\r\n            footerLeftButtonAction={() => navigate('/cobranca')} // Navega para a lista de cobranças\r\n            footerRightButtonText={id ? 'Salvar' : 'Cadastrar'}\r\n            footerRightButtonAction={handleFormSubmit} // Chama a função de submit do formulário\r\n        />\r\n    );\r\n}\r\n\r\nexport default CobrancaForm;\r\n","function CobrancaView() {\r\n\r\n}\r\nexport default   CobrancaView;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Table from '@objetos/Table';\r\nimport useConfirmationModal from '@objetos/useConfirmationModal';\r\nimport CobrancaService from '@service/CobrancaService';\r\nimport Alerta from '@utils/alerta';\r\nimport useCobrancaModal from './useCobrancaModal';\r\n\r\nconst CobrancaLista = () => {\r\n    const [cobrancas, setCobrancas] = useState([]);\r\n    const navigate = useNavigate();\r\n    const { openModal: openConfirmationModal, ConfirmationModalComponent } = useConfirmationModal();\r\n    const { openModal, CobrancaModalComponent } = useCobrancaModal();\r\n\r\n    const fetchCobrancas = useCallback(async () => {\r\n        try {\r\n            const response = await CobrancaService.getAllCobrancas();\r\n            if (response.sucesso) {\r\n                setCobrancas(response.cobrancas);\r\n            } else {\r\n                Alerta(response.message, 3, \"id_msg\");\r\n            }\r\n        } catch (error) {\r\n            Alerta(`Erro ao buscar cobranças: ${error.message || error}`, 2, \"id_msg\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchCobrancas();\r\n    }, [fetchCobrancas]);\r\n\r\n    const handleDelete = async (id) => {\r\n        if (!id) {\r\n            Alerta('Erro ao excluir cobrança, ID não enviado.', 2, 'id_msg');\r\n            return;\r\n        }\r\n\r\n        openConfirmationModal(\r\n            'Confirmar Exclusão',\r\n            'Você tem certeza que deseja excluir esta cobrança?',\r\n            async () => {\r\n                try {\r\n                    const response = await CobrancaService.deleteCobranca(id);\r\n                    if (response.sucesso) {\r\n                        setCobrancas(prevCobrancas => prevCobrancas.filter(cobranca => cobranca.id !== id));\r\n                        Alerta(response.message);\r\n                    } else {\r\n                        Alerta(response.message, 2, 'id_msg');\r\n                    }\r\n                } catch (error) {\r\n                    Alerta(`Erro ao excluir cobrança: ${error.message || error}`, 2, 'id_msg');\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleUpdatePayment = async (id) => {\r\n        if (!id) {\r\n            Alerta('Erro ao atualizar pagamento, ID não enviado.', 2, 'id_msg');\r\n            return;\r\n        }\r\n        openConfirmationModal(\r\n            'Confirmar Atualização de Pagamento',\r\n            'Você tem certeza que deseja marcar esta cobrança como paga?',\r\n            async () => {\r\n                try {\r\n                    // Chama o método updatePago com o ID da cobrança e o novo valor de pagamento\r\n                    const response = await CobrancaService.updatePago(id, true);  \r\n                    \r\n                    if (response.sucesso) {\r\n                        // Atualiza a lista de cobranças para refletir a mudança\r\n                        setCobrancas(prevCobrancas => \r\n                            prevCobrancas.map(cobranca => \r\n                                cobranca.id === id ? { ...cobranca, pago: true } : cobranca\r\n                            )\r\n                        );\r\n                        Alerta(\"Status alterado com Sucesso.\");\r\n                    } else {\r\n                        Alerta(response.message, 2, 'id_msg');\r\n                    }\r\n                } catch (error) {\r\n                    Alerta(`Erro ao atualizar pagamento: ${error.message || error}`, 2, 'id_msg');\r\n                }\r\n            }\r\n        );\r\n        \r\n    };\r\n\r\n    const sortCobrancas = (cobrancas) => {\r\n        return cobrancas.sort((a, b) => {\r\n            if (a.pago !== b.pago) {\r\n                return a.pago ? 1 : -1;\r\n            }\r\n            return new Date(b.data) - new Date(a.data);\r\n        });\r\n    };\r\n    const renderCobranca = (pago, data) => {\r\n        const hoje = new Date();\r\n        const dataCobranca = new Date(data);\r\n    \r\n        // Caso a cobrança esteja paga, retorna o badge \"Pago\"\r\n        if (pago) {\r\n            return (\r\n                <span className=\"badge bg-success-subtle text-success-emphasis  fw-bolder rounded-pill\">\r\n                    Pago\r\n                </span>\r\n            );\r\n        }\r\n    \r\n        // Verifica se a data da cobrança está no futuro (em aberto)\r\n        if (dataCobranca > hoje) {\r\n            return (\r\n                <span className=\"badge bg-warning-subtle text-warning-emphasis  fw-bolder rounded-pill\">\r\n                    Em aberto\r\n                </span>\r\n            );\r\n        }\r\n    \r\n        // Caso contrário, se a data for no passado, está atrasada\r\n        return (\r\n            <span className=\"badge bg-danger-subtle text-danger-emphasis fw-bolder rounded-pill\">\r\n                Atrasada\r\n            </span>\r\n        );\r\n    };\r\n    \r\n    const columns = ['Descrição', 'Valor', 'Vencimento', 'Status', 'Ações'];\r\n    const rows = sortCobrancas(cobrancas).map(cobranca => {\r\n        // Formatação dos dados da cobrança\r\n        const formattedData = [\r\n            cobranca.descricao,\r\n             cobranca.valor,\r\n            new Date(cobranca.data).toLocaleDateString(),\r\n            renderCobranca(cobranca.pago,cobranca.data),\r\n        ];\r\n    \r\n        // Criação das ações\r\n        const actions = [];\r\n    \r\n        // Adiciona o botão 'Dar Baixa' somente se a cobrança não estiver paga\r\n        if (!cobranca.pago) {\r\n            actions.push({\r\n                name: 'Dar Baixa',\r\n                icon: 'check-lg',\r\n                type: 'warning',\r\n                onClick: () => handleUpdatePayment(cobranca.id),\r\n                disabled: cobranca.pago, // Desabilita se já estiver pago\r\n            });\r\n        }\r\n    \r\n        // Adiciona sempre os botões 'Visualizar', 'Editar' e 'Excluir'\r\n        actions.push(\r\n            {\r\n                name: 'Visualizar',\r\n                icon: 'eye',\r\n                type: 'success',\r\n                onClick: () => openModal(cobranca.id, true),\r\n            },\r\n            {\r\n                name: 'Editar',\r\n                icon: 'pencil',\r\n                type: 'primary',\r\n                onClick: () => navigate(`/cobranca/edit/${cobranca.id}`),\r\n            },\r\n            {\r\n                name: 'Excluir',\r\n                icon: 'trash',\r\n                type: 'danger',\r\n                onClick: () => handleDelete(cobranca.id),\r\n            }\r\n        );\r\n    \r\n        return {\r\n            data: formattedData,\r\n            actions: actions,\r\n        };\r\n    });\r\n    \r\n\r\n    const dataHeader = {\r\n        icon: 'file-invoice',\r\n        title: 'Lista de Cobranças',\r\n        iconBtn: 'plus',\r\n        buttonText: 'Criar Nova Cobrança',\r\n        onClickBtn: () => navigate('/cobranca/create/')\r\n    };\r\n\r\n    return (\r\n        <div id='id_msg'>\r\n            <Table\r\n                dataHeader={dataHeader}\r\n                columns={columns}\r\n                rows={rows}\r\n            /> \r\n             <CobrancaModalComponent />\r\n            <ConfirmationModalComponent />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CobrancaLista;\r\n","function UsuarioForm() {\r\n\r\n}\r\nexport default   UsuarioForm;","function UsuarioLista() {\r\n\r\n}\r\nexport default   UsuarioLista;","function UsuarioView() {\r\n\r\n}\r\nexport default   UsuarioView;","import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useAuth } from '@utils/AuthProvider'; \r\n\r\n// Componentes\r\nimport Login from '@default/login';\r\nimport Cadastro from '@default/cadastro';\r\nimport Erro from '@components/erro';\r\n\r\nimport ClienteForm from '@cliente/ClienteForm';\r\nimport ClienteLista from '@cliente/ClienteLista';\r\nimport ClienteView from '@cliente/ClienteView';\r\n\r\nimport CobrancaForm from '@cobranca/CobrancaForm';\r\nimport CobrancaView from '@cobranca/CobrancaView';\r\nimport CobrancaLista from '@cobranca/CobrancaLista';\r\n\r\n// Novos componentes para usuário\r\nimport UsuarioForm from '@usuario/UsuarioForm';\r\nimport UsuarioLista from '@usuario/UsuarioLista';\r\nimport UsuarioView from '@usuario/UsuarioView';\r\n\r\nconst Router = () => {\r\n  const { isAuthenticated } = useAuth(); // Obtém o estado de autenticação\r\n\r\n  return (\r\n    <Routes>\r\n      {/* Rotas públicas */}\r\n      <Route path=\"/\" element={<Login />} />\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/cadastro\" element={<Cadastro />} />\r\n      <Route\r\n        path=\"/erro-interno\"\r\n        element={<Erro title=\"Erro Interno\" descricao=\"Ocorreu um erro interno no servidor. Tente novamente mais tarde.\" />}\r\n      />\r\n      <Route\r\n        path=\"*\"\r\n        element={<Erro title=\"Página Não Encontrada\" descricao=\"A página que você está procurando não existe.\" />}\r\n      />\r\n\r\n      {/* Rotas privadas para Cliente */}\r\n      <Route path=\"/cliente/\" element={isAuthenticated ? <ClienteLista /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cliente/create/\" element={isAuthenticated ? <ClienteForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cliente/edit/:id\" element={isAuthenticated ? <ClienteForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cliente/view/:id\" element={isAuthenticated ? <ClienteView /> : <Navigate to=\"/login\" />} />\r\n\r\n      {/* Rotas privadas para Cobrança */}\r\n      <Route path=\"/cobranca/\" element={isAuthenticated ? <CobrancaLista /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cobranca/edit/:id\" element={isAuthenticated ? <CobrancaForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cobranca/create/:id_cliente?\" element={isAuthenticated ? <CobrancaForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cobranca/view/:id\" element={isAuthenticated ? <CobrancaView /> : <Navigate to=\"/login\" />} />\r\n\r\n      {/* Rotas privadas para Usuário */}\r\n      <Route path=\"/usuario/\" element={isAuthenticated ? <UsuarioLista /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/usuario/create/\" element={isAuthenticated ? <UsuarioForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/usuario/edit/:id\" element={isAuthenticated ? <UsuarioForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/usuario/view/:id\" element={isAuthenticated ? <UsuarioView /> : <Navigate to=\"/login\" />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Base from './components/Base';\r\nimport RouterConfig from './router';\r\nimport { AuthProvider } from './utils/AuthProvider'; // Importar o AuthProvider\r\n\r\nconst App = () => (\r\n  <AuthProvider>\r\n    <Router>\r\n      <Base>\r\n        <RouterConfig />\r\n      </Base>\r\n    </Router>\r\n  </AuthProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client'; \r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'src/assets/css/Global.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\n\r\nroot.render(\r\n    <App />\r\n);\r\n"],"sourceRoot":""}