{"version":3,"sources":["utils/storage.jsx","utils/api.jsx","utils/AuthProvider.jsx","components/Navbar.jsx","components/MainContent.jsx","components/Footer.jsx","components/Base.jsx","utils/alerta.jsx","utils/loading.jsx","components/objetos/Formulario.jsx","components/containers/default/login.jsx","components/containers/default/cadastro.jsx","components/erro.jsx","components/containers/cliente/ClienteForm.jsx","components/objetos/Table.jsx","components/objetos/Modal.jsx","components/objetos/Input.jsx","components/objetos/Select.jsx","components/objetos/Label.jsx","interface/CustomInterface.jsx","interface/CobrancaInterface.jsx","interface/ClienteInterface.jsx","service/ClienteService.jsx","components/containers/cliente/useClienteForm.jsx","components/containers/cliente/useClienteModal.jsx","components/objetos/useConfirmationModal.jsx","components/containers/cliente/ClienteLista.jsx","components/containers/cliente/ClienteView.jsx","components/containers/cobranca/CobrancaForm.jsx","components/containers/cobranca/CobrancaView.jsx","components/containers/cobranca/CobrancaLista.jsx","components/containers/usuario/UsuarioForm.jsx","components/containers/usuario/UsuarioLista.jsx","components/containers/usuario/UsuarioView.jsx","router.jsx","App.js","index.js"],"names":["getCookie","name","cookies","document","cookie","split","cookieName","cookieValue","map","c","trim","setCookie","value","timeInMinutes","arguments","length","undefined","options","path","expires","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","async","request","url","method","data","apiUrl","endsWith","token","success","axios","headers","withCredentials","error","errorMessage","errorMessages","response","message","status","getErrorMessage","AuthContext","createContext","useAuth","useContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","useState","checkAuthentication","authenticated","console","useEffect","_jsx","Provider","Icon","text","_jsxs","_Fragment","className","ItensDefault","Link","to","ItensAssinante","_ref2","onLogout","onClick","Navbar","navigate","useNavigate","menuState","menu","getElementById","icon","classList","remove","add","style","background","fontSize","type","toggleMenu","contains","id","handleLogout","MainContent","Footer","href","target","Base","marginBottom","xmlns","viewBox","preserveAspectRatio","d","alerta","container","containerId","time","toastContainer","querySelector","createElement","body","appendChild","toastElement","setAttribute","toastHeader","strongElement","innerText","buttonClose","toastBody","whiteSpace","wordWrap","Modal","Toast","show","setTimeout","removeChild","showCustomAlert","existingAlert","alertTypes","class","default","alertClass","iconClass","alertDiv","closeButton","iconSpan","createTextNode","insertBefore","firstChild","showAlert","loading","targetContainer","HTMLElement","loadingContainerId","display","loadingContainer","minHeight","width","spinner","spinnerText","textContent","insertAdjacentElement","Formulario","headerIcon","headerTitle","formBody","footerLeftButtonText","footerLeftButtonAction","footerRightButtonText","footerRightButtonAction","isDark","maxWidth","LoginForm","email","setEmail","senha","setSenha","autoComplete","onChange","e","htmlFor","handleRegister","CadastroForm","formData","setFormData","nome","handleInputChange","prevData","FloatingLabel","controlId","label","Form","Control","placeholder","limpar","register","Erro","location","useLocation","queryParams","URLSearchParams","search","title","get","descricao","urlRedirect","ClienteForm","clienteId","initialData","Nome","Documento","Telefone","Endereco","UsuarioId","Button","variant","endpoint","submit","Table","dataHeader","columns","rows","onClickBtn","iconBtn","buttonText","colTitle","index","scope","row","rowIndex","cell","cellIndex","role","actions","action","actionIndex","useCustomModal","setShow","CustomModal","footer","backdrop","keyboard","contentClassName","dialogClassName","Header","textDecoration","color","Body","Input","Select","forwardRef","ref","props","renderOptions","Array","isArray","option","defaultProps","Label","CustomInterface","constructor","this","created","updated","toApiPayload","toISOString","CobrancaInterface","super","id_cobranca","valor","pago","cliente_id","fromApiResponse","ClienteInterface","documento","telefone","endereco","usuarioId","cobrancas","initializeCobrancas","cobrancasData","cobranca","ClienteService","getClienteById","getAllClientes","cliente","createCliente","clienteDTO","updateCliente","deleteCliente","useClienteForm","isEditable","formValues","setFormValues","tipo_cliente","setCliente","showMessage","fetchCliente","useCallback","getCliente","sucesso","clienteData","handleChange","event","prevValues","handleSubmit","errors","push","validatePayload","join","renderForm","renderLabels","useUsuarioModal","setClienteId","openModal","id_cliente","view","ClienteModalComponent","useConfirmationModal","setTitle","description","setDescription","onConfirm","setOnConfirm","closeModal","handleConfirm","onConfirmCallback","ConfirmationModalComponent","ClienteLista","clientes","setClientes","openClienteModal","useClienteModal","openConfirmationModal","fetchClientes","getClientesByEmpresa","Alerta","prevClientes","filter","handleDelete","ClienteView","CobrancaForm","cobrancaId","Descricao","Valor","Data","Pago","ClienteId","checked","step","Check","CobrancaView","CobrancaLista","UsuarioForm","UsuarioLista","UsuarioView","Router","Routes","Route","element","Login","Cadastro","Navigate","App","RouterConfig","createRoot","render"],"mappings":"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","file":"static/js/main.fde85fd3.chunk.js","sourcesContent":["/**\r\n * Método para obter um item do localStorage.\r\n * @param {string} key - A chave do item que deseja obter.\r\n * @returns {any|null} O valor do item do localStorage, ou null se não encontrado.\r\n */\r\nexport const getLocalStorageItem = (key) => {\r\n  // Obtém o item do localStorage pela chave\r\n  const item = localStorage.getItem(key);\r\n  // Se o item for encontrado, retorna seu valor como objeto JavaScript, caso contrário, retorna null\r\n  return item ? JSON.parse(item) : null;\r\n};\r\n\r\n/**\r\n * Método para definir um item no localStorage.\r\n * @param {string} key - A chave do item que deseja definir.\r\n * @param {any} value - O valor do item que deseja armazenar.\r\n */\r\nexport const setLocalStorageItem = (key, value) => {\r\n  // Converte o valor em uma string JSON e armazena no localStorage com a chave fornecida\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\n/**\r\n * Função para obter o valor de um cookie pelo nome.\r\n * @param {string} name - O nome do cookie que deseja obter.\r\n * @returns {string|null} O valor do cookie ou null se o cookie não for encontrado.\r\n */\r\nexport const getCookie = (name) => {\r\n  // Divide todos os cookies da string document.cookie em um array\r\n  const cookies = document.cookie.split(';');\r\n  \r\n  // Itera por cada cookie no array\r\n  for (let cookie of cookies) {\r\n    // Divide cada cookie em nome e valor e remove espaços em branco\r\n    const [cookieName, cookieValue] = cookie.split('=').map(c => c.trim());\r\n    \r\n    // Verifica se o nome do cookie corresponde ao nome solicitado\r\n    if (cookieName === name) {\r\n      // Retorna o valor do cookie se encontrado\r\n      return cookieValue;\r\n    }\r\n  }\r\n  \r\n  // Retorna null se o cookie não for encontrado\r\n  return null;\r\n};\r\nexport const setCookie = (name, value, timeInMinutes = 60, options = {}) => {\r\n  // Define o caminho padrão como '/' e mescla com as opções fornecidas\r\n  options = {\r\n    path: '/',\r\n    ...options\r\n  };\r\n\r\n  // Calcula a data de expiração com base no tempo em minutos\r\n  const expires = new Date();\r\n  expires.setTime(expires.getTime() + (timeInMinutes * 60 * 1000));\r\n  options.expires = expires.toUTCString();\r\n\r\n  // Converte a data de expiração para UTCString se for uma instância de Date\r\n  if (options.expires instanceof Date) {\r\n    options.expires = options.expires.toUTCString();\r\n  }\r\n\r\n  // Constrói a string do cookie com nome e valor codificados\r\n  let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\r\n\r\n  // Adiciona as opções à string do cookie\r\n  for (let optionKey in options) {\r\n    updatedCookie += '; ' + optionKey;\r\n    let optionValue = options[optionKey];\r\n    if (optionValue !== true) {\r\n      updatedCookie += '=' + optionValue;\r\n    }\r\n  }\r\n\r\n  // Define o cookie no documento\r\n  document.cookie = updatedCookie;\r\n};\r\n","import axios from 'axios';\r\nimport { getCookie } from 'src/utils/storage';\r\n\r\n// URL base configurável através de variáveis de ambiente\r\nconst BASE_URL = process.env.REACT_APP_API_URL || '/api/';\r\nexport default async function request(url, method = 'GET', data = null) {\r\n  try {\r\n      // Adiciona a barra no final da URL se não estiver presente\r\n      const formattedUrl = url.endsWith('/') ? url : `${url}/`;\r\n      const apiUrl = `${BASE_URL}${formattedUrl}`;\r\n\r\n      // Obtém o token do cookie\r\n      const token = getCookie('authToken');\r\n\r\n      // Faz a requisição com axios\r\n      const response = await axios({\r\n          url: apiUrl,\r\n          method,  // Método HTTP (GET, POST, etc.)\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}` // Envia o token no cabeçalho\r\n          },\r\n          data, // Dados para POST ou PUT\r\n          withCredentials: true, // Permite enviar cookies com a requisição\r\n      });\r\n\r\n      return { success: true, ...response.data };\r\n  } catch (error) {\r\n      const errorMessage = getErrorMessage(error);\r\n      return { success: false, message: errorMessage };\r\n  }\r\n}\r\n\r\n\r\n// Função para gerar a mensagem de erro\r\nfunction getErrorMessage(error) {\r\n  const errorMessages = {\r\n    400: 'Solicitação inválida.',\r\n    401: 'Não autorizado.',\r\n    403: 'Acesso negado.',\r\n    404: 'Recurso não encontrado.',\r\n    500: 'Erro interno do servidor.',\r\n  };\r\n\r\n  if (error.response) {\r\n    return error.response.data.message || errorMessages[error.response.status] || 'Erro na requisição.';\r\n  } else if (error.request) {\r\n    return 'Nenhuma resposta recebida do servidor.';\r\n  } else {\r\n    return error.message || 'Erro ao configurar a requisição.';\r\n  }\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { getCookie, setCookie } from './storage'; // Certifique-se de que esses métodos funcionam corretamente\r\nimport request from './api';\r\n\r\n// Cria o contexto de autenticação\r\nconst AuthContext = createContext();\r\n\r\n// Hook para acessar o contexto de autenticação\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // Inicializa o estado de autenticação\r\n  const [isAuthenticated, setIsAuthenticated] = useState(getCookie('authentication') === 'true');\r\n\r\n  // Função para verificar a autenticação\r\n  const checkAuthentication = async () => {\r\n    try {\r\n      const response = await request(\"public/CheckAuthentication/\");\r\n      \r\n      // Avalia a resposta e atualiza o estado de autenticação\r\n      if (response.authenticated) {\r\n        setCookie('authentication', 'true');\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setCookie('authentication', 'false');\r\n        setIsAuthenticated(false);\r\n      }\r\n    } catch (error) {\r\n      // Em caso de erro, define como não autenticado\r\n      console.error('Erro ao verificar autenticação:', error);\r\n      setCookie('authentication', 'false');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuthentication(); // Verifica a autenticação uma vez ao montar\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, checkAuthentication, setIsAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '@utils/AuthProvider'; // Usar o useAuth do contexto\r\nimport { getCookie,setCookie } from 'src/utils/storage';\r\n\r\n// Componente de ícone reutilizável para manter a consistência\r\nconst Icon = ({ name, text }) => (\r\n  <>\r\n    <i className={`bi bi-${name}`}></i>\r\n    {text && <span className=\"ms-1\">{text}</span>}\r\n  </>\r\n);\r\n\r\n// Componentes para o menu padrão\r\nconst ItensDefault = () => (\r\n  <>\r\n    <li className=\"text-center d-inline-flex col-auto\">\r\n      <Link className=\"nav-link text-decoration-none text-white nav-link-icon px-0 align-items-center\" to=\"/login\">\r\n        <Icon name=\"box-arrow-in-right\" text=\"Login\" />\r\n      </Link>\r\n    </li>\r\n    <li className=\"text-center d-inline-flex col-auto\">\r\n      <Link className=\"nav-link text-decoration-none text-white nav-link-icon px-0 align-items-center\" to=\"/cadastro\">\r\n        <Icon name=\"pencil-square\" text=\"Cadastro\" />\r\n      </Link>\r\n    </li>\r\n  </>\r\n);\r\n\r\n// Componentes para o menu quando o usuário está autenticado\r\nconst ItensAssinante = ({ onLogout }) => (\r\n  <>\r\n    <li className=\"d-inline-flex col-auto\">\r\n      <Link className=\"nav-link\" to=\"/cliente\">\r\n        <Icon name=\"people\" text=\"Clientes\" />\r\n      </Link>\r\n    </li>\r\n    <li className=\"d-inline-flex col-auto\">\r\n      <Link className=\"nav-link nav-link-icon\" to=\"/cobranca\">\r\n        <Icon name=\"cash-stack\" text=\"Cobranças\" />\r\n      </Link>\r\n    </li>\r\n    <li className=\"d-inline-flex col-auto\">\r\n      <button className=\"nav-link text-decoration-none text-white bg-transparent border-0\" onClick={onLogout}>\r\n        <Icon name=\"box-arrow-right\" text=\"Sair\" />\r\n      </button>\r\n    </li>\r\n  </>\r\n);\r\n\r\nconst Navbar = () => {\r\n  const { isAuthenticated, setIsAuthenticated } = useAuth(); // Obtém o estado de autenticação do contexto\r\n  const navigate = useNavigate(); // Para redirecionar após logout\r\n\r\n  useEffect(() => {\r\n    const menuState = getCookie('menuState');\r\n    const menu = document.getElementById('navbarNav');\r\n    const icon = document.getElementById('menuIcon');\r\n    if (menuState === 'visible') {\r\n      menu.classList.remove('d-none');\r\n      icon.classList.remove('bi-box-arrow-down');\r\n      icon.classList.add('bi-box-arrow-in-up');\r\n    } else {\r\n      menu.classList.add('d-none');\r\n      icon.classList.remove('bi-box-arrow-in-up');\r\n      icon.classList.add('bi-box-arrow-down');\r\n    }\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    const menu = document.getElementById('navbarNav');\r\n    const icon = document.getElementById('menuIcon');\r\n    if (menu.classList.contains('d-none')) {\r\n      menu.classList.remove('d-none');\r\n      icon.classList.remove('bi-box-arrow-down');\r\n      icon.classList.add('bi-box-arrow-in-up');\r\n      setCookie('menuState', 'visible');\r\n    } else {\r\n      menu.classList.add('d-none');\r\n      icon.classList.remove('bi-box-arrow-in-up');\r\n      icon.classList.add('bi-box-arrow-down');\r\n      setCookie('menuState', 'hidden');\r\n    }\r\n  };\r\n\r\n  // Função para desconectar o usuário\r\n  const handleLogout = () => {\r\n    setIsAuthenticated(\"false\"); // Define a autenticação como falsa\r\n    setCookie('authToken',\"\"); // Remove o token de autenticação, se aplicável\r\n    setCookie('authentication',\"false\"); // Remove o token de autenticação, se aplicável\r\n    navigate('/login'); // Redireciona para a página de login\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar-expand-md navbar-dark pt-3 pb-2 font-montserrat\" style={{ background: '#0D1B2A' }}>\r\n      <div className=\"p-0 m-0 mx-auto container-xl row\">\r\n        <div className=\"p-0 m-0 col-12 container justify-content-between row align-items-center\">\r\n          <Link className=\"col text-sm-center text-start text-decoration-none\" to=\"/\">\r\n            <p className=\"mb-2 text-white\" style={{ fontSize: '20px' }}>\r\n              Localize Project\r\n            </p>\r\n          </Link>\r\n          <button className=\"btn text-white col-auto d-inline-flex ms-auto d-sm-none\" type=\"button\" onClick={toggleMenu}>\r\n            <span className=\"bi bi-box-arrow-in-up\" id=\"menuIcon\" style={{ fontSize: '20px' }}></span>\r\n          </button>\r\n        </div>\r\n        <div className=\"col-12 d-sm-block d-none\" id=\"navbarNav\">\r\n          <ul className=\"text-decoration-none text-center text-white my-2 row mx-auto mx-sm-0 col-auto container-xl font-monospace text-center text-sm-end justify-content-center align-items-center\">\r\n            {isAuthenticated ? <ItensAssinante onLogout={handleLogout} /> : <ItensDefault />}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst MainContent = ({ children }) => {\r\n  return (\r\n    <div id=\"content\">\r\n      <div id=\"id_alert_container\" className=\"container mx-auto\"></div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\" style={{ background: '#0D1B2A' }}>\r\n      <div className=\"font-montserrat  redound-3 px-3 text-center d-flex-inline\">\r\n        <p className=\"m-0 p-0 text-white rounded \" style={{ fontSize: '0.8rem' }}>\r\n          Software Desenvolvido por <a className=\"text-white\" href=\"https://br.linkedin.com/in/samuelmedeirosbc\" target=\"blank\">@Samuel Medeiros</a>.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport MainContent from './MainContent';\r\nimport Footer from './Footer';\r\nimport 'react-bootstrap';\r\nconst Base = ({ children }) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid m-0 p-0 wrapper  \" style={{ background: '#f5f7fa' }}>\r\n        <div className=\"wrapper\">\r\n          <div className=\"content\">\r\n            <Navbar  />\r\n            <MainContent>\r\n              {children}\r\n            </MainContent>\r\n          </div>\r\n          <div className=\"footer\">\r\n\r\n            <div className=\"custom-shape-divider-bottom-1708368458 mt-3\" style={{ marginBottom: '-2px' }}>\r\n              <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\r\n                <path d=\"M985.66,92.83C906.67,72,823.78,31,743.84,14.19c-82.26-17.34-168.06-16.33-250.45.39-57.84,11.73-114,31.07-172,41.86A600.21,600.21,0,0,1,0,27.35V120H1200V95.8C1132.19,118.92,1055.71,111.31,985.66,92.83Z\" className=\"shape-fill\"></path>\r\n              </svg>\r\n            </div>\r\n            <Footer  />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Base;\r\n","import { Modal } from 'bootstrap';  // Importação do modal do Bootstrap\r\n\r\nfunction showAlert(type, text, containerId) {\r\n  const container = document.getElementById(containerId) || document.getElementById('id_alert_container');\r\n  if (!container) return;\r\n\r\n  // Remove any existing alert\r\n  const existingAlert = container.querySelector('.alert');\r\n  if (existingAlert) {\r\n    container.removeChild(existingAlert);\r\n  }\r\n\r\n  // Define alert types\r\n  const alertTypes = {\r\n    1: { class: 'alert-success', icon: 'bi-check-circle-fill' },\r\n    2: { class: 'alert-danger', icon: 'bi-exclamation-circle-fill' },\r\n    3: { class: 'alert-warning', icon: 'bi-exclamation-triangle-fill' },\r\n    default: { class: 'alert-info', icon: 'bi-info-circle-fill' },\r\n  };\r\n\r\n  const { class: alertClass, icon: iconClass } = alertTypes[type] || alertTypes.default;\r\n\r\n  // Create the alert div\r\n  const alertDiv = document.createElement('div');\r\n  alertDiv.classList.add('alert', alertClass, 'alert-dismissible', 'fade', 'show', 'mt-2','mx-2', 'bt-2');\r\n  alertDiv.setAttribute('role', 'alert');\r\n  alertDiv.style.whiteSpace = 'normal'; // Permite a quebra de linha no texto\r\n  alertDiv.style.wordWrap = 'break-word'; // Quebra palavras longas, se necessário\r\n  // Create and add the close button\r\n  const closeButton = document.createElement('button');\r\n  closeButton.classList.add('btn-close');\r\n  closeButton.setAttribute('type', 'button');\r\n  closeButton.setAttribute('data-bs-dismiss', 'alert');\r\n  closeButton.setAttribute('aria-label', 'Close');\r\n  alertDiv.appendChild(closeButton);\r\n\r\n  // Create and add the icon\r\n  const iconSpan = document.createElement('span');\r\n  iconSpan.classList.add('bi', iconClass);\r\n  iconSpan.setAttribute('aria-hidden', 'true');\r\n  alertDiv.appendChild(iconSpan);\r\n\r\n  // Add the text message\r\n  alertDiv.appendChild(document.createTextNode(' ' + text));\r\n\r\n  // Prepend the alert to the container (to place it above other elements)\r\n  container.insertBefore(alertDiv, container.firstChild);\r\n}\r\n\r\nfunction showCustomAlert(text, containerId, time) {\r\n  let toastContainer = document.querySelector('.toast-container');\r\n\r\n  if (!toastContainer) {\r\n    toastContainer = document.createElement('div');\r\n    toastContainer.classList.add('toast-container', 'position-fixed', 'top-0', 'end-0', 'p-3');\r\n    document.body.appendChild(toastContainer);\r\n  }\r\n\r\n  const toastElement = document.createElement('div');\r\n  toastElement.classList.add('toast');\r\n  toastElement.setAttribute('role', 'alert');\r\n  toastElement.setAttribute('aria-live', 'assertive');\r\n  toastElement.setAttribute('aria-atomic', 'true');\r\n\r\n  const toastHeader = document.createElement('div');\r\n  toastHeader.classList.add('toast-header');\r\n  const strongElement = document.createElement('strong');\r\n  strongElement.classList.add('me-auto', 'Font-Gliker', 'fw-bold');\r\n  strongElement.innerText = '{ C P S }';\r\n  const buttonClose = document.createElement('button');\r\n  buttonClose.setAttribute('type', 'button');\r\n  buttonClose.classList.add('btn-close');\r\n  buttonClose.setAttribute('data-bs-dismiss', 'toast');\r\n  buttonClose.setAttribute('aria-label', 'Close');\r\n\r\n  const toastBody = document.createElement('div');\r\n  toastBody.classList.add('toast-body', 'bg-white', 'rounded-bottom', 'shadow-lg');\r\n  toastBody.innerText = text;\r\n  toastBody.style.whiteSpace = 'normal'; // Permite a quebra de linha no texto\r\n  toastBody.style.wordWrap = 'break-word'; // Quebra palavras longas, se necessário\r\n  toastHeader.appendChild(strongElement);\r\n  toastHeader.appendChild(buttonClose);\r\n  toastElement.appendChild(toastHeader);\r\n  toastElement.appendChild(toastBody);\r\n  toastContainer.appendChild(toastElement);\r\n\r\n  const toastBootstrap = Modal.Toast(toastElement);\r\n  toastBootstrap.show();\r\n\r\n  setTimeout(() => {\r\n    toastContainer.removeChild(toastElement);\r\n  }, time);\r\n}\r\n\r\nexport default function alerta(text, type = null, container = false, time = 180000) {\r\n  if (type === null) {\r\n    showCustomAlert(text, container, time);\r\n  } else {\r\n    showAlert(type, text, container);\r\n  }\r\n}\r\n","export default function loading(status, container) {\r\n  let targetContainer = null;\r\n\r\n  if (typeof container === 'string') {\r\n    // Se o container for uma string, assume-se que é o ID do elemento\r\n    targetContainer = document.getElementById(container);\r\n    if (!targetContainer) {\r\n      console.error(`Container com ID '${container}' não encontrado.`);\r\n      return;\r\n    }\r\n  } else if (container instanceof HTMLElement) {\r\n    // Se o container for um elemento HTMLElement, utiliza diretamente\r\n    targetContainer = container;\r\n  } else {\r\n    console.error('Tipo inválido para o container. Deve ser uma string (ID do elemento) ou HTMLElement.');\r\n    return;\r\n  }\r\n\r\n  const loadingContainerId = `${targetContainer.id}-loading`;\r\n\r\n  if (status === true) {\r\n    // Oculta o container original\r\n    targetContainer.style.display = 'none';\r\n\r\n    // Cria e insere o container de loading\r\n    const loadingContainer = document.createElement('div');\r\n    loadingContainer.id = loadingContainerId;\r\n    loadingContainer.classList.add('loading', 'd-flex', 'justify-content-center', 'align-items-center', 'text-primary');\r\n    \r\n    // Adiciona estilos inline para garantir tamanho significativo\r\n    loadingContainer.style.minHeight = '200px'; // Defina a altura mínima desejada\r\n    loadingContainer.style.width = '100%'; // Preenche a largura do container pai\r\n\r\n    const spinner = document.createElement('div');\r\n    spinner.classList.add('spinner-border');\r\n    spinner.setAttribute('role', 'status');\r\n\r\n    const spinnerText = document.createElement('span');\r\n    spinnerText.classList.add('visually-hidden');\r\n    spinnerText.textContent = 'Loading...';\r\n\r\n    spinner.appendChild(spinnerText);\r\n    loadingContainer.appendChild(spinner);\r\n    targetContainer.insertAdjacentElement('afterend', loadingContainer);\r\n  } else if (status === false) {\r\n    // Remove o container de loading\r\n    const loadingContainer = document.getElementById(loadingContainerId);\r\n    if (loadingContainer) {\r\n      loadingContainer.remove();\r\n    }\r\n\r\n    // Mostra o container original novamente\r\n    targetContainer.style.display = '';\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n// Componente genérico de formulário\r\nconst Formulario = ({\r\n    headerIcon,\r\n    headerTitle,\r\n    formBody,\r\n    footerLeftButtonText,\r\n    footerLeftButtonAction,\r\n    footerRightButtonText,\r\n    footerRightButtonAction,\r\n    isDark = false, // Atributo isDark com valor padrão false\r\n}) => {\r\n    return (\r\n        <div className='container   my-3'  style={{ maxWidth: '500px' }}>\r\n            <div className={`card ${isDark ? 'bg-dark' : ''}`}>\r\n                <div className={`card-header d-flex align-items-center border-bottom ${isDark ? 'bg-dark text-white' : ''}`}>\r\n                    <i className={`bi bi-${headerIcon} fs-5 me-2 ${isDark ? 'text-white' : 'text-dark'}`}></i>\r\n                    <p className={`fs-5 font-monospace fw-bold mb-0 ${isDark ? 'text-white' : 'text-dark'}`}>\r\n                        {headerTitle}\r\n                    </p>\r\n                </div>\r\n                <form className={`container card-body ${isDark ? 'bg-dark text-white' : ''}`} id=\"formulario\">\r\n                    {formBody}\r\n                </form>\r\n                <div className={`card-footer d-flex justify-content-${footerRightButtonAction ? 'between' : 'center'} ${isDark ? 'bg-dark' : ''}`}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary btn-sm\"\r\n                        onClick={footerLeftButtonAction}\r\n                    >\r\n                        {footerLeftButtonText}\r\n                    </button>\r\n                    {footerRightButtonAction && (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={footerRightButtonAction}\r\n                        >\r\n                            {footerRightButtonText}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Formulario;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport request from 'src/utils/api';\r\nimport alerta from 'src/utils/alerta';\r\nimport loading from 'src/utils/loading';\r\nimport Formulario from '@objetos/Formulario';\r\nimport { useAuth } from 'src/utils/AuthProvider';\r\nimport { setCookie } from 'src/utils/storage';\r\n\r\nconst LoginForm = () => {\r\n  const { setIsAuthenticated } = useAuth();\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => email.trim() !== '' && senha.trim() !== '';\r\n\r\n  const handleLogin = async () => {\r\n    if (!validateForm()) {\r\n      alerta('Preencha todos os campos!', 2);\r\n      return;\r\n    }\r\n\r\n      try {\r\n        loading(true, 'form_login');\r\n        const response = await request('public/login/', 'POST', { email, senha });\r\n        \r\n        if (response.success) {\r\n            // Armazena o token de autenticação no cookie\r\n            setCookie('authToken', response.token, { expires: 1 }); // Define o cookie para expirar em 1 dia\r\n            setCookie('authentication','true');\r\n            setIsAuthenticated(\"true\"); // Atualiza o estado no contexto\r\n            navigate('/cliente'); // Redireciona para a página de usuários\r\n        } else {\r\n            alerta(response.message, 2, 'form_login');\r\n        }\r\n    } catch (error) {\r\n        alerta(error.message || 'Erro ao fazer login', 2, 'form_login');\r\n    } finally {\r\n        loading(false, 'form_login');\r\n    }\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    // Redireciona para a página de cadastro\r\n    navigate('/cadastro');\r\n  };\r\n\r\n  return (\r\n    <div id=\"form_login\" className='container mx-auto'>\r\n\r\n    <Formulario\r\n      headerIcon=\"person\"\r\n      headerTitle=\"Acessar Conta\"\r\n      isDark={false}\r\n      formBody={\r\n        <>\r\n          {/* Campo de e-mail */}\r\n          <div className=\"form-floating mb-2\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <label htmlFor=\"email\">E-mail</label>\r\n          </div>\r\n\r\n          {/* Campo de senha */}\r\n          <div className=\"form-floating mb-2\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              id=\"senha\"\r\n              name=\"senha\"\r\n              value={senha}\r\n              onChange={(e) => setSenha(e.target.value)}\r\n            />\r\n            <label htmlFor=\"senha\">Senha</label>\r\n          </div>\r\n        </>\r\n      }\r\n      footerLeftButtonText=\"Cadastre-se\"\r\n      footerLeftButtonAction={handleRegister}\r\n      footerRightButtonText=\"Entrar\"\r\n      footerRightButtonAction={handleLogin}\r\n    />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport {  Form, FloatingLabel } from 'react-bootstrap';\r\nimport alerta from 'src/utils/alerta';\r\nimport request from 'src/utils/api';\r\nimport loading from 'src/utils/loading';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Formulario from '@objetos/Formulario';\r\n\r\nconst CadastroForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    nome: '',\r\n    email: '',\r\n    senha: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const register = async () => {\r\n    const { nome, email, senha } = formData;\r\n    try {\r\n      loading(true, 'form');\r\n      const response = await request('public/Cadastro/', 'POST', { nome, email, senha });\r\n      if (response.success === true) {\r\n        alerta(response.message, 1);\r\n        navigate('/login'); // Redireciona para a página de login após o cadastro bem-sucedido\r\n      } else {\r\n        alerta(response.message, 2);\r\n      }\r\n    } catch (error) {\r\n      alerta('Erro ao registrar. Por favor, tente novamente.', 2);\r\n    } finally {\r\n      loading(false, 'form');\r\n    }\r\n  };\r\n\r\n  const validate = () => formData.nome && formData.email && formData.senha;\r\n\r\n  const handleSubmit = async () => {\r\n    if (validate()) {\r\n      await register();\r\n    } else {\r\n      alerta('Por favor, preencha todos os campos obrigatórios.', 2);\r\n    }\r\n  };\r\n\r\n  const limpar = () => {\r\n    setFormData({\r\n      nome: '',\r\n      email: '',\r\n      senha: '',\r\n    });\r\n  };\r\n\r\n  const renderContainer = () => (\r\n    <>\r\n      <FloatingLabel controlId=\"nome\" className=\"mb-2\" label=\"Nome\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Nome\"\r\n          name=\"nome\"\r\n          value={formData.nome}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel controlId=\"email\" className=\"mb-2\" label=\"E-mail\">\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"E-mail\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel controlId=\"senha\" className=\"mb-2\" label=\"Senha\">\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Senha\"\r\n          name=\"senha\"\r\n          value={formData.senha}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FloatingLabel>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <form id=\"form\" className=\"form-signin container mx-auto my-2\">\r\n      <Formulario\r\n        headerIcon=\"person\"\r\n        headerTitle=\"Cadastro Usuário\"\r\n        formBody={renderContainer()}\r\n        footerLeftButtonText=\"Limpar\"\r\n        footerLeftButtonAction={limpar}\r\n        footerRightButtonText=\"Cadastrar\"\r\n        footerRightButtonAction={handleSubmit}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CadastroForm;\r\n","// src/components/erro.js\r\nimport React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Erro = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const title = queryParams.get('title') || 'Ocorreu um erro!';\r\n  const descricao = queryParams.get('descricao') || 'Desculpe-nos pelo inconveniente.';\r\n  const urlRedirect = queryParams.get('urlRedirect') || '';\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <div className=\"container-erro my-4 container  justify-content-between align-items-center text-center mx-0 mx-sm-auto\">\r\n        <h1 className=\"h1-erro\">{title}</h1>\r\n        <p className=\"p-erro\">{descricao}</p>\r\n        {urlRedirect && (\r\n          <a href={urlRedirect} className=\"btn btn-primary\">Voltar</a>\r\n        )}\r\n        <p>Por favor, tente novamente mais tarde ou entre em contato conosco para obter assistência.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nErro.propTypes = {\r\n  title: PropTypes.string,\r\n  descricao: PropTypes.string,\r\n  urlRedirect: PropTypes.string,\r\n};\r\n\r\nexport default Erro;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\r\nimport alerta from 'src/utils/alerta';\r\nimport request from 'src/utils/api';\r\nimport loading from 'src/utils/loading';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ClienteForm({ clienteId, initialData }) {\r\n  const [formData, setFormData] = useState({\r\n    Nome: initialData?.Nome || '',\r\n    Documento: initialData?.Documento || '',\r\n    Telefone: initialData?.Telefone || '',\r\n    Endereco: initialData?.Endereco || '',\r\n    UsuarioId: initialData?.UsuarioId || '', // Presumindo que UsuarioId seja fornecido internamente\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const submit = async () => {\r\n    try {\r\n      loading(true, \"ContainerFormulario\");\r\n      const endpoint = clienteId ? `public/clientes/${clienteId}/` : 'public/clientes/';\r\n      const method = clienteId ? 'PUT' : 'POST';\r\n      const response = await request(endpoint, method, formData);\r\n      if (response.success) {\r\n        alerta(response.message, 1);\r\n        navigate('/clientes'); // Navega para a lista de clientes ou para a página desejada\r\n      } else {\r\n        alerta(response.message, 2);\r\n      }\r\n    } catch (error) {\r\n      alerta('Erro ao salvar os dados. Por favor, tente novamente.', 2);\r\n    } finally {\r\n      loading(false, \"ContainerFormulario\");\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    // Implemente a validação dos dados do formulário aqui\r\n    return formData.Nome && formData.Documento && formData.Telefone && formData.Endereco;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (validate()) {\r\n      await submit();\r\n    } else {\r\n      alerta('Por favor, preencha todos os campos obrigatórios.', 2);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"card justify-content-center\" id=\"ContainerFormulario\">\r\n        <div className=\"card-header\">\r\n          <h1 className=\"fw-bolder mt-2 mb-1 fs-6 font-monospace\">\r\n            <span className=\"bi bi-person me-2\"></span>{clienteId ? 'Editar Cliente' : 'Novo Cliente'}\r\n          </h1>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <FloatingLabel controlId=\"Nome\" className=\"mb-2\" label=\"Nome\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Nome\"\r\n              name=\"Nome\"\r\n              value={formData.Nome}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Documento\" className=\"mb-2\" label=\"Documento\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Documento\"\r\n              name=\"Documento\"\r\n              value={formData.Documento}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Telefone\" className=\"mb-2\" label=\"Telefone\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Telefone\"\r\n              name=\"Telefone\"\r\n              value={formData.Telefone}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Endereco\" className=\"mb-2\" label=\"Endereço\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Endereço\"\r\n              name=\"Endereco\"\r\n              value={formData.Endereco}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end card-footer\">\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            {clienteId ? 'Salvar' : 'Cadastrar'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClienteForm;\r\n","import React from 'react';\r\n\r\nconst Table = ({ dataHeader, columns, rows }) => {\r\n  return (\r\n    <div className=\"my-3 container p-1\">\r\n      {/* Título e botão de ação */}\r\n      <div className=\"d-flex container justify-content-between mb-2 row container mx-auto p-1\">\r\n        <h1 className=\"text-start col\" style={{ fontSize: '1.0rem' }}>\r\n          <i className={`bi bi-${dataHeader.icon}-fill`}></i> {dataHeader.title}\r\n        </h1>\r\n        <button\r\n          onClick={dataHeader.onClickBtn}\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm col-auto mx-auto me-sm-2\"\r\n          style={{ fontSize: '0.8rem' }}\r\n        >\r\n          <i className={`bi bi-${dataHeader.iconBtn} me-1`} style={{ fontSize: '0.8rem' }}></i>\r\n          {dataHeader.buttonText}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Tabela */}\r\n      <div className=\"container p-3 mx-auto bg-dark rounded\">\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover table-sm table-dark\">\r\n            <thead>\r\n              <tr className=\"font-monospace\" style={{ fontSize: '0.8rem' }}>\r\n                {columns.map((colTitle, index) => (\r\n                  <th key={index} scope=\"col\" className={`${index === 0 ? 'text-start' : index === columns.length - 1 ? 'text-end' : 'text-center'}`}>\r\n                    {colTitle}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-group-divider\">\r\n              {rows.map((row, rowIndex) => (\r\n                <tr key={rowIndex} className=\"font-monospace\" style={{ fontSize: '0.8rem' }}>\r\n                  {row.data.map((cell, cellIndex) => (\r\n                    <td key={cellIndex} className={`${cellIndex === 0 ? 'text-start' : 'text-center'} align-middle`}>\r\n                      {cell}\r\n                    </td>\r\n                  ))}\r\n                  <td className=\"text-end align-middle\">\r\n                    <div className=\"btn-group-sm btn-group\" role=\"group\" aria-label=\"Ações\">\r\n                      {row.actions.map((action, actionIndex) => (\r\n                        <button\r\n                          key={actionIndex}\r\n                          type=\"button\"\r\n                          className={`btn btn-${action.type} btn-sm`}\r\n                          onClick={action.onClick}\r\n                          title={action.name}\r\n                        >\r\n                          <i className={action.icon}></i>\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n// Hook customizado para controlar o modal\r\nexport const useCustomModal = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const CustomModal = ({ icon, title, children, footer }) => (\r\n    <Modal\r\n      show={show}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      contentClassName=\"bg-light\"\r\n      dialogClassName=\"modal-md modal-dialog-centered  modal-dialog-scrollable  \"\r\n      aria-labelledby=\"staticBackdropLabel\"\r\n    >\r\n      <Modal.Header className=\"text-dark py-2\">\r\n        <h5 id=\"staticBackdropLabel\" className=\"modal-title fs-5 font-monospace text-black fw-bolder\">\r\n          <i className={`me-2 bi bi-${icon}`}></i>\r\n          {title}\r\n        </h5>\r\n        <Button\r\n          variant=\"link\"\r\n          onClick={() => setShow(false)}  // <-- Corrigido aqui\r\n          className=\"ms-auto mt-0 p-0\"\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n        >\r\n          <i className=\"bi bi-x fw-bold\" style={{ fontSize: '25px' }} />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"text-dark\">\r\n        {children}\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"text-dark py-2 d-flex  justify-content-between\">\r\n        {footer}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n\r\n  return { CustomModal, setShow };\r\n};\r\n","import React from 'react';\r\n\r\n// Refatorando o Input com React.memo e forwardRef para otimizar a renderização\r\nconst Input = (({ id, name, type = 'text', label, value, onChange }) => {\r\n    return (\r\n        <div className={`form-floating mb-2 `}>\r\n            <input\r\n                type={type}\r\n                className=\"form-control\"\r\n                id={id}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange} // Certifique-se de que onChange está sendo usado corretamente\r\n            />\r\n            <label htmlFor={id}>{label}</label>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Input\r\n","import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Select = forwardRef(({ id, name, options = [], value, onChange, className = '', ...props }, ref) => {\r\n    // Verifica se options é um array e não é nulo ou indefinido\r\n    const renderOptions = Array.isArray(options) ? options : [];\r\n\r\n    return (\r\n        <div className={`form-floating mb-2 ${className}`}>\r\n            <select\r\n                id={id}\r\n                name={name}\r\n                className=\"form-control\"\r\n                value={value}\r\n                onChange={onChange}\r\n                ref={ref}\r\n                {...props}\r\n            >\r\n                {renderOptions.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <label htmlFor={id}>{props.label}</label>\r\n        </div>\r\n    );\r\n});\r\n\r\nSelect.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    options: PropTypes.arrayOf(PropTypes.shape({\r\n        value: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    className: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n};\r\n\r\nSelect.defaultProps = {\r\n    value: '',\r\n    onChange: () => { },\r\n    className: '',\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\n\r\nconst Label = ({ htmlFor, title, value, iconClass }) => (\r\n    <div className=\"form-group\">\r\n        <label className=\"col-auto fw-bolder col-form-label fw-bold pe-1\" htmlFor={htmlFor}>\r\n            {iconClass && <i className={`bi me-2 bi-${iconClass}`}></i>}\r\n            {title}\r\n        </label>\r\n        {value && <span id={htmlFor}>{value}</span>}\r\n    </div>\r\n);\r\n\r\nexport default Label;\r\n","export default class CustomInterface {\r\n    constructor(data = {}) {\r\n        // Inicializa as propriedades comuns 'created' e 'updated'\r\n        this.created = data.created ? new Date(data.created) : new Date();  // Data de criação (pode vir da API ou ser a data atual)\r\n        this.updated = data.updated ? new Date(data.updated) : new Date();  // Data de última atualização (pode vir da API ou ser a data atual)\r\n    }\r\n\r\n    // Método que transforma a instância da interface no formato para ser enviado à API\r\n    toApiPayload() {\r\n        return {\r\n            created: this.created.toISOString(),  // Converte a data para o formato ISO\r\n            updated: this.updated.toISOString(),  // Converte a data para o formato ISO\r\n        };\r\n    }\r\n}\r\n","import CustomInterface from './CustomInterface';\r\n\r\nexport default class CobrancaInterface extends CustomInterface {\r\n    constructor(data = {}) {\r\n        // Chamando o construtor da classe base para inicializar 'created' e 'updated'\r\n        super(data);\r\n\r\n        // Inicializações específicas para CobrancaInterface\r\n        this.id_cobranca = data.id_cobranca || '';\r\n        this.descricao = data.descricao || '';\r\n        this.valor = data.valor || 0.0;\r\n        this.data = data.data || new Date(); // Data padrão para o campo 'data'\r\n        this.pago = data.pago || false;\r\n        this.cliente_id = data.cliente_id || '';\r\n    }\r\n\r\n    static fromApiResponse(data) {\r\n        return new CobrancaInterface(data);\r\n    }\r\n\r\n    toApiPayload() {\r\n        return {\r\n            ...super.toApiPayload(), // Inclui 'created' e 'updated' da classe base\r\n            id_cobranca: this.id_cobranca,\r\n            descricao: this.descricao,\r\n            valor: this.valor,\r\n            data: this.data,\r\n            pago: this.pago,\r\n            cliente_id: this.cliente_id,\r\n        };\r\n    }\r\n}\r\n","import CustomInterface from './CustomInterface';\r\nimport CobrancaInterface from './CobrancaInterface';\r\n\r\nexport default class ClienteInterface extends CustomInterface {\r\n    constructor(data = {}) {\r\n        super(data);  // Chama o construtor da CustomInterface para inicializar 'created' e 'updated'\r\n\r\n        // Inicializações específicas para ClienteInterface\r\n        this.id = data.id || '';  // UUID do cliente\r\n        this.nome = data.nome || '';  // Nome do cliente\r\n        this.documento = data.documento || '';  // Documento do cliente (CPF/CNPJ)\r\n        this.telefone = data.telefone || '';  // Telefone do cliente\r\n        this.endereco = data.endereco || '';  // Endereço do cliente\r\n        this.usuarioId = data.usuarioId || '';  // UUID do usuário relacionado a esse cliente\r\n\r\n        // Inicializa a lista de cobranças\r\n        this.cobrancas = this.initializeCobrancas(data.cobrancas);\r\n    }\r\n\r\n    // Método privado para inicializar a lista de cobranças\r\n    initializeCobrancas(cobrancasData) {\r\n        return Array.isArray(cobrancasData) \r\n            ? cobrancasData.map(cobranca => new CobrancaInterface(cobranca))\r\n            : [];  // Retorna uma lista vazia se não for um array\r\n    }\r\n\r\n    // Método estático para criar uma instância da interface a partir da resposta da API\r\n    static fromApiResponse(data) {\r\n        return new ClienteInterface(data);\r\n    }\r\n\r\n    // Método para preparar os dados para enviar à API\r\n    toApiPayload() {\r\n        return {\r\n            ...super.toApiPayload(),  // Inclui 'created' e 'updated' da CustomInterface\r\n            id: this.id,\r\n            nome: this.nome,\r\n            documento: this.documento,\r\n            telefone: this.telefone,\r\n            endereco: this.endereco,\r\n            usuarioId: this.usuarioId,\r\n            cobrancas: this.cobrancas.map(cobranca => cobranca.toApiPayload()),  // Converte cada cobrança para o formato de payload\r\n        };\r\n    }\r\n}\r\n","import ClienteInterface from '@interface/ClienteInterface';\r\nimport request from '@utils/api';  \r\n\r\n\r\nexport default class  ClienteService {\r\n    // Método para obter um cliente pelo ID\r\n    async getClienteById(id) {\r\n        const response = await request(`cliente/${id}`, 'GET');\r\n        return response.success ? ClienteInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para obter todos os clientes\r\n    async getAllClientes() {\r\n        const response = await request('cliente', 'GET');\r\n        return response.success ? response.data.map(cliente => ClienteInterface.fromApiResponse(cliente)) : [];\r\n    }\r\n\r\n    // Método para criar um novo cliente\r\n    async createCliente(clienteDTO) {\r\n        const response = await request('cliente', 'POST', clienteDTO);\r\n        return response.success ? ClienteInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para atualizar um cliente existente\r\n    async updateCliente(id, clienteDTO) {\r\n        const response = await request(`cliente/${id}`, 'PUT', clienteDTO);\r\n        return response.success ? ClienteInterface.fromApiResponse(response.data) : null;\r\n    }\r\n\r\n    // Método para excluir um cliente\r\n    async deleteCliente(id) {\r\n        const response = await request(`cliente/${id}`, 'DELETE');\r\n        return response.success;\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Input from '@objetos/Input';\r\nimport Select from '@objetos/Select';\r\nimport Label from '@objetos/Label';\r\nimport ClienteService  from '@service/ClienteService';\r\nimport ClienteInterface from '@interface/ClienteInterface';\r\nimport alerta from '@utils/alerta';\r\n\r\nconst useClienteForm = (id, isEditable) => {\r\n    const [formValues, setFormValues] = useState({\r\n        nome: '',\r\n        telefone: '',\r\n        tipo_cliente: '',\r\n        descricao: '',\r\n        endereco: '',\r\n    });\r\n    const [cliente, setCliente] = useState({});\r\n\r\n    const showMessage = (message) => alerta(message);\r\n\r\n\r\n    const fetchCliente = useCallback(async () => {\r\n        if (!id) {\r\n            showMessage('ID do cliente não fornecido');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await ClienteService.getCliente(id);\r\n            if (response.sucesso) {\r\n                const clienteData = ClienteInterface.fromApiResponse(response.data);\r\n                setFormValues(clienteData);\r\n                setCliente(clienteData);\r\n            } else {\r\n                showMessage(response.message);\r\n            }\r\n        } catch {\r\n            showMessage('Erro ao buscar cliente');\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            fetchCliente();\r\n        }\r\n    }, [id, fetchCliente]);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormValues((prevValues) => ({\r\n            ...prevValues,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const validatePayload = ({ nome, telefone, tipo_cliente }) => {\r\n        const errors = [];\r\n        if (!nome.trim()) errors.push('Nome do cliente é obrigatório.');\r\n        if (!telefone.trim()) errors.push('Telefone é obrigatório.');\r\n        if (!tipo_cliente.trim()) errors.push('Tipo de cliente é obrigatório.');\r\n        return errors;\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const errors = validatePayload(formValues);\r\n        if (errors.length > 0) {\r\n            showMessage(`Erro:\\n${errors.join('\\n')}`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await ClienteService.updateCliente(id, formValues);\r\n            if (response.sucesso) {\r\n                showMessage('Cliente atualizado com sucesso!');\r\n            } else {\r\n                showMessage(response.message);\r\n            }\r\n        } catch {\r\n            showMessage('Erro ao atualizar cliente');\r\n        }\r\n    };\r\n\r\n    const renderForm = () => (\r\n        <div >\r\n            <Input id=\"nome\" name=\"nome\" value={formValues.nome} label=\"Nome do Cliente\" onChange={handleChange} />\r\n            <Input id=\"telefone\" name=\"telefone\" value={formValues.telefone} label=\"Telefone\" onChange={handleChange} type=\"tel\" />\r\n            <Select\r\n                id=\"tipo_cliente\"\r\n                name=\"tipo_cliente\"\r\n                value={formValues.tipo_cliente}\r\n                label=\"Tipo de Cliente\"\r\n                options={[\r\n                    { value: 'Pessoa Física', label: 'Pessoa Física' },\r\n                    { value: 'Pessoa Jurídica', label: 'Pessoa Jurídica' },\r\n                ]}\r\n                onChange={handleChange}\r\n            />\r\n            <Input id=\"descricao\" name=\"descricao\" value={formValues.descricao} label=\"Descrição\" onChange={handleChange} />\r\n        </div>\r\n    );\r\n\r\n    const renderLabels = () => (\r\n        <div >\r\n            <Label htmlFor=\"nome\" title=\"Nome do Cliente:\" value={cliente.nome || ''} iconClass=\"person\" />\r\n            <Label htmlFor=\"telefone\" title=\"Telefone:\" value={cliente.telefone || ''} iconClass=\"telephone\" />\r\n            <Label htmlFor=\"tipo_cliente\" title=\"Tipo de Cliente:\" value={cliente.tipo_cliente || ''} iconClass=\"tag\" />\r\n            <Label htmlFor=\"descricao\" title=\"Descrição:\" value={cliente.descricao || ''} iconClass=\"info-circle\" />\r\n            <Label htmlFor=\"endereco\" title=\"Endereço:\" value={cliente.endereco || ''} iconClass=\"house\" />\r\n        </div>\r\n    );\r\n\r\n    return isEditable ? { handleSubmit, renderForm } : { renderForm: renderLabels };\r\n};\r\n\r\nexport default useClienteForm;\r\n","import React, { useState } from 'react';\r\nimport { useCustomModal } from 'src/components/objetos/Modal';\r\nimport alerta from 'src/utils/alerta';\r\nimport useClienteForm from './useClienteForm';\r\n\r\nconst useUsuarioModal = (id) => {\r\n    const { CustomModal, setShow } = useCustomModal();\r\n    const [clienteId, setClienteId] = useState(null);\r\n    const { renderForm } = useClienteForm(clienteId, false); // Chama o hook aqui\r\n\r\n    const openModal = (id_cliente = false, view = false) => {\r\n        if (!id_cliente) {\r\n            alerta('ID do cliente não fornecido');\r\n            return setShow(false);\r\n        }\r\n\r\n        setClienteId(id_cliente); // Armazena o ID do cliente\r\n        setShow(view);\r\n    };\r\n\r\n    const renderFooter = () => (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary btn-sm mx-auto\"\r\n            onClick={() => setShow(false)}\r\n        >\r\n            Fechar\r\n        </button>\r\n    );\r\n\r\n    const ClienteModalComponent = () => (\r\n        <CustomModal\r\n            icon=\"person\"\r\n            title=\"Visualizar Cliente\"\r\n            children={renderForm()}\r\n            footer={renderFooter()}\r\n        />\r\n    );\r\n\r\n    return { openModal, ClienteModalComponent };\r\n};\r\n\r\nexport default useUsuarioModal;\r\n","import React, { useState } from 'react';\r\nimport { useCustomModal } from 'src/components/objetos/Modal';\r\n\r\nconst useConfirmationModal = () => {\r\n    const { CustomModal, setShow } = useCustomModal();\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [onConfirm, setOnConfirm] = useState(() => () => { });\r\n\r\n    const openModal = (title, description, onConfirmCallback) => {\r\n        setTitle(title);\r\n        setDescription(description);\r\n        setOnConfirm(() => onConfirmCallback);\r\n        setShow(true); // Abre o modal\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShow(false); // Fecha o modal\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        onConfirm(); // Executa a função de confirmação\r\n        closeModal(); // Fecha o modal\r\n    };\r\n\r\n    const renderFooter = () => (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary btn-sm me-auto\"\r\n                onClick={closeModal}>\r\n                Cancelar\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-sm\"\r\n                onClick={handleConfirm}>\r\n                Confirmar\r\n            </button>\r\n        </>\r\n    );\r\n\r\n    const ConfirmationModalComponent = () => (\r\n        <CustomModal\r\n            icon=\"exclamation-triangle\"\r\n            title={title}\r\n            children={<p>{description}</p>}\r\n            footer={renderFooter()}\r\n        />\r\n    );\r\n\r\n    return { openModal, ConfirmationModalComponent };\r\n};\r\n\r\nexport default useConfirmationModal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Table from '@objetos/Table';\r\nimport useClienteModal from './useClienteModal';\r\nimport useConfirmationModal from '@objetos/useConfirmationModal';\r\nimport  ClienteInterface  from '@interface/ClienteInterface';\r\nimport  ClienteService   from '@service/ClienteService';\r\nimport Alerta from '@utils/alerta';\r\n\r\nconst ClienteLista = () => {\r\n    const [clientes, setClientes] = useState([]);\r\n    const navigate = useNavigate(); // Usando useNavigate para navegação\r\n\r\n    const { openModal: openClienteModal, ClienteModalComponent } = useClienteModal();\r\n    const { openModal: openConfirmationModal, ConfirmationModalComponent } = useConfirmationModal();\r\n\r\n    const fetchClientes = useCallback(async () => {\r\n        try {\r\n            const response = await ClienteService.getClientesByEmpresa();\r\n            if (response.sucesso) {\r\n                const clientes = response.data.map(clienteData => ClienteInterface.fromApiResponse(clienteData));\r\n                setClientes(clientes);\r\n            } else {\r\n                Alerta(response.message,3,\"id_msg\");\r\n            }\r\n        } catch (error) {\r\n            Alerta('Erro ao buscar clientes'+ error,2,\"id_msg\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchClientes();\r\n    }, [fetchClientes]);\r\n\r\n    const handleDelete = async (id_cliente) => {\r\n        openConfirmationModal(\r\n            'Confirmar Exclusão',\r\n            'Você tem certeza que deseja excluir este cliente?',\r\n            async () => {\r\n                try {\r\n                    const response = await ClienteService.deleteCliente(id_cliente);\r\n                    if (response.sucesso) {\r\n                        setClientes(prevClientes => prevClientes.filter(cliente => cliente.id_cliente !== id_cliente));\r\n                        Alerta(response.message);\r\n                    } else {\r\n                        Alerta(response.message, 2, 'id_msg');\r\n                    }\r\n                } catch (error) {\r\n                    Alerta('Erro ao excluir cliente'+ error, 2, 'id_msg');\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const columns = ['Nome', 'Telefone', 'Ações'];\r\n\r\n    const rows = clientes.map(cliente => ({\r\n        data: [\r\n            cliente.nome,\r\n            cliente.telefone\r\n        ],\r\n        actions: [\r\n            {\r\n                name: 'Editar',\r\n                icon: 'bi-pencil',\r\n                type: 'primary',\r\n                onClick: () => navigate(`/clientes/editar/${cliente.id_cliente}`)\r\n            },\r\n            {\r\n                name: 'Visualizar',\r\n                icon: 'bi-eye',\r\n                type: 'success',\r\n                onClick: () => openClienteModal(cliente.id_cliente, true)\r\n            },\r\n            {\r\n                name: 'Excluir',\r\n                icon: 'bi-trash',\r\n                type: 'danger',\r\n                onClick: () => handleDelete(cliente.id_cliente)\r\n            }\r\n        ]\r\n    }));\r\n\r\n    const dataHeader = {\r\n        icon: 'people',\r\n        title: 'Lista de Clientes',\r\n        iconBtn: 'plus',\r\n        buttonText: 'Criar Novo Cliente',\r\n        onClickBtn: () => navigate('/clientes/cadastrar')\r\n    };\r\n\r\n    return (\r\n        <div id='id_msg'>\r\n            <Table\r\n                dataHeader={dataHeader}\r\n                columns={columns}\r\n                rows={rows}\r\n            />\r\n            <ClienteModalComponent />\r\n            <ConfirmationModalComponent />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClienteLista;\r\n","const ClienteView = () => {\r\n    return (\r\n       <div></div>\r\n    );\r\n};\r\n\r\nexport default ClienteView;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\r\nimport alerta from 'src/utils/alerta';\r\nimport request from 'src/utils/api';\r\nimport loading from 'src/utils/loading';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CobrancaForm({ cobrancaId, initialData, clienteId }) {\r\n  const [formData, setFormData] = useState({\r\n    Descricao: initialData?.Descricao || '',\r\n    Valor: initialData?.Valor || 0.0,\r\n    Data: initialData?.Data ? new Date(initialData.Data).toISOString().split('T')[0] : '', // Ajuste para o formato de data\r\n    Pago: initialData?.Pago || false,\r\n    ClienteId: clienteId || initialData?.ClienteId || \"\", // Presumindo que ClienteId seja fornecido externamente\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const submit = async () => {\r\n    try {\r\n      loading(true, \"ContainerFormulario\");\r\n      const endpoint = cobrancaId ? `public/cobrancas/${cobrancaId}/` : 'public/cobrancas/';\r\n      const method = cobrancaId ? 'PUT' : 'POST';\r\n      const response = await request(endpoint, method, formData);\r\n      if (response.success) {\r\n        alerta(response.message, 1);\r\n        navigate('/cobrancas'); // Navega para a lista de cobranças ou para a página desejada\r\n      } else {\r\n        alerta(response.message, 2);\r\n      }\r\n    } catch (error) {\r\n      alerta('Erro ao salvar os dados. Por favor, tente novamente.', 2);\r\n    } finally {\r\n      loading(false, \"ContainerFormulario\");\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    // Implemente a validação dos dados do formulário aqui\r\n    return formData.Descricao && formData.Valor >= 0 && formData.Data && formData.ClienteId;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (validate()) {\r\n      await submit();\r\n    } else {\r\n      alerta('Por favor, preencha todos os campos obrigatórios e valide os dados.', 2);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"card justify-content-center\" id=\"ContainerFormulario\">\r\n        <div className=\"card-header\">\r\n          <h1 className=\"fw-bolder mt-2 mb-1 fs-6 font-monospace\">\r\n            <span className=\"bi bi-cash me-2\"></span>{cobrancaId ? 'Editar Cobrança' : 'Nova Cobrança'}\r\n          </h1>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <FloatingLabel controlId=\"Descricao\" className=\"mb-2\" label=\"Descrição\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Descrição\"\r\n              name=\"Descricao\"\r\n              value={formData.Descricao}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Valor\" className=\"mb-2\" label=\"Valor\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"Valor\"\r\n              name=\"Valor\"\r\n              value={formData.Valor}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <FloatingLabel controlId=\"Data\" className=\"mb-2\" label=\"Data\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Data\"\r\n              name=\"Data\"\r\n              value={formData.Data}\r\n              onChange={handleInputChange}\r\n            />\r\n          </FloatingLabel>\r\n          <Form.Check \r\n            type=\"checkbox\"\r\n            id=\"Pago\"\r\n            label=\"Pago\"\r\n            name=\"Pago\"\r\n            checked={formData.Pago}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"d-flex justify-content-end card-footer\">\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            {cobrancaId ? 'Salvar' : 'Cadastrar'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CobrancaForm;\r\n","function CobrancaView() {\r\n\r\n}\r\nexport default   CobrancaView;","function CobrancaLista() {\r\n\r\n}\r\nexport default   CobrancaLista;","function UsuarioForm() {\r\n\r\n}\r\nexport default   UsuarioForm;","function UsuarioLista() {\r\n\r\n}\r\nexport default   UsuarioLista;","function UsuarioView() {\r\n\r\n}\r\nexport default   UsuarioView;","import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useAuth } from '@utils/AuthProvider'; \r\n\r\n// Componentes\r\nimport Login from '@default/login';\r\nimport Cadastro from '@default/cadastro';\r\nimport Erro from '@components/erro';\r\n\r\nimport ClienteForm from '@cliente/ClienteForm';\r\nimport ClienteLista from '@cliente/ClienteLista';\r\nimport ClienteView from '@cliente/ClienteView';\r\n\r\nimport CobrancaForm from '@cobranca/CobrancaForm';\r\nimport CobrancaView from '@cobranca/CobrancaView';\r\nimport CobrancaLista from '@cobranca/CobrancaLista';\r\n\r\n// Novos componentes para usuário\r\nimport UsuarioForm from '@usuario/UsuarioForm';\r\nimport UsuarioLista from '@usuario/UsuarioLista';\r\nimport UsuarioView from '@usuario/UsuarioView';\r\n\r\nconst Router = () => {\r\n  const { isAuthenticated } = useAuth(); // Obtém o estado de autenticação\r\n\r\n  return (\r\n    <Routes>\r\n      {/* Rotas públicas */}\r\n      <Route path=\"/\" element={<Login />} />\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/cadastro\" element={<Cadastro />} />\r\n      <Route\r\n        path=\"/erro-interno\"\r\n        element={<Erro title=\"Erro Interno\" descricao=\"Ocorreu um erro interno no servidor. Tente novamente mais tarde.\" />}\r\n      />\r\n      <Route\r\n        path=\"*\"\r\n        element={<Erro title=\"Página Não Encontrada\" descricao=\"A página que você está procurando não existe.\" />}\r\n      />\r\n\r\n      {/* Rotas privadas para Cliente */}\r\n      <Route path=\"/cliente/\" element={isAuthenticated ? <ClienteLista /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cliente/create/\" element={isAuthenticated ? <ClienteForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cliente/edit/:id\" element={isAuthenticated ? <ClienteForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cliente/view/:id\" element={isAuthenticated ? <ClienteView /> : <Navigate to=\"/login\" />} />\r\n\r\n      {/* Rotas privadas para Cobrança */}\r\n      <Route path=\"/cobranca/\" element={isAuthenticated ? <CobrancaLista /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cobranca/edit/:id\" element={isAuthenticated ? <CobrancaForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cobranca/create/\" element={isAuthenticated ? <CobrancaForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/cobranca/view/:id\" element={isAuthenticated ? <CobrancaView /> : <Navigate to=\"/login\" />} />\r\n\r\n      {/* Rotas privadas para Usuário */}\r\n      <Route path=\"/usuario/\" element={isAuthenticated ? <UsuarioLista /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/usuario/create/\" element={isAuthenticated ? <UsuarioForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/usuario/edit/:id\" element={isAuthenticated ? <UsuarioForm /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/usuario/view/:id\" element={isAuthenticated ? <UsuarioView /> : <Navigate to=\"/login\" />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Base from './components/Base';\r\nimport RouterConfig from './router';\r\nimport { AuthProvider } from './utils/AuthProvider'; // Importar o AuthProvider\r\n\r\nconst App = () => (\r\n  <AuthProvider>\r\n    <Router>\r\n      <Base>\r\n        <RouterConfig />\r\n      </Base>\r\n    </Router>\r\n  </AuthProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client'; \r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'src/assets/css/Global.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\n\r\nroot.render(\r\n    <App />\r\n);\r\n"],"sourceRoot":""}